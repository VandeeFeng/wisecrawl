[
    {
        "title": "腾讯 Kuikly 正式开源，了解一下这个基于 Kotlin 的全平台框架",
        "url": "https://juejin.cn/post/7497558282410115091",
        "source": "juejin",
        "hot": 5274,
        "time": "",
        "timestamp": 1745747846000,
        "extracted_time": "2025-04-27T09:57:26+00:00",
        "content": "在 3月的时候通过 《腾讯 TDF 即将开源 Kuikly 跨端框架，Kotlin 支持全平台》 我们大致知道了 Kuikly 的基本情况，Kuikly 是一个面向终端技术栈的跨端开发框架，完全基于kotlin语言开发，提供原生的性能和体验。\n按照官方的说法：\nKuikly\n是基于Kotlin Multiplatform 的 UI 与逻辑全面跨端综合解决方案，由腾讯大前端领域 Oteam（公司级）推出，目的在于提供一套一码多端、极致易用、动态灵活的全平台高性能开发框架。\n当然，虽然是全平台，但是目前暂时只开源了 Android 和 iOS，鸿蒙部分 5 月才开源，而 Web 和 小程序暂定是 Q2：\n官方表示 Kuikly 在腾讯内部本身已经支持了小程序 + H5 ，后续会分步骤开放，可能下一期还不会是所有小程序平台。\n那 Kuikly 如何实现跨平台？目前 Kuikly 主要是在 KMP 的基础上实现的自研 DSL 来构建 UI ，比如 iOS 平台的 UI 能力就是 UIkit ，而大家更熟悉的 Compose 支持，目前还处于开发过程中：\nSwiftUI 和 Compose 无法直接和 Kuikly 一起使用，但是 Kuikly 可以在 DSL 语法和 UI 组件属性对齐两者的写法，变成一个类 Compose 和 SwiftUI 的 UI 框架，也就是 Compose DSL 大概就是让 Kuikly 更像 Compose ，而不是直接适配 Compose ？\n那么大家可能会有疑问，既然借助了平台控件的能力，那它和 RN 有什么区别？\n首先 Kuikly 是直接从编译产物的角度实现跨平台，它的编译产物与原生一致，和 RN 是在运行时转换为原生控件不同，Kotlin 是直接编译为对应平台的原生代码，所以在运行时其实就类似原生 code 。\n那 Kuikly 又如何保证多端 UI 一致？答案是 Kuikly 实现了自己的一套「薄原生层」。\n首先在 Kotlin 层，Kuikly 将虚拟 Dom 方案优化为直调方案，这里 Kotlin View API 直调，避免 JSON 序列化/反序列化损耗，同时只维护一棵树，更轻量和O(1)同步UI更新：\n之后，Kuikly 使用“非常薄”的原生层，该原生层只暴露最基本和无逻辑的 UI 组件（原子组件），也就是 Kuikly 在 UI 上只用了最基本的原生层 UI ，真正的 UI 逻辑主要在共享的 Kotlin 代码来实现：\n通过将 UI 逻辑抽象到共享的 Kotlin 层，减少平台特定 UI 差异或行为差异的可能性，「薄原生层」充当一致的渲染目标，确保 Kotlin 定义的 UI 元素在所有平台上都以类似的方式显示。\n也就是说，Kuikly 虽然会依赖原生平台的控件，但是大部分控件的实现都已经被「提升」到 Kuikly 自己的 Kotlin 共享层，目前 Kuikly 实现了 60% UI 组件的纯 Kotlin 组合封装实现，不需要 Native 提供原子控件 ：\n最容易出现不一致的高阶组件都通过 Kotlin 实现，比如 List 列表控件，Kuikly 通过对齐 Native 的 List 内部实现原理，然后再用 Kotlin 重写一次，从而实现真正的高一致性 UI 组件跨平台实现。\n所以基于上面的内容，我们再来看 Kuikly UI 官方提供的结构图，是不是就清晰了很多：\n- Core 模块提供了统一的 UI 逻辑实现和 API 接口\n- Render 模块负责在 Android、iOS、HarmonyOS、H5 以及各种小程序等多个平台上实现 UI 的渲染 。\n另外在 Kuikly 领域，还有一套名为 KuiklyBase 服务，它是独立于 Kuikly UI 之外，为 Kuikly 提供基础设施支持，比如为 iOS、Android 和鸿蒙三大移动平台提供了统一的底层基建能力：\nKuiklyBase 强调在不同平台之间实现高性能的逻辑共享 ，它更像是 KMP 的进一步定制，KuiklyBase 兼容标准的 Kotlin Multiplatform 组件，允许复用成熟的 KMP 组件，比如有些业务各端都已经有 UI 层的实现，仅仅需要非 UI 的业务逻辑实现跨端，而通过 KuiklyBase 的基础设施，也可以满足这种场景的需求。\n另外 KuiklyBase 还提供了对 HarmonyOS 平台的全面支持，包括 KN HarmonyOS 编译、调试和构建能力。\n也就是 Kuikly 在鸿蒙有支持 Kotlin Native 高性能版本。\n同时，KuiklyBase 还提供了强大的多线程和协程能力，支持复杂业务逻辑的跨平台并行处理，以满足高性能场景的需求。\n并且在开发工具链方面，KuiklyBase 覆盖了从脚手架搭建到调试、构建、发布和监控的整个流程，特别是支持和 Bugly 和 Shiply 联动提供配套能力。\n最后，KuiklyBase 还内置了性能优化工具，并针对 HarmonyOS 和 iOS 提供了优化的调试体验 。\n目前使用 KuiklyBase 业务的团队：腾讯视频、浏览器、新闻、输入法、理财通····\n当然，这里需要注意的是， KuiklyBase 和 KuiklyUI 一起使用，某种情况下会存在场景冲突：\n- KuiklyUI 的 iOS 和鸿蒙动态化方案主要利用了 Kotlin/JS 编译成 js 产物，动态下发到宿主的js引擎去执行\n- KuiklyBase 利用 Kotlin/Native 编译成高性能的二进制产物执行，因此没有解耦 KuiklyBase 的 KMP 组件，在 iOS 和鸿蒙在动态化场景需要注意兼容\n所以，动态化决定了你优先使用哪个支持：\n-\n无动态化诉求场景: KuiklyBase + KuiklyUI = 完美\n-\n有动态化诉求场景: KuiklyBase 兼容 js 动态化方案还没完成，短期方案可利用 KuiklyUI 的 Module 方案来作为替代\n上面问题的核心其实是，KuiklyBase 组件因为是 KMP 组件，没有和平台做解耦，动态化时产物会运行在 js 环境中，由于 js 单线程，无法直接提供平台能力等的限制，所以决定了动态化部分不能直接使用多线程和平台能力。\n所以业务在开发过程中需要特别注意在调用平台 KMP 组件能力的时候，需要通过 Kuikly Module 方式进行解耦调用，避免直接依赖。\nKuikly\n作为一个跨端的 UI 框架, 他本身不具备调用平台 API 的能力, 但是Kuikly\n提供了一套Module\n机制，可以通过Module\n机制将平台的 API 暴露给Kuikly\n侧调用，同时Kuikly\n内置了一些通用的Module\n, 如果这些Module\n不满足 业务诉求时, 可以通过扩展原生 API 自定义Module\n, 将更多的宿主平台 API 暴露给Kuikly\n侧使用。\n在 KuiklyUI 内部，模块页面分为两种类型：可动态化类型(内置和动态灵活切换)和纯内置类型(只能内置) ：\n而可动态化类型部分：\n- 不可直接依赖平台能力\n- 不可使用多线程和协程\n- 不可依赖内置部分\n- 不可依赖使用到了平台能力或多线程协程等能力的 KMP 组件，如果无法避免需要使用相关能力，就需要前面提到额 Kuikly Module 进行解耦调用\n核心就是，动态化的只能是 JS 。\n最后，以下是 Kuikly 工程的项目结构说明：\n.\n├── core # 跨平台模块，实现各个平台响应式 UI、布局算法、Bridge 通信等核心能力\n├── src\n├── commanMain # 跨平台共享代码、定义跨平台接口\n├── androidMain # Android 平台实现代码 （aar）\n├── jvmMain # 泛 JVM 平台代码（不涉及 Android API）（jar）\n├── iosMain # iOS 平台实现代码（framework）\n├── core-render-android # android 平台的渲染器模块\n├── core-render-ios # iOS 平台的渲染器模块\n├── core-annotations # 注解模块，定义业务注解 @Page\n├── core-ksp # 注解处理模块，生成 Core 入口文件\n├── buildSrc # 编译脚本，用于编译、打包、分包产物相关脚本\n├── demo # DSL 示例代码\n├── androidApp # Android 宿主壳工程\n└── iosApp # iOS 宿主壳工程\n还有需要注意的是，之前的 Kuikly 的插件还不支持 K2 模式，所以如果你的 IDE 是 K2 模式，需要关闭 K2 才能支持插件：\n而一天之后，已经是 1.0.3 版本，此时 KuiklyTemplate 插件也支持了最新的 K2 模式：\n针对 Mac 用户还提供 kdoctor CI 支持：\n另外，Kuikly 未来也会兼容 Compose DSL ，但是大概率不会是原本的 Compose ，而是类 Compose 的代码组织方式。\n另外，在混合开发领域，在原有 App 集成 Kuikly ，可以把它简单当作如系统 webview 的概念来使用，但是如果在原生列表中嵌入 Kuikly view，目前会因为 Kuikly 本身的异步机制，导致无法同原生列表其它卡片同时生存layout和view结果，造成显示上的不同步。\n可以看到，Kuikly 总得来说还是一个类 RN 框架，但是它又不像 RN 一样的运行时 OEM 原生控件，而是在编译成完成转化为原生代码，并且它抽象出了统一的 「薄原生层」，让大量高阶控件在共享的 Kotlin 层完成实现，只让少量 native 层提供原子组件能力，从而尽可能实现 UI 的多端统一，类似于把原生控件单做 “Canvas\" 效果使用。\n总的来说，Kuikly 既能实现接近原生的性能体验和原生的开发体验，又能提供良好的动态化能力，看起来还是不错的选择。\n最后，官方表示 Kuikly 对于 Android 的同学家基本没有学习成本，只要使用过响应式开发的都能上手，而对于 iOS 同学而已，大概就是需要熟悉一下 Kotlin 语法，不过 Kotlin 和 Swift 相近度挺高，所以上手也不会太困难。\n目前 Kuikly 已经在 QQ、QQ音乐、QQ浏览器、腾讯新闻、搜狗输入法、应用宝、全民K歌、酷狗音乐、酷我音乐、自选股、ima.copilot、微视等多款产品中使用，那么，你觉得你会愿意尝试 Kuikly 吗？",
        "summary": "腾讯开源了 Kuikly 跨平台开发框架，基于 Kotlin 实现，支持 Android、iOS 和鸿蒙，未来将扩展至 Web 和小程序。该框架通过自研 DSL 和薄原生层实现高性能、一致的 UI 跨平台开发。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🔥 我的开源项目火了！竟被各个公众号转发",
        "url": "https://juejin.cn/post/7497183377655087158",
        "source": "juejin",
        "hot": 3195,
        "time": "",
        "timestamp": 1745725447000,
        "extracted_time": "2025-04-27T03:44:07+00:00",
        "content": "前言🌟\n两个月前我写了个摸鱼岛摸鱼网站，从 10 个小功能到现在 20～30个功能，少了不了摸鱼岛的用户的支持以及 pr ，大家的开源精神给我摸鱼岛加了很多助力，还被 DeepSeek 收录以及各个公众号转发，今天也是重新排版，带来摸鱼岛 2.0 的介绍文档，此项目开源，只希望获取各位的小小 star 🌟即是给我的最大鼓励。\n[!NOTE] 本项目为开源项目，使用者必须在网站标注作者名称以及指向本项目的链接。如果不想保留署名，必须首先获得授权。不得用于非法用途。\n[!NOTE]\n在线体验地址🔗\n最新版（域名 2025.09 过期）：fish.codebug.icu/ 稳定版：yucoder.cn/\n后端地址🌈：github.com/lhccong/fis…\n前端地址🏖️：github.com/lhccong/fis…\n[!WARNING] 私部署时记得修改后端接口地址路径指向。\n✨ 开源🌟一站式摸鱼网 ✨\n部署教程 · 目前现状 · 意见反馈 · 截图展示 · 在线演示 · 开源与贡献 · 相关项目 · 赞赏支持\n-\nDeepSeek\n-\n小红书\n- 微信公众号\n功能\n-\n支持多种数据源聚合：\n- [✅] 知乎热榜\n- [✅] 微博热榜\n- [✅] 虎扑步行街热榜\n- [✅] 编程导航热榜\n- [✅] CSDN 热榜\n- [✅] 掘金热榜\n- [✅] B 站热门\n- [✅] 抖音热搜\n- [✅] 网易云热歌榜（支持网站点击播放）\n- [✅] 什么值得买热榜\n- [✅] 待补充...\n-\n每日待办功能。\n-\n摸鱼聊天室：\n- [✅] 发送 emoji 表情包\n- [✅] 发送搜狗在线表情包\n- [✅] 支持网站链接解析\n- [✅] 支持 markdown 文本解析\n- [✅] 支持 AI 助手回答（接入硅基流动模型）\n- [✅] 头像框功能\n- [✅] 用户地理位置显示功能\n- [✅] 用户称号功能\n- [✅] 五子棋、象棋对战邀请功能\n- [✅] 积分红包🧧发送功能\n- [✅] 支持用户 CV 发送图片功能\n-\n摸鱼阅读：\n- [✅] 在线搜书功能\n- [✅] 小窗口观看功能\n- [✅] 支持自定义书源\n-\n小游戏：\n- [✅] 五子棋（人机/在线对战）\n- [✅] 象棋（人机/在线对战）\n- [✅] 2048\n-\n工具箱：\n- [✅] JSON 格式化\n- [✅] 文本比对\n- [✅] 聚合翻译\n- [✅] Git 提交格式生成\n- [✅] AI 智能体\n- [✅] AI 周报助手\n-\n头像框兑换功能。\n-\n其他：\n- [✅] 音乐播放器\n- [✅] 下班薪资计算器（放假倒计时）\n- [✅] 修改网站图标\n- [✅] 网站标题闪烁消息提醒\n- [✅] 摸鱼初始页\n截图展示\n信息聚合\n每日待办\n摸鱼室\n摸鱼阅读\n小游戏\n- 五子棋\n- 象棋\n- 2048\n工具箱\n- JSON 格式化工具\n- 文本比对\n头像框兑换\n目前现状\n- 各大公众号转发。\n-\n用户突破 1k 的个人网站。\n-\n最高峰实时在线人数达 80 +。\n部署教程\n后端\n-\n执行初始化 SQL create_table.sql\n-\n更改 MySQL 地址、Redis 地址、Minio 地址、邮箱发送配置\n-\nMaven 打包\n-\ndocker 部署\n-\ndockerfile 文件\nFROM openjdk:8 ENV workdir=/cong/fish COPY . ${workdir} WORKDIR ${workdir} EXPOSE 8123 CMD [\"java\",\"-jar\",\"-Duser.timezone=GMT+08\",\"fish-island-backend-0.0.1-SNAPSHOT.jar\"]\n-\n打包命令\ndocker build -f ./dockerfile -t fish . 启动命令：docker run -d -e TZ=CST -p 8123:8123 -p 8090:8090 --name \"fish\" fish:latest\n-\nnginx 配置\nserver { listen 80; listen [::]:80; server_name moyuapi.codebug.icu; rewrite ^(.*) https://$server_name$1 permanent; } server { listen 443 ssl; server_name moyuapi.codebug.icu; ssl_certificate /etc/nginx/ssl/cert.pem; ssl_certificate_key /etc/nginx/ssl/key.pem; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { root /usr/share/nginx/fish; index index.html; try_files $uri $uri/ /index.html; } location /fish/ { proxy_pass http://fish:8123/; } # WebSocket代理配置，处理 wss:// 请求 location /ws/ { proxy_pass http://fish:8090/; # 后端 WebSocket 服务地址 proxy_http_version 1.1; # 使用 HTTP/1.1 协议，WebSocket 需要这个版本 proxy_set_header Upgrade $http_upgrade; # 必须设置这些头来支持 WebSocket 协议的升级 proxy_set_header Connection 'upgrade'; # 维持 WebSocket 连接 proxy_set_header Host $host; # 确保 Host 头部传递正确 proxy_cache_bypass $http_upgrade; # 禁用缓存 } location /sogou-api/ { proxy_pass https://pic.sogou.com/; proxy_set_header Host pic.sogou.com; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_ssl_server_name on; # 解决 CORS 问题 add_header Access-Control-Allow-Origin *; add_header Access-Control-Allow-Methods \"GET, POST, OPTIONS\"; add_header Access-Control-Allow-Headers \"DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range\"; add_header Access-Control-Expose-Headers \"Content-Length,Content-Range\"; # 处理 OPTIONS 预检请求 if ($request_method = OPTIONS) { return 204; } } location /holiday/ { proxy_pass https://date.appworlds.cn/; # 保持目标 API 的 Host，避免返回默认网页 proxy_set_header Host date.appworlds.cn; # 伪装成浏览器，防止服务器根据 User-Agent 返回 HTML proxy_set_header User-Agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\"; # 强制服务器返回 JSON，而不是 HTML proxy_set_header Accept \"application/json\"; # CORS 允许跨域 add_header Access-Control-Allow-Origin *; add_header Access-Control-Allow-Methods \"GET, POST, OPTIONS\"; add_header Access-Control-Allow-Headers \"DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range\"; add_header Access-Control-Expose-Headers \"Content-Length,Content-Range\"; # 处理 OPTIONS 预检请求 if ($request_method = OPTIONS) { return 204; } } location /img-api/ { proxy_pass https://i.111666.best/; proxy_set_header Host pic.sogou.com; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_ssl_server_name on; # 解决 CORS 问题 add_header Access-Control-Allow-Origin *; add_header Access-Control-Allow-Methods \"GET, POST, OPTIONS\"; add_header Access-Control-Allow-Headers \"DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range\"; add_header Access-Control-Expose-Headers \"Content-Length,Content-Range\"; # 处理 OPTIONS 预检请求 if ($request_method = OPTIONS) { return 204; } } error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } }\n前端\n- 修改 src/constants/index.ts 的接口地址。\n- max build --打包命令。\n- 部署 dist 文件。\n开源与贡献\n项目支持者 🔥\n前端贡献者 🌟\n后端贡献者 🌟:\n📌 贡献方式\n如果你也有希望聚合的数据源不妨来参加一下贡献，将你的数据源爬取出来放入其中。\n1️⃣ 页面元素抓取\n📌 适用于：目标网站未提供 API，数据嵌入在 HTML 结构中。\n✅ 贡献要求\n-\n推荐使用：\nJsoup\n（Java）BeautifulSoup\n（Python）Cheerio\n（Node.js）\n-\n选择器精准：避免因页面结构变化导致抓取失败。\n-\n减少 HTTP 请求：优化抓取效率，避免重复请求。\n-\n遵守网站爬取规则（\nrobots.txt\n）。\n💡 示例代码\nDocument doc = Jsoup.connect(\"https://example.com\").get();\nString title = doc.select(\"h1.article-title\").text();\n2️⃣ 页面接口返回数据抓取\n📌 适用于：目标网站提供 API，可直接调用接口获取 JSON/XML 数据。\n✅ 贡献要求\n-\n推荐使用：\nHttpClient\n（Java）axios\n（Node.js）requests\n（Python）\n-\n分析 API 请求：确保请求参数完整（\nheaders\n、cookies\n、token\n）。 -\n减少不必要的请求：优化调用频率，避免触发反爬机制。\n-\n异常处理：确保代码稳定运行。\n💡 示例代码\nString apiUrl = \"https://api.example.com/data\";\nString response = HttpRequest.get(apiUrl).execute().body();\nJSONObject json = JSON.parseObject(response);\n🔗 数据源注册\n数据抓取完成后，需要注册数据源，以便系统能够正确使用。\n🚀 注册流程\n-\n添加数据源 Key：\n/src/main/java/com/cong/fishisland/model/enums/HotDataKeyEnum.java\n定义新的数据源 Key。 -\n更新数据源映射：\n/src/main/java/com/lhccong/fish/backend/config/DatabaseConfig.java\n文件中，添加新的数据源配置。\n-\n创建数据源类：\nsrc/main/java/com/cong/fishisland/datasource\n目录下，新建数据源类，继承DataSource\n，实现getHotPost\n方法。\n-\n实现数据获取逻辑：\n- 按照\nHotPostDataVO\n格式返回数据。 - 使用\n@Builder\n注解，确保数据能正确解析。\n- 按照\n💡 示例代码\nHotPostDataVO.builder()\n.title(title)\n.url(url)\n.followerCount(followerCount)\n.excerpt(excerpt)\n.build();\n🚀 贡献流程\n- Fork 仓库 ➜ 点击 GitHub 右上角\nFork\n按钮。 - 创建分支 ➜ 推荐使用有意义的分支名，如\nfeature/data-scraper-optimization\n。 - 提交代码 ➜ 确保代码可读性高，符合规范。\n- 提交 Pull Request（PR） ➜ 详细描述您的更改内容，并关联相关 issue（如有）。\n- 等待审核 ➜ 维护者会进行代码审核并合并。\n以上讲解如果对你有帮助，不妨给我的项目点个小小的 star 🌟，成为一下我的精神股东呢\n🎉 感谢您的贡献！\n您的每一份贡献都让 fish-island 变得更好！💪",
        "summary": "一位开发者开源了名为‘摸鱼岛’的网站，功能包括聚合多个平台热榜、摸鱼聊天室、小游戏、工具箱等，项目被多个公众号转发，用户量超过1000，支持部署和定制。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "产品：上传图片拖拽一下怎么了 ?",
        "url": "https://juejin.cn/post/7497597555347259443",
        "source": "juejin",
        "hot": 3141,
        "time": "",
        "timestamp": 1745738666000,
        "extracted_time": "2025-04-27T07:24:26+00:00",
        "content": "前戏\n一、需求背景：一个产品经理的执念 📌\n\"小X啊，这个商品详情页的图片要能拖动排序，就像手机相册那样丝滑！\"\n—— 来自产品经理的第7次需求变更\n作为前端炒粉，面对这个\"简单\"需求时，我望着Element Plus官方文档陷入了沉思 🤔。el-upload组件虽然能完美处理上传，但原生并不支持已上传图片的拖拽排序。于是，当然是选择满足他啦...\n一、需求背景\n言归歪传，在管理后台开发中，经常需要实现图片上传与排序功能。Element Plus的el-upload组件虽然提供了基础的图片上传功能，但原生并不支持已上传图片的拖拽排序。下面将基于el-upload组件，结合HTML5拖放API，实现图片上传后的拖拽排序的基本功能。\n二、实现效果\n- 上传后的图片支持拖拽交换位置\n- 实时预览拖拽后的排序效果\n三、核心实现分析：魔法背后的秘密 🧙\n1. 模板结构解析🛠️\n2. 逻辑实现🎨\n拖拽二部曲 📦→📦\n🎯第一步：拖拽开始事件处理：dragstart\n- 获取当前拖拽项的索引\n- 将索引存入数据传输对象\nconst handleDragStart = (event, file, type: string) => {\n// 图片列表\nconst imgList = userInfo.picturePc;\nconst index = imgList.findIndex(element => element === file);\nevent.dataTransfer.setData('index', index.toString());\n}\n🎯第二步：拖拽释放事件处理：handleDrop\n- 获取目标位置索引\n- 阻止默认行为\n- 获取拖拽源索引\n- 创建数组副本（保证响应式更新）\n- 执行数组元素移动\n- 更新图片列表\nconst handleDrop = (event, file, type) => {\n// 获取目标位置索引\nconst index = imgList.findIndex(element => element === file);\n// 阻止默认行为\nevent.preventDefault();\n// 获取拖拽源索引\nconst draggedIndex = Number(event.dataTransfer.getData('index'));\n// 创建数组副本（保证响应式更新）\nconst updatedList = [...imgList];\n// 执行数组元素移动\nconst [draggedItem] = updatedList.splice(draggedIndex, 1);\nupdatedList.splice(index, 0, draggedItem);\n// 更新对应类型的图片列表\nuserInfo.picturePc = updatedList\n}\n四、关键点\n1. HTML5拖放API\ndraggable=\"true\"\n：使元素可拖拽@dragstart\n：拖拽开始时触发@drop\n：拖拽释放时触发@dragover.prevent\n：阻止默认拖拽行为dataTransfer\n：跨事件数据传输对象\n2. 数组操作技巧\n// 删除并插入元素的经典写法\nconst updatedList = [...originalList];\nconst [movedItem] = updatedList.splice(oldIndex, 1);\nupdatedList.splice(newIndex, 0, movedItem);\n3. 响应式更新\n通过创建数组副本并重新赋值，触发Vue的响应式更新：\nuserInfo.pictureMobile = updatedList\n五、踩坑日记：程序员的自我修养 📖\n🚧 坑1：幽灵图片问题\n现象：拖拽时出现半透明残影\n解法：给拖拽元素添加CSS样式\n.dragging-item {\nopacity: 0.5;\ntransform: rotate(3deg);\n}\n🚧 坑2：移动端兼容性\n现象：手机滑动触发页面滚动\n解法：添加touch-action样式\n.mobile-container {\ntouch-action: none;\n}\n六、完整实现流程\n- 🎯 初始化el-upload组件，禁用自动上传\n- ✨ 通过file-list绑定图片数据源\n- 🔮 自定义文件项模板，添加拖拽事件\n- ⚡ 实现拖拽开始时的索引记录\n- 🌈 处理拖拽释放时的元素交换）\n- 🧪更新响应式数据触发视图刷新\n七、总结\n通过结合el-upload的文件管理能力和HTML5原生拖放API，简单实现了直观的图片拖拽排序功能。\n这种方案具有以下优势：\n| 优势 | 说明 |\n|---|---|\n| 轻量级 | 无需额外依赖库 |\n| 高兼容 | 基于原生API实现 |\n| 易扩展 | 支持多场景类型参数 |",
        "summary": "文章介绍如何在Element Plus的el-upload组件中，通过HTML5拖放API实现图片上传后的拖拽排序功能，包括拖拽事件处理和数组操作技巧。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "⚡⚡⚡尤雨溪宣布开发 Vite Devtools，这两个很哇塞 🚀 Vite 的插件，你一定要知道！",
        "url": "https://juejin.cn/post/7498258715231354906",
        "source": "juejin",
        "hot": 2160,
        "time": "",
        "timestamp": 1745858604000,
        "extracted_time": "2025-04-28T16:43:24+00:00",
        "content": "前言\n尤雨溪团队月初宣布, VoidZero\n团队以及 NuxtLabs\n合作开发全新的 Vite DevTools。\n文章链接：voidzero.dev/posts/voidz…\n未来 Vite DevTools\n将支持插件管道可视化、打包分析和性能优化建议等功能。\n在 Vite DevTools\n问世之前，我们暂时可以使用下面的两个插件替代一段时间！\n往期精彩推荐\n- 🚀🚀🚀 神了！RedwoodJS 轻松碾压 NextJS，成了我的最爱❤️\n- 🚀🚀🚀 2025 年了，我不允许你还不知道 vite-plugin-pwa\n- 🚀 REST API 还是 ✈️ GraphQL ❓\n- 更多精彩文章欢迎关注我的公众号：萌萌哒草头将军\n正文\nSonda 插件\n功能\nSonda\n是一款用于分析和可视化 Vite\n构建产物的开源工具。它会在每次构建后生成交互式报告，展示打包文件的体积分布（如 Treemap\n图）、依赖关系树、各模块占用空间等信息，帮助开发者快速定位体积异常或性能瓶颈。\n适用场景\n当项目构建完成后，需要对输出文件大小和依赖结构进行分析时，可使用 Sonda\n。它特别适合用于性能优化、验证代码拆分效果或查找冗余依赖等场景。\n安装与使用\n首先安装 Sonda 插件：\nnpm install sonda --save-dev\n然后在 vite.config.js\n中配置插件并启用 source map：\nimport { defineConfig } from 'vite';\nimport Sonda from 'sonda/vite';\nexport default defineConfig({\nbuild: {\nsourcemap: true,\n},\nplugins: [ Sonda() ],\n});\n配置完成后，每次执行构建命令，Sonda\n会在输出目录中生成可交互的分析报告。开发者可通过浏览器查看详细的打包体积和依赖信息。\nvite-plugin-inspect 插件\n功能\nvite-plugin-inspect\n可以在本地开发服务器上开启调试页面，展示 Vite 插件的调用链和模块处理的中间状态。使用该插件时，开发者可以实时查看每个模块经过不同插件处理后的变化，有助于调试构建过程、检查插件执行顺序或编写自定义插件时定位问题。\n值得一提的是，上期我们介绍的 vite-plugin-vue-devtool 就是使用的 vite-plugin-inspect\n，属于是被官方手编了！\n适用场景\n当对 Vite 构建输出不符合预期，或需要深入了解各插件如何转换代码时，可以启用该插件。例如排查某段代码为何未被某个插件处理，或分析插件执行时序等。\n安装与使用\n先执行安装命令：\nnpm install -D vite-plugin-inspect\n然后在 vite.config.js\n中引入并启用插件：\n// vite.config.js\nimport Inspect from 'vite-plugin-inspect';\nexport default {\nplugins: [ Inspect() ]\n}\n启动开发服务器后，打开浏览器访问 http://localhost:5173/__inspect/\n，即可查看插件处理流程界面，包括各模块的中间状态和插件变换过程。\n最后\n相信这两个插件可以在一定程度上替代一段时间 vite-devtool\n的功能了，也希望 它可以早日和大家见面！\n往期精彩推荐\n- 🚀🚀🚀 神了！RedwoodJS 轻松碾压 NextJS，成了我的最爱❤️\n- 🚀🚀🚀 2025 年了，我不允许你还不知道 vite-plugin-pwa\n- 🚀 REST API 还是 ✈️ GraphQL ❓\n- 更多精彩文章欢迎关注我的公众号：萌萌哒草头将军",
        "summary": "尤雨溪团队宣布与 VoidZero 和 NuxtLabs 合作开发 Vite DevTools，支持插件管道可视化、打包分析等功能。目前可使用 Sonda 和 vite-plugin-inspect 插件作为替代。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "别说了别说了 ，Trae 已经在不停优化迭代了",
        "url": "https://juejin.cn/post/7497821254205456410",
        "source": "juejin",
        "hot": 1629,
        "time": "",
        "timestamp": 1745764997000,
        "extracted_time": "2025-04-27T14:43:17+00:00",
        "content": "我正在参加Trae「超级体验官」创意实践征文，本文所使用的 Trae 免费下载链接：www.trae.com.cn/?utm_source…\n一. 前言\n上次简单体验了一把才发布的 Trae ，上一次尝试用 AI 做了一个小工具 ，有好有坏 ，但是整体效果一般。\n但是 Trae 确实是在不断迭代的 ， 感觉到应该是听取了很多的建议 ，这一次再来尝试一下 ，更新后的 Trae 是否能快速帮我完成项目的搭建和开发流程。\n二. 新功能整理\n本次大更新后 ，Trae 多了一些重点的功能 ：\nAI Agent (智能体) ：能够处理更复杂的业务需求\nAI Agent 扩展了传统的 AI 工具用法 ，在任务复杂度 ， 自主性和灵活性等方面都有极大的提升。\n举个例子 ，常规 AI 的功能类似于 \"高级百科搜索\" ，而智能体的定位是 ：\"智能助理\" 。 Agent 可以实现类似于写代码 ，发邮件 ，API 调用 等更加复杂的功能 ，提高生产力。\n智能体一般体现在四大优势 ： 规划 + 记忆 + 工具调用 + 行动。\n- 规划 = 拆分任务+流转把控+动态决策+推理链路\n- 行动 = 选择并执行外部操作+反馈评估+实时修正+直至任务闭环\n- PS ： 说的很玄乎 ，使用上是这样体现的 ：\nMCP : 提供外部统一扩展 ，可以通过 MCP 调用外部工具的现有功能\n为了方便理解 ，先简单的阐述一下 MCP 的作用 ：\nMCP（Model Context Protocol）就是给AI模型提供的“万能适配器”（类似USB-C接口），让AI模型和各种各样的外部工具、数据库、文件系统等用同一种“语言”交流\nTare 可以在应用市场中直接添加 ，或者连接特定智能体 ，现在主要有这些 ：\n- Puppeteer/Browserbase：浏览器自动化操作、网页抓取\n- PostgreSQL / SQLite / MySQL： 数据库交互\n- Figma : 连接图像界面\n- GitLab / Git ： 读取 Git 文件\n类似的工具还有很多 ，这里就不赘述了。 除了使用现成的应用 ，还可以自己创建 MCP Server ，作为远端工具提供支持。\n上下文 ： 能够更好的理解业务和上下文的关系\n- 通过这种圈定上下文的方式 ，内容可以更加准确\n三. 功能的具体体验\n3.1 体验一 ： 代码理解和生成的能力\n- 问题一 ： 让它参考一个页面 ，去生成相关的页面 ，提供了页面的元素\n- 问题二 ： 让他补充了页面的关联关系 ，让侧边栏加入新页面\n- 阶段总结 ：\n单看效果 ，页面要的元素都有了 ，但是没有去思考最终的布局效果 。 不过这个能理解 ，毕竟是基于一个成熟的开源脚手架 ，逻辑还是很复杂的 ，指望全部理解 ，那还是困难了一点\n3.2 体验二 ： 开源代码的整合能力\n提问 ： 开源项目元素整合\n给我准备一个新页面 ，里面需要整合 以下页面的元素 ：\n1. 视图 ViewInterface 里面的 TreeFrame\n2. 导航里面的 面包学\n3. 菜单和工具栏 里面的 命令栏 @Workspace\n总结 ：\n- 整体效果还是可以接受了 ，我需要的3个元素都准确找到了 ，也成功的加入到了新页面中\n- 格式上没有太大的问题 （有一部分原因是开源框架隔离做的很好 ，没有格式打架）\n代码效果 ：\n- 主要的元素都精准识别到了\n# coding:utf-8\nfrom PyQt6.QtCore import Qt\nfrom PyQt6.QtWidgets import QVBoxLayout, QWidget\nfrom qfluentwidgets import BreadcrumbBar, CommandBar, Action, FluentIcon\nfrom .gallery_interface import GalleryInterface\nfrom .view_interface import TreeFrame\nfrom ..common.translator import Translator\nclass IntegratedViewInterface(GalleryInterface):\n\"\"\" 集成视图界面，包含 TreeFrame、面包屑导航和命令栏 \"\"\"\ndef __init__(self, parent=None):\nt = Translator()\nsuper().__init__(\ntitle=t.tr('集成视图'),\nsubtitle=\"集成 Tree、面包屑和命令栏\",\nparent=parent\n)\nself.setObjectName('integratedViewInterface')\n# 主容器\nmainWidget = QWidget(self)\nmainLayout = QVBoxLayout(mainWidget)\nmainLayout.setContentsMargins(24, 24, 24, 24)\nmainLayout.setSpacing(18)\n# 1. 面包屑导航 SimpleCard\nbreadcrumb = BreadcrumbBar(self)\nitems = [self.tr(\"首页\"), self.tr(\"文档\"), self.tr(\"学习\"), self.tr(\"示例\")]\nfor i in items:\nbreadcrumb.addItem(i, i)\nself.addSimpleCard(self.tr(\"面包屑导航\"), breadcrumb)\n# 2. 命令栏 SimpleCard\ncommandBar = CommandBar(self)\ncommandBar.addActions([\nAction(FluentIcon.ADD, self.tr('添加')),\nAction(FluentIcon.EDIT, self.tr('编辑')),\nAction(FluentIcon.DELETE, self.tr('删除')),\nAction(FluentIcon.FOLDER, self.tr('刷新'))\n])\nself.addSimpleCard(self.tr(\"命令栏\"), commandBar)\n# 3. TreeFrame SimpleCard\ntreeFrame = TreeFrame(self)\nself.addSimpleCard(self.tr(\"树结构\"), treeFrame)\n# 示例卡片\nself.addExampleCard(\ntitle=self.tr('集成视图示例'),\nwidget=mainWidget,\nsourcePath='',\nstretch=1\n)\n四. 使用感受\n4.1 关于智能体 ：\n智能体在代码开发中还是很有作用的 ，他会把任务拆分成一个个更细的场景 ，从而让处理的结果更加精准。\n- 一句话生成的桌面有用 ，提供了将近6个文件 ，以及额外的处理\n4.2 关于 MCP ：\n现阶段的 MCP 还是偏向于工具 ，没有直接为代码提供能力 ，常见的比如帮你提交下代码 ，查个数据什么的 。 总体来说能协助开发的还是太少了 ，个人感觉有点鸡肋。\n但是有一些 MCP 还是有点作用的 ，比如 Brave search MCP 可以进行联网搜索， github 可以连接代码库 ，filesystem 等\n等后续功能更丰富了 ，应该有更好的使用场景。\n// S1 : 安装 filesystem MCP Server 到本地\nnpm install -g @modelcontextprotocol/server-filesystem\n// S2 : 启动 ，并且设置本地文件路径\nnpx -y @modelcontextprotocol/server-filesystem D:\\ai\\mcp\n// S3 : Trae 配置 MCP (ZH这里)\n{\n\"mcpServers\": {\n\"filesystem\": {\n\"command\": \"npx\",\n\"args\": [\n\"-y\",\n\"@modelcontextprotocol/server-filesystem\",\n\"D:\\\\ai\\\\mcp\"\n]\n}\n}\n}\n// S3 : 使用一下\n总结\n- 和上一次体验后 ，体验感有不少提升 ，至少不会让大家骂骂咧咧了 （GPT4.1 体验哦）\n- 新功能最有用的是上下文的管控 ，感觉到范围更精准了 ，不会内容漂移\n- 其他的功能 ，MCP 个人没找到好用的场景 ，对于开发没太大的提升 (\n也没深入用\n) - GPT4.1 高峰时候要排队 ，未来不确定会不会直接变成收费\n- 大范围的代码处理还是缺乏方向感 ，建议还是小区域的代码优化和生成\n总结一下 ：\n- 谈不上已经很好用了 ，但是一直在进步 ， 比上次感受要强很多\n- 高度依赖好的模型 ，模型越好 ，效果越好 。有条件的还是要使用上外版\n- 指望代替你的工作不现实 ，但是可以帮你加速你的工作效率 ，空余时间摸摸鱼\n最后的最后 ❤️❤️❤️👇👇👇\n- 👈 欢迎关注 ，超200篇优质文章，未来持续高质量输出 🎉🎉\n- 🔥🔥🔥 系列文章集合，高并发，源码应有尽有 👍👍\n- 走过路过不要错过 ，知识无价还不收钱 ❗❗",
        "summary": "文章介绍了Trae的最新更新，包括AI Agent功能的增强、MCP协议的引入以及对代码理解和生成能力的提升，展示了其在开发流程中的应用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "你真的会用 return 吗？—— 11个值得借鉴的 return 写法",
        "url": "https://juejin.cn/post/7497804336568582183",
        "source": "juejin",
        "hot": 1260,
        "time": "",
        "timestamp": 1745766672000,
        "extracted_time": "2025-04-27T15:11:12+00:00",
        "content": "前言\nreturn\n这个关键字，相信大家每天都在用。\n它就像一把锤子，敲打着我们代码里的每一个出口。\n但扪心自问，我们真的把这把锤子用好了吗？\n今天，不想聊什么高深莫测的设计模式，也不敢妄称“最佳实践”。\n只想结合自己这些年在项目摸爬滚打中踩过的一些坑、积累的一点心得，和大家分享一些关于 return\n的、或许能让我们的代码更规范、更优雅、更易读的写法。\n权当抛砖引玉，希望能引发大家的一些思考。\n耐心看完，你一定有所收获。\n正文\n1. 提前返回（卫语句）：让主逻辑更清晰\n这是最常见也是非常推荐的一种模式。\n核心思想是：在方法开头处理掉所有“异常”或“特殊”情况，让方法的主体部分专注于核心逻辑。\n反面教材 ❌：\npublic void processData(Data data) {\nif (data != null) {\nif (data.isValid()) {\nif (checkPermission(data)) {\n// 核心逻辑开始...\nSystem.out.println(\"处理数据：\" + data.getContent());\n// ...\n// 大量核心代码嵌套在这里\n// ...\nSystem.out.println(\"处理完成\");\n} else {\nSystem.out.println(\"权限不足\");\n}\n} else {\nSystem.out.println(\"数据无效\");\n}\n} else {\nSystem.out.println(\"数据为null\");\n}\n}\n很难评，嵌套过深，核心逻辑被包裹在层层 if-else\n中，可读性太差。\n推荐写法 ✅：\npublic void processData(Data data) {\nif (data == null) {\nSystem.out.println(\"数据为null\");\nreturn; // 提前返回\n}\nif (!data.isValid()) {\nSystem.out.println(\"数据无效\");\nreturn; // 提前返回\n}\nif (!checkPermission(data)) {\nSystem.out.println(\"权限不足\");\nreturn; // 提前返回\n}\n// --- 核心逻辑开始 ---\n// 经过前面的卫语句检查，这里的data一定是有效且有权限的\nSystem.out.println(\"处理数据：\" + data.getContent());\n// ...\n// 核心代码不再嵌套，非常清晰\n// ...\nSystem.out.println(\"处理完成\");\n}\n通过提前 return\n，避免了深层嵌套，让主要的处理流程更加顺畅，代码逻辑一目了然。\n配得上“优雅”二字。\n2. 避免 return\n后的 else\n块\n当 if\n分支中包含 return\n语句时，其后的代码天然就是 else\n的逻辑，无需显式写出 else\n。\n反面教材 ❌：\npublic String getStatus(int code) {\nif (code == 0) {\nreturn \"Success\";\n} else {\n// 其他逻辑\nreturn \"Error: \" + getErrorMessage(code);\n}\n}\n虽然没错，但 else\n显得有些多余，未免画蛇添足。\n推荐写法 ✅：\npublic String getStatus(int code) {\nif (code == 0) {\nreturn \"Success\";\n}\n// 如果 code == 0，上面的 return 已经退出方法了\n// 能执行到这里，说明 code != 0，天然就是 else 的逻辑\nreturn \"Error: \" + getErrorMessage(code);\n}\n代码更简洁，减少了一层不必要的缩进。\n3. 简化布尔返回\n直接返回布尔表达式的结果，而不是使用 if-else\n返回 true\n或 false\n。\n反面教材 ❌：\npublic boolean isEligible(User user) {\nif (user.getAge() >= 18 && user.isActive()) {\nreturn true;\n} else {\nreturn false;\n}\n}\n点评：非常啰嗦。\n推荐写法 ✅：\npublic boolean isEligible(User user) {\nreturn user.getAge() >= 18 && user.isActive();\n}\n一行搞定，清晰明了。\n4. 减少不必要的临时变量\n如果一个变量仅仅是为了存储即将 return\n的值，可以考虑直接 return\n表达式的结果。\n反面教材 ❌：\npublic int calculateSum(int a, int b) {\nint sum = a + b;\nreturn sum;\n}\npublic String getUserGreeting(User user) {\nString greeting = \"Hello, \" + user.getName();\nreturn greeting;\n}\nsum\n和 greeting\n变量并非必需。\n推荐写法 ✅：\npublic int calculateSum(int a, int b) {\nreturn a + b;\n}\npublic String getUserGreeting(User user) {\n// 如果 user.getName() 调用成本高或需要复用，临时变量可能有意义\n// 但在这个简单场景下，直接返回更简洁\nreturn \"Hello, \" + user.getName();\n}\n更直接。\n但注意，如果表达式复杂或计算结果需要复用，还是考虑使用临时变量，可以提高可读性或效率，需要权衡。\n5. 巧用三元运算符\n对于简单的二选一返回逻辑，三元运算符 ?:\n是 if-else\n的简洁替代。\n反面教材 ❌：\npublic String getLevel(int score) {\nString level;\nif (score >= 60) {\nlevel = \"Pass\";\n} else {\nlevel = \"Fail\";\n}\nreturn level;\n}\n推荐写法 ✅：\npublic String getLevel(int score) {\nreturn score >= 60 ? \"Pass\" : \"Fail\";\n}\n一行代码，清晰表达了条件选择。\n但是千万注意不要滥用，过分嵌套的三元运算符会降低可读性。\n6. 返回空集合而非 null\n方法约定返回集合类型（List, Set, Map等）时，如果没有数据，应返回空集合而不是 null\n。\n这可以避免调用方不必要的 null\n检查。\n反面教材 ❌：\npublic List getUsers(String department) {\nList users = findUsersByDepartment(department);\nif (users.isEmpty()) { // 或者 users == null\nreturn null; // 调用方需要检查 null !\n}\nreturn users;\n}\n推荐写法 ✅：\nimport java.util.Collections;\nimport java.util.List;\npublic List getUsers(String department) {\nList users = findUsersByDepartment(department);\n// 假设 findUsersByDepartment 可能返回 null 或空 List\nif (users == null || users.isEmpty()) {\nreturn Collections.emptyList(); // 返回不可变的空列表\n}\n// 或者更好的是，确保 findUsersByDepartment 内部就返回空列表而不是 null\nreturn users;\n}\n// 调用方代码，无需担心 NullPointerException\nList userList = service.getUsers(\"IT\");\nfor (String user : userList) { // 直接遍历，安全\nSystem.out.println(user);\n}\n调用方代码更健壮、简洁，符合“防御性编程”的原则。\n7. 利用 Optional\n优雅处理可能缺失的值\n当方法可能返回一个值，也可能什么都不返回时，使用 Optional\n作为返回类型比返回 null\n更能明确表达这种可能性，并引导调用方正确处理。\n反面教材 ❌：\npublic User findUserById(String id) {\n// ... 查询逻辑 ...\nif (found) {\nreturn user;\n} else {\nreturn null; // 调用方必须检查 null\n}\n}\n// 调用方\nUser user = findUserById(\"123\");\nif (user != null) { // 繁琐的 null 检查\nSystem.out.println(user.getName());\n}\n推荐写法 ✅：\nimport java.util.Optional;\npublic Optional findUserById(String id) {\n// ... 查询逻辑 ...\nif (found) {\nreturn Optional.of(user);\n} else {\nreturn Optional.empty();\n}\n}\n// 调用方\nfindUserById(\"123\")\n.ifPresent(user -> System.out.println(user.getName())); // 清晰地处理存在的情况\n// 或者提供默认值\nString userName = findUserById(\"123\")\n.map(User::getName)\n.orElse(\"Unknown User\");\nOptional\n强制调用者思考值不存在的情况，并通过链式调用提供了更流畅的处理方式，减少空指针风险。\n但是Java的Optional\n非常蛋疼，如果使用时不加注意，本应返回Optional\n的方法，返回了null，反而会增加负担，因此团队的开发规范至关重要。\n8. 循环中的提前返回\n在循环中查找元素或满足某个条件时，一旦找到或满足，应立即 return\n，避免不必要的后续迭代。\n反面教材 ❌：\npublic Product findProductByName(List products, String name) {\nProduct foundProduct = null;\nfor (Product product : products) {\nif (product.getName().equals(name)) {\nfoundProduct = product;\nbreak; // 找到后跳出循环\n}\n}\n// 循环结束后再返回\nreturn foundProduct;\n}\n需要一个额外的 foundProduct\n变量，并且在循环外返回。\n浪费性能。\n推荐写法 ✅：\npublic Product findProductByName(List products, String name) {\nfor (Product product : products) {\nif (product.getName().equals(name)) {\nreturn product; // 一旦找到，立即返回\n}\n}\n// 循环正常结束，说明没找到\nreturn null; // 或者 Optional.empty()\n}\n逻辑更直接，代码更紧凑。\n9. 利用 switch\n表达式（Java 14+）\n现在Java的 switch\n表达式可以直接返回值，使得基于多分支选择的返回更加简洁。\n反面教材 ❌ (传统 switch\n语句):\npublic String getWeekdayType(DayOfWeek day) {\nString type;\nswitch (day) {\ncase MONDAY:\ncase TUESDAY:\ncase WEDNESDAY:\ncase THURSDAY:\ncase FRIDAY:\ntype = \"Workday\";\nbreak;\ncase SATURDAY:\ncase SUNDAY:\ntype = \"Weekend\";\nbreak;\ndefault:\nthrow new IllegalArgumentException(\"Invalid day: \" + day);\n}\nreturn type;\n}\n推荐写法 ✅ (使用 switch\n表达式):\npublic String getWeekdayType(DayOfWeek day) {\nreturn switch (day) {\ncase MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY -> \"Workday\";\ncase SATURDAY, SUNDAY -> \"Weekend\";\n// default 分支通常是必需的，除非覆盖了所有枚举常量\n// 如果逻辑确定上面的 case 已经覆盖所有情况，可以不写 default，\n// 但如果传入未覆盖的值会抛异常。\n// 或者明确处理:\n// default -> throw new IllegalArgumentException(\"Invalid day: \" + day);\n};\n}\n代码量显著减少，->\n语法更直观，且 switch\n表达式要求覆盖所有情况（或有 default\n），更安全。\n10. 返回更有意义的类型（枚举或自定义对象）\n避免使用魔法数字或含义模糊的字符串作为返回码，应返回定义清晰的枚举或包含状态和信息的自定义结果对象。\n反面教材 ❌：\npublic int processOrder(Order order) {\nif (order == null) return -1; // -1 代表失败\nif (!checkInventory(order)) return 1; // 1 代表库存不足\n// ... 处理 ...\nif (!paymentSuccess(order)) return 2; // 2 代表支付失败\nreturn 0; // 0 代表成功\n}\n// 调用方\nint resultCode = processOrder(myOrder);\nif (resultCode == 0) { ... }\nelse if (resultCode == 1) { ... } // 难以理解和维护\n推荐写法 ✅：\npublic enum OrderStatus { SUCCESS, FAILED_NULL_ORDER, FAILED_INVENTORY, FAILED_PAYMENT }\npublic OrderStatus processOrder(Order order) {\nif (order == null) return OrderStatus.FAILED_NULL_ORDER;\nif (!checkInventory(order)) return OrderStatus.FAILED_INVENTORY;\n// ... 处理 ...\nif (!paymentSuccess(order)) return OrderStatus.FAILED_PAYMENT;\nreturn OrderStatus.SUCCESS;\n}\n// 调用方\nOrderStatus status = processOrder(myOrder);\nif (status == OrderStatus.SUCCESS) { ... }\nelse if (status == OrderStatus.FAILED_INVENTORY) { ... } // 清晰易懂\n返回类型本身就携带了业务含义，代码自解释，更易于维护和扩展。\n11. 注意 finally\n块中的 return\n（陷阱！）\n尽量避免在 finally\n块中使用 return\n。\n它会覆盖 try\n或 catch\n块中的 return\n或抛出的异常，可能导致非预期的行为和难以追踪的 Bug。\n反面教材 ❌ (极不推荐):\npublic int trickyReturn() {\ntry {\nSystem.out.println(\"Trying...\");\n// 假设这里发生异常或正常返回 1\n// throw new RuntimeException(\"Oops!\");\nreturn 1;\n} catch (Exception e) {\nSystem.out.println(\"Caught exception\");\nreturn 2; // 试图在 catch 中返回 2\n} finally {\nSystem.out.println(\"Finally block\");\nreturn 3; // finally 中的 return 会覆盖前面的所有返回/异常！\n}\n// 这个方法最终会返回 3，即使 try 或 catch 中有 return 或抛出异常\n}\nfinally\n的主要目的是资源清理（如关闭流、释放锁），而不是返回值。\n在这里 return\n会让程序行为变得诡异。\n推荐写法 ✅：\npublic int cleanReturn() {\nint result = -1; // 默认值或错误码\nConnection conn = null;\ntry {\nconn = getConnection();\n// ... 使用 conn 操作 ...\nresult = 1; // 操作成功\nreturn result; // 在 try 中返回\n} catch (SQLException e) {\nSystem.err.println(\"Database error: \" + e.getMessage());\nresult = -2; // 数据库错误码\nreturn result; // 在 catch 中返回\n} finally {\n// 只做清理工作\nif (conn != null) {\ntry {\nconn.close();\nSystem.out.println(\"Connection closed.\");\n} catch (SQLException e) {\nSystem.err.println(\"Failed to close connection: \" + e.getMessage());\n}\n}\n// 不要在 finally 中 return\n}\n}\nfinally\n专注于它的本职工作——资源清理，让返回值逻辑在 try\n和 catch\n中清晰地处理。\n结尾\nreturn\n虽小，五脏俱全。\n一切的目的都是让代码更加优雅，逻辑更加清晰。\n这些并非什么高深的理论，更多的是在日常写代码时，对可读性、简洁性和健壮性的追求。\n希望你能写出诗一样的代码，从码农\n变成代码艺术家\n。\n当然，上面提到的点，有些可能在特定复杂场景下有争议（比如临时变量有时能提升可读性）。关键在于理解这些写法背后的思考：如何让代码更容易被他人（以及未来的自己）理解和维护？\n希望这些粗浅的经验能给大家带来一点启发。\n代码之道，与君共勉！",
        "summary": "本文介绍了11种关于return关键字的使用技巧，包括提前返回、避免return后的else块、简化布尔返回等，旨在提升代码的可读性和规范性。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "深夜突袭，阿里 Qwen3 登顶全球开源王座！暴击 DeepSeek-R1，2 小时狂揽 17k 星",
        "url": "https://juejin.cn/post/7498291170903375881",
        "source": "juejin",
        "hot": 1233,
        "time": "",
        "timestamp": 1745895992000,
        "extracted_time": "2025-04-29T03:06:32+00:00",
        "content": "【新智元导读】阿里 Qwen3 凌晨开源，正式登顶全球开源大模型王座！它的性能全面超越 DeepSeek-R1 和 OpenAI o1，采用 MoE 架构，总参数 235B，横扫各大基准。这次开源的 Qwen3 家族，8 款混合推理模型全部开源，免费商用。\n就在今天凌晨，备受全球期待的阿里新一代通义千问模型 Qwen3 开源！\n一经问世，它立刻登顶全球最强开源模型王座。\n它的参数量仅为 DeepSeek-R1 的 1/3，但成本大幅下降，性能全面超越 R1、OpenAI-o1 等全球顶尖模型。\nQwen3 是国内首个「混合推理模型」，「快思考」与「慢思考」集成进同一个模型，对简单需求可低算力「秒回」答案，对复杂问题可多步骤「深度思考」，大大节省算力消耗。\n它采用混合专家（MoE）架构，总参数量 235B，激活仅需 22B。\n它的预训练数据量达 36T ，并在后训练阶段多轮强化学习，将非思考模式无缝整合到思考模型中。\n一经诞生，Qwen3 立刻横扫各大基准。\n而且，性能大幅提升的同时，它的部署成本还大幅下降，仅需 4 张 H20 即可部署 Qwen3 满血版，显存占用仅为性能相近模型的 1/3！\n亮点总结：\n· 各种尺寸的稠密模型和混合专家（MoE）模型，包括 0.6B、1.7B、4B、8B、14B、32B 以及 30B-A3B 和 235B-A22B。\n· 能够在思考模式（用于复杂的逻辑推理、数学和编码）和非思考模式（用于高效的通用聊天）之间无缝切换，从而确保在各种场景中实现最佳性能。\n· 推理能力显著增强，在数学、代码生成和常识逻辑推理方面，超越了之前处于思考模式下的 QwQ 和处于非思考模式下的 Qwen2.5 instruct 模型。\n· 更符合人类偏好，擅长创意写作、角色扮演、多轮对话和指令遵循，从而提供更自然、引人入胜和更真实的对话体验。\n· 精通 AI 智能体能力，支持在思考和非思考模式下与外部工具的精确集成，并在复杂的基于智能体的任务中，在开源模型中实现了领先的性能。\n· 首次支持 119 种语言和方言，具有强大的多语言指令跟随和翻译能力。\n目前，Qwen 3 已同步上线魔搭社区、Hugging Face、GitHub，并可在线体验。\n全球开发者、研究机构和企业均可免费下载模型并商用，也可以通过阿里云百炼调用 Qwen3 的 API 服务。个人用户可立即通过通义 APP 直接体验 Qwen3，夸克也即将全线接入 Qwen3。\n在线体验：chat.qwen.ai/\n魔搭社区：modelscope.cn/collections…\nHugging Face：huggingface.co/collections…\nGitHub：github.com/QwenLM/Qwen…\n至此，阿里通义已开源 200 余个模型，全球下载量超 3 亿次，千问衍生模型数超 10 万个，彻底超越美国 Llama，成为全球第一开源模型！\nQwen 3 家族登场\n8 款「混合推理」模型全开源\n这次，阿里一口气开源了 8 款混合推理模型，包括 2 款 30B、235B 的 MoE 模型，以及 0.6B、1.7B、4B、8B、14B、32B 等 6 款稠密模型，均采用 Apache 2.0 许可。\n其中，每款模型均斩获同尺寸开源模型 SOTA。\nQwen3 的 30B 参数 MoE 模型实现了 10 倍以上的模型性能杠杆提升，仅激活 3B 就能媲美上代 Qwen2.5-32B 模型性能。\nQwen3 的稠密模型性能继续突破，一半的参数量可实现同样的高性能，如 32B 版本的 Qwen3 模型可跨级超越 Qwen2.5-72B 性能。\n同时，所有 Qwen3 模型都是混合推理模型，API 可按需设置「思考预算」（即预期最大深度思考的 tokens 数量），进行不同程度的思考，灵活满足 AI 应用和不同场景对性能和成本的多样需求。\n比如，4B 模型是手机端的绝佳尺寸；8B 可在电脑和汽车端侧丝滑部署应用；32B 最受企业大规模部署欢迎，有条件的开发者也可轻松上手。\n开源模型新王，刷新纪录\nQwen3 在推理、指令遵循、工具调用、多语言能力等方面均大幅增强，即创下所有国产模型及全球开源模型的性能新高——\n在奥数水平的 AIME25 测评中，Qwen3 斩获 81.5 分，刷新开源纪录。\n在考察代码能力的 LiveCodeBench 评测中，Qwen3 突破 70 分大关，表现甚至超过 Grok3。\n在评估模型人类偏好对齐的 ArenaHard 测评中，Qwen3 以 95.6 分超越了 OpenAI-o1 及 DeepSeek-R1。\n具体来说，旗舰模型 Qwen3-235B-A22B 与其他顶级模型（如 DeepSeek-R1、o1、o3-mini、Grok-3 和 Gemini-2.5-Pro）相比，在编码、数学、通用能力等各项基准测试中，成绩都相当亮眼。\n此外，小型混合专家模型 Qwen3-30B-A3B 虽然激活参数只有 QwQ-32B 的十分之一，但性能却更胜一筹。\n甚至是 Qwen3-4B 这样的小模型，也能媲美 Qwen2.5-72B-Instruct 的性能。\n经过微调的模型，如 Qwen3-30B-A3B，及其预训练版本（如 Qwen3-30B-A3B-Base），现在都可在 Hugging Face、ModelScope 和 Kaggle 等平台上找到。\n对于部署，阿里推荐使用 SGLang 和 vLLM 等框架。对于本地使用，强烈推荐 Ollama、LMStudio、MLX、llama.cpp 和 KTransformers 等工具。\n无论研究、开发还是生产环境，Qwen3 都可轻松集成到各种工作流程中。\n利好智能体 Agent 和大模型应用爆发\n可以说，Qwen3 为即将到来的智能体 Agent 和大模型应用爆发提供了更好的支持。\n在评估模型 Agent 能力的 BFCL 评测中，Qwen3 创下 70.8 的新高，超越 Gemini2.5-Pro、OpenAI-o1 等顶尖模型，这将大幅降低 Agent 调用工具的门槛。\n同时，Qwen3 原生支持 MCP 协议，并具备强大的工具调用能力，结合封装了工具调用模板和工具调用解析器的 Qwen-Agent 框架。\n这将大大降低编码复杂性，实现高效的手机及电脑 Agent 操作等任务。\n主要特点\n混合推理模式\nQwen3 模型引入了一种混合问题解决方式。它们支持两种模式：\n-\n思考模式：在该模式下，模型会逐步推理，然后给出答案。这适合需要深入思考的复杂问题。\n-\n非思考模式：在该模式下，模型会快速给出答案，适用于对速度要求较高的简单问题。\n这种灵活性，让用户可以根据任务的复杂程度，控制模型的推理过程。\n例如，难题可以通过扩展推理来解决，而简单的问题可以直接回答，而不会延迟。\n至关重要的是，这两种模式的结合，大大提高了模型稳定高效地控制推理资源的能力。\n如上所示，Qwen3 表现出可扩展且平滑的性能改进，这与分配的计算推理预算直接相关。\n这种设计使用户能够更轻松地配置特定于任务的预算，从而在成本效率和推理质量之间实现更优化的平衡。\n多语言支持\nQwen3 模型支持 119 种语言和方言。\n如此广泛的多语言能力，也意味着 Qwen 3 有极大潜力创建风靡全球的国际应用。\n更强大的智能体能力\n阿里对 Qwen3 模型进行了优化，以提高编码和智能体能力，并且还加强了对 MCP 的支持。\n下面这个示例，很好地展示了 Qwen3 是如何思考并与环境交互的。\n36 万亿 token，多阶段训练\n作为千问系列最强模型，Qwen3 究竟是如何实现如此惊艳的表现？\n接下来，一起扒一扒 Qwen3 背后技术细节。\n预训练\n与 Qwen2.5 相比，Qwen3 预训练数据集规模几乎是上一代两倍，从 18 万亿个 token 扩展到了 36 万亿个 token。\n它覆盖了 119 种语言和方言，不仅来源于网络，还包括从 PDF 等文档中提取文本内容。\n为了确保数据质量，团队利用 Qwen2.5-VL 提取文档文本，并通过 Qwen2.5 优化提取内容的准确性。\n此外，为了提升模型在数学和代码领域的表现，Qwen3 还通过 Qwen2.5-Math 和 Qwen2.5-Coder 生成大量合成数据，包括教科书、问答对和代码片段。\nQwen3 预训练过程，一共分为三个阶段，逐步提升模型的能力：\n第一阶段（S1）：基础语言能力构建\n使用超 30 万亿个 token，以 4k 上下文长度进行预训练。这一阶段为模型奠定了扎实的语言能力和通用知识基础。\n第二阶段（S2）：知识稠密型优化\n通过增加 STEM、编码和推理任务等知识稠密型数据的比例，模型在额外 5 万亿和 token 上继续训练，进一步提升专业能力的表现。\n第三阶段（S3）：上下文能力扩展\n利用高质量上下文数据，将模型的上下文长度扩展至 32k，确保其能够处理复杂、超长输入。\n得益于模型架构优化、数据规模扩展和更高效的训练方法，Qwen3 Dense 基础模型展现出亮眼的性能。\n如下表所示，Qwen3-1.7B/4B/8B/14B/32B-Base 可以媲美 Qwen2.5-3B/7B/14B/32B/72B-Base，以更小的参数量达到更大模型的水平。\n尤其是，在 STEM、编码和推理等领域，Qwen3 Dense 基础模型甚至优于更大的 Qwen2.5 模型。\n更令人瞩目的是，Qwen3 MoE 模型仅用 10% 激活参数，即可实现 Qwen2.5 Dense 基础模型相似的性能。\n这不仅大幅降低了训练和推理成本，还为模型的实际部署提供了更高的灵活性。\n后训练\n为了打造一个既能进行复杂推理，又能快速响应的混合模型，Qwen3 设计了一个四阶段后训练流程。\n- 长思维链冷启动\n使用多样化的长思维链数据，覆盖数学、编码、逻辑推理和 STEM 问题，训练模型掌握基本的推理能力。\n- 长思维链强化学习\n通过扩展 RL 的计算资源，结合基于规则的奖励机制，提升模型在探索和利用推理路径方面的能力。\n- 思维模式融合\n使用长思维链数据和指令微调数据进行微调，将快速反应能力融入推理模型，确保模型在复杂任务中既精准又高效。\n此数据由第二阶段的增强思考模型生成，确保推理和快速响应能力的无缝融合。\n- 通用强化学习\n在 20 多个通用领域任务，如指令遵循、格式遵循和智能体能力中应用 RL，进一步提升模型的通用性和鲁棒性，同时纠正不良行为。\n全网好评如潮\nQwen3 开源不到 3 小时，GitHub 狂揽 17k 星，彻底点燃了开源社区的热情。开发者们纷纷下载，开启了极速测试。\n苹果工程师 Awni Hannun 宣布，Qwen3 已经得到 MLX 框架支持。\n而且，不论是 iPhone（0.6B, 4B），还是 MacBook（8B, 30B, 3B/30B MoE）、M2/M3 Ultra（22B/235B MoE）消费级设备，均可本地跑。\n他在 M2 Ultra 上运行了 Qwen3 235B MoE，生成速度高达 28 token/s。\n有网友实测后发现，与 Qwen3 大小相同的 Llama 模型，简直不在一个级别上。前者推理更深入，保持更长上下文，还能解决更难的问题。\n还有人表示，Qwen3 就像是一个 DeepSeek 时刻。\n官方指南\n如何用 Qwen3 进行开发\n这次，阿里还放出了在不同框架上使用 Qwen3 的简单指南。\n首先，这是一个在 Hugging Face transformers 中使用 Qwen3-30B-A3B 的标准示例：\nfrom modelscope import AutoModelForCausalLM, AutoTokenizer\nmodel_name = \"Qwen/Qwen3-30B-A3B\"\n# load the tokenizer and the model\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForCausalLM.from_pretrained(\nmodel_name,\ntorch_dtype=\"auto\",\ndevice_map=\"auto\"\n)\n# prepare the model input\nprompt = \"Give me a short introduction to large language model.\"\nmessages = [\n{\"role\": \"user\", \"content\": prompt}\n]\ntext = tokenizer.apply_chat_template(\nmessages,\ntokenize=False,\nadd_generation_prompt=True,\nenable_thinking=True # Switch between thinking and non-thinking modes. Default is True.\n)\nmodel_inputs = tokenizer([text], return_tensors=\"pt\").to(model.device)\n# conduct text completion\ngenerated_ids = model.generate(\n**model_inputs,\nmax_new_tokens=32768\n)\noutput_ids = generated_ids[0][len(model_inputs.input_ids[0]):].tolist()\n# parsing thinking content\ntry:\n# rindex finding 151668 ()\nindex = len(output_ids) - output_ids[::-1].index(151668)\nexcept ValueError:\nindex = 0\nthinking_content = tokenizer.decode(output_ids[:index], skip_special_tokens=True).strip(\"\\n\")\ncontent = tokenizer.decode(output_ids[index:], skip_special_tokens=True).strip(\"\\n\")\nprint(\"thinking content:\", thinking_content)\nprint(\"content:\", content)\n要关闭推理功能，只需更改参数 enable_thinking，如下所示：\ntext = tokenizer.apply_chat_template(\nmessages,\ntokenize=False,\nadd_generation_prompt=True,\nenable_thinking=False # True is the default value for enable_thinking.\n)\n对于部署，可以使用 sglang>=0.4.6.post1 或 vllm>=0.8.4 创建与 OpenAI 兼容的 API 端点：\nSGLang：\npython -m sglang.launch_server --model-path Qwen/Qwen3-30B-A3B --reasoning-parser qwen3\nvLLM：\nvllm serve Qwen/Qwen3-30B-A3B --enable-reasoning --reasoning-parser deepseek_r1\n如果将其用于本地开发，则可以通过运行简单的命令 ollama run qwen3:30b-a3b 来使用 ollama 运行模型，或者，也可使用 LMStudio、llama.cpp 和 ktransformers 在本地进行构建。\n高级用法\n团队提供了一种软切换机制，当 enable_thinking=True 时，用户可以通过该机制动态控制模型的行为。\n具体来说，可以将 / think 和 / no_think 添加到用户提示或系统消息中，以逐轮切换模型的思考模式。该模型将遵循多轮对话中最近的指令。\n下面就是一个多轮对话的示例：\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nclass QwenChatbot:\ndef __init__(self, model_):\nself.tokenizer = AutoTokenizer.from_pretrained(model_name)\nself.model = AutoModelForCausalLM.from_pretrained(model_name)\nself.history = []\ndef generate_response(self, user_input):\nmessages = self.history + [{\"role\": \"user\", \"content\": user_input}]\ntext = self.tokenizer.apply_chat_template(\nmessages,\ntokenize=False,\nadd_generation_prompt=True\n)\ninputs = self.tokenizer(text, return_tensors=\"pt\")\nresponse_ids = self.model.generate(**inputs, max_new_tokens=32768)[0][len(inputs.input_ids[0]):].tolist()\nresponse = self.tokenizer.decode(response_ids, skip_special_tokens=True)\n# Update history\nself.history.append({\"role\": \"user\", \"content\": user_input})\nself.history.append({\"role\": \"assistant\", \"content\": response})\nreturn response\n# Example Usage\nif __name__ == \"__main__\":\nchatbot = QwenChatbot()\n# First input (without /think or /no_think tags, thinking mode is enabled by default)\nuser_input_1 = \"How many r's in strawberries?\"\nprint(f\"User: {user_input_1}\")\nresponse_1 = chatbot.generate_response(user_input_1)\nprint(f\"Bot: {response_1}\")\nprint(\"----------------------\")\n# Second input with /no_think\nuser_input_2 = \"Then, how many r's in blueberries? /no_think\"\nprint(f\"User: {user_input_2}\")\nresponse_2 = chatbot.generate_response(user_input_2)\nprint(f\"Bot: {response_2}\")\nprint(\"----------------------\")\n# Third input with /think\nuser_input_3 = \"Really? /think\"\nprint(f\"User: {user_input_3}\")\nresponse_3 = chatbot.generate_response(user_input_3)\nprint(f\"Bot: {response_3}\")\n智能体功能的使用\nQwen3 在工具调用方面的表现非常出色。\n团队建议开发者使用 Qwen-Agent，来充分利用 Qwen3 的智能体功能。\nQwen-Agent 在内部集成了工具调用模板和解析器，从而大大降低了编码的复杂程度。\n要定义可用的工具，可以使用 MCP 配置文件，使用 Qwen-Agent 的集成工具，或者自己集成其他工具。\n参考资料：",
        "summary": "阿里开源新一代通义千问模型Qwen3，性能全面超越DeepSeek-R1和OpenAI o1，采用MoE架构，参数量达235B，支持混合推理，部署成本大幅降低，并已上线多个平台供全球开发者免费使用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "😮😮😮 我写出了被 Threejs 官推转发的项目🚀✨？！",
        "url": "https://juejin.cn/post/7498914140166799397",
        "source": "juejin",
        "hot": 1089,
        "time": "",
        "timestamp": 1746004725000,
        "extracted_time": "2025-04-30T09:18:45+00:00",
        "content": "0.前置条件\nhello! 欢迎阅读本篇文章！这篇文章会探讨如何高定制化地构建一个自己喜欢的 3D 场景。我们将深入探讨 Three.js\n、Shader(GLSL)\n、Cursor rules & MCP Servers\n以及 2D & 3D 定制化资源获取\n等技术领域。\n在开始之前，请确保您已经具备以下基础知识：\n1. Three.js 基础\n- 核心概念掌握：\n- 场景（\nScene\n）：3D 空间的容器 - 相机（\nCamera\n）：观察场景的视角 - 渲染器（\nRenderer\n）：将 3D 场景绘制到屏幕 - 几何体（\nGeometry\n）：物体的形状定义 - 材质（\nMaterial\n）：物体的外观特性 - 网格（\nMesh\n）：几何体和材质的组合\n- 场景（\n推荐学习资源：Bruno Simon 的 threejs-journey\n课程是非常优秀的入门教程。如果您希望了解我的个人学习路径，欢迎在评论区留言，当评论数达到一定程度时，我会专门撰写一篇详细的学习路线指南。并且这篇文章所展示的作品会参加 Threejs-journey在今年5月的作品挑战，第一名会得到一个免费的threejs-journey，我相信这个作品会得到好的名次，并且承诺获得的任何奖品将会在下一篇文章或者沸点评论区中抽取一个已关注的读者赠予\n2. Shader 编程基础\n- GLSL（OpenGL Shading Language）基础：\n- 顶点着色器（Vertex Shader）：处理顶点位置和属性\n- 片元着色器（Fragment Shader）：处理像素颜色和效果\n- Three.js 中的自定义着色器实现\n1. Page 预览\n话说这天老何在准备去就业市场上看看自己几斤几两, 就和以前还有联系的老同学要了下他们公司 HR\n的微信。把简历和个人网站发过去了。在经过10分钟的漫长等待后，我得到了以下尴尬的画面\n那么让我们进入正题，究竟是什么样的网站能够让 HR 小姐姐对吴彦祖的关切问候置之不理(指 \"还在吗?\")\n这次展示的内容有点多，请见谅 (tips:靠近带感叹号的物体按下F有惊喜哦)\nPC端在线预览地址(需要魔法）:island.vercel.app/\nPC端在线调试界面(需要魔法）:island.vercel.app/#debug\n源码地址(需要魔法）:github.com/hexianWeb/i…\n2. 2D & 3D 资源获取\n如果在以前，很难想象这仅仅是一个对建模以及图形设计一知半解的普通程序员能写出的场景。但现在是 AI 时代 （只不过大部分是 AI 拿鞭子抽我，而不是我拿鞭子抽 AI）。所以在低于平均水平的地方统统由AI\n接管。\n对于简单场景，资源获取类型分为两类，分别是 2D 资源 & 3D 资源。普通通过资源网站上搜索以及下载的方式我不做过多介绍，详细介绍客制化资源获取 & 处理方式。\n3D lowpoly 风格模型网站\n2.1 3D 客制化资源的获取与处理\n现在的 3D AI generation\n技术逐渐趋于成熟，虽然远远达不到工业化以及正规生产环境的水平，但是用来做一些小demo还是没问题的。这里附上我经常使用的 AI 3D 模型生成平台 & 生成工作流。\n首先我们可以根据 Blender\n资源库中有的模型资源利用任意 文生图 or 图生图\n模型为我们生成一个简易的游戏画面\n就比如以下画面：\n在确定场景风格和界面UI后，我们就可以开始着手场景搭建工作。在这个过程中，经常会遇到资源库中缺少所需元素的情况。对此，我是通过以下方式解决：\n先利用如 gpt-4o\n等一些文生图模型来生成一个背景干净无杂物的 2.5 D lowpoly 风格视图。而在这一步给我最大帮助的是 awesome-gpt4o-images ，这可以帮助您即使不利用节点式图像生成平台也能生成统一风格且稳定的图片方式\n在这里我们参考 [案例 55：低多边形 (Low-Poly) 3D 渲染 (by @azed_ai)](github.com/jamez-bondo…) 的提示词生成一个 lowpoly\n风格的马作为使用案例。相应的提示词为:\n一个 [subject] 的低多边形 3D 渲染图，由干净的三角形面构成，具有平坦的 [color1] 和 [color2] 表面。环境是一个风格化的数字沙漠，具有极简的几何形状和环境光遮蔽效果。\n随后再将这个对应的马导入任意的 AI 3D generation\n平台 (这里是后期的何贤： 您现在可以尝试 混元 3D V2.5,他提供较多的免费额度 每日20次)\n随后你可以很快的到一个 lowpoly\n风格的小马雕塑\n这样一来，您就可以在确立统一风格的前提下获取自己需要的 3D 资源，而不是场景中充斥着各种风格迥异的 3D 模型\n2.2 2D 客制化资源的获取与处理\n相信大家GPT-4o 有着出色的利用 4o 固有的知识库和聊天上下文（包括转换上传的图像或将其用作视觉灵感）统一风格客制化图片生成以及输出能力，这也是我经常使用的统一风格 UI 生成工具。\n以下是我生成 UI 素材的工作流：\n首先我会确定我想要 UI 素材的风格，这里当然也可以通过 awesome-gpt4o-images 生成。让我们先假设我很想要的是 pixel\n像素化的 UI，那么我们可以根据以下这张图片作为参考让 gpt-4o\n生成图片。\n很明显的表述了我们想要的 UI 风格： 多色\n像素化\n规范大小\n。\n随后我们可以输入以下提示词让 gpt 4o image\n生成图标墙\nStyle the icon in the second photo in the same pixelated style as the icons in the left image. Give it the same style as the image on the right. Solid black background\n🎨 图标墙规划设计\n尺寸建议：正方形或横向 16:9 比例\n背景：纯黑色（#000000）\n风格：参考右侧图片作为色系参考 (右侧图片就是我们一开始让 GPT 4o 设计的 游戏 UI 画面)\n🧱 图标排列（4x4 格式）\n照相机 📷 对话框 💬 爱心 ❤️ 数字1️⃣\n数字 2️⃣ 数字 3️⃣ 数字 4️⃣ 数字 5️⃣\n数字 6️⃣ 数字 8️⃣数字 7️⃣ 数字 9️⃣\n加号 ➕ 减号 ➖ 斜杠 ／ 乘号 X\n✅ 图标样式细节建议\n照相机图标：小巧有镜头感，可添加一点反光效果\n对话框图标：经典漫画气泡形状，边缘加亮色描边\n爱心图标：红紫渐变，带像素锯齿感\n数字：3D立体像素字体风，配亮色阴影\n加减号／斜杠：对称结构，颜色统一为亮青/蓝紫过渡\n现在就生成了如上的图表墙，这个时候只要去除背景就可以使用了。可以使用如\n| 网站名称 | 网站功能 | 网站地址 |\n|---|---|---|\n| Remove.bg | 操作简单，专注于背景去除 | www.remove.bg/ |\n| Photoshop | 专业级处理，灵活性高 | 需本地安装 |\n| Adobe Express | 集成度高，功能全面 | www.adobe.com/express/ |\n我这里就使用 remove bg 来实现这个需求\n这样就获得了对应的像素风格 UI\n。\n当然如果说不想要图标墙或者使用雪碧图来使用图标的话可以使用 Aspose PNG Splitter 等工具网站来拆分图标。这里就看个人喜好。这些方法特别适用于需要少量定制化 UI 元素的项目，如数据可视化、游戏界面等场景。\n3.场景搭建\n在场景搭建环境环境，我无法给出过多建议，因为这需要即使您已经会使用如hyper3D\n或者 混元3D\n等 AI 3D Generation\n工具，但您仍需要掌握一定程度的 blender\n基本使用能力。\n3.1 使用blender-mcp\n快速辅助 3D 建模、场景创建和操作\nblender-mcp，他通过 API 添加了对 Poly Haven 资产的支持，并且已经接入了 hyper3d\n，意味着我们可以借用支持 MCP Servers\n的任何工具(如 Cursor、Claude Desktop 以及最近刚刚支持 MCP 的Trae)。\nBlender MCP\n提供很多tool， 不仅可以通过其 get_scene_info\ntool 来获取当前 Blender 场景的详细信息，还可以通过execute_blender_code\n来在 Blender 中执行任意 Python 代码。这意味我们可以在场景物体中较多的情况下利用 Cursor\n批量的放置&调整物体的位置以及大小，并规范管理所有命名。\n除了这些基本功能外，blender-mcp\n拥有 tool 如 generate_hyper3d_model_via_images\n& generate_hyper3d_model_via_text\n。意味着他可以直接通过终端传入图片或者文字来生成模型:\n随后可以在 Blender 里直接获得\n看起来还不错，但我仍然只推荐你把这个模型作为一个参考来构建自己的模型，或者单纯的让他充当一个地建\n的作用帮你获取构建一个场景的参考素材。\n很遗憾目前为止没有万能的银弹能够支持我们不需要任何学习成本就可以构建一个完整的可用模型所以你仍然需要能靠自己走到这一步\n4. 核心代码部分\n在我今年的第一篇Threejs\n文章 2025 年了，我不允许有前端不会用 Trae 让页面 Hero Section 变得高级！！！(Threejs) 中提到过\n所以这篇文章我也只会将一部分核心功能是如何实现写出来，而不会从模型导入，光线 & 色彩管理等等功能怎么实现的一一往下叙述。那么 现在让我们进入本项目的代码核心片段。\n4.1 相机 以及 后处理\n让我们现将对应的模型简单的使用 gltf Viewer 进行查看\n但要要实现呈现 2.5D 效果视角的来说，我们需要使用到正交相机而不是透视相机\n此时我们将相机切换为正交相机\nconst aspect = this.sizes.aspect\nthis.frustumSize = 8\nthis.orthographicCamera = new THREE.OrthographicCamera(\n-this.frustumSize * aspect,\nthis.frustumSize * aspect,\nthis.frustumSize,\n-this.frustumSize,\n-50,\n100,\n)\nthis.scene.add(this.orthographicCamera)\n此时场景呈现效果变为\n随后使用合适的后处理优化场景呈现效果。这里我们追求展现出比较老旧游戏机风格的画面，所以我们选择使用 RenderPixelatedPass\n后处理效果来处理画面\nthis.renderPass = new RenderPass(this.scene, this.camera.instance)\n// 创建像素化Pass\nthis.pixelPass = new RenderPixelatedPass(3, this.scene, this.camera.instance)\nthis.pixelPass.normalEdgeStrength = 0.53\nthis.pixelPass.depthEdgeStrength = 0.4\n// 创建输出Pass用于提亮画面\nthis.outputPass = new OutputPass()\nthis.outputPass.exposure = 1.2 // 增加曝光度\nthis.outputPass.toneMapping = THREE.ReinhardToneMapping // 使用Reinhard色调映射\nthis.outputPass.toneMappingExposure = 1.2 // 色调映射曝光度\nthis.composer = new EffectComposer(this.renderer)\nthis.composer.addPass(this.renderPass)\nthis.composer.addPass(this.pixelPass)\n// 此时像素化效果已经生效，但画面比较灰暗 需要提亮\nthis.composer.addPass(this.outputPass) // 添加输出Pass\n此时画面就已经有点复古 GBA\n彩色游戏机画面的感觉了\n4.2 角色控制 以及 Octree\n在实现类似宝可梦城镇的经典四方向移动体验时，常规的3D角色控制器如ecctrl\n往往难以满足需求，这是因为它们通常提供的是自由的全方位移动控制。而要实现这种复古风格的受限移动，关键在于对键盘输入的特殊处理和移动方向的精确控制。\n- 传统3D控制器允许360度自由移动，而经典RPG需要限制为四个基本方向\n- 常规控制器通常处理的是连续输入，而我们需要离散的方向切换\n其实是我将角色的移动方向限制在了\"上下左右\"四个方向。那么我是如何做到的呢？\n- 首先我们需要让键盘能在合适的时候相应对应的行为\n// 按键按下事件\nwindow.addEventListener('keydown', (e) => {\nswitch (e.code) {\ncase 'ArrowUp':\ncase 'KeyW':\nthis.actions.up = true\nthis.keys.w = true\nthis.keys.arrowUp = true\nbreak\ncase 'ArrowDown':\ncase 'KeyS':\nthis.actions.down = true\nthis.keys.s = true\nthis.keys.arrowDown = true\nbreak\ncase 'ArrowLeft':\ncase 'KeyA':\nthis.actions.left = true\nthis.keys.a = true\nthis.keys.arrowLeft = true\nbreak\ncase 'ArrowRight':\ncase 'KeyD':\nthis.actions.right = true\nthis.keys.d = true\nthis.keys.arrowRight = true\nbreak\ncase 'Space':\nthis.actions.brake = true\nthis.keys.space = true\n// 跳跃逻辑\nif (e.code === 'Space' && this.playerOnFloor && !this.character.isSitting) {\nthis.jump()\n}\nbreak\ncase 'KeyR':\nthis.actions.reset = true\nbreak\ncase 'KeyZ':\nthis.toggleSit()\nbreak\n}\n})\n在这里有一个小插曲来解释我为什么使用 event.code 而不是 event.key\n对于欧洲的玩家比如法国来说他们使用的键盘布局被称为AZERTY layout\n，实际上对应键位如下\n所以我们需要根据，键位在键盘上的物理位置来确定用户输入的指令。\n物理键位能确保玩家获得相同的控制体验，无论使用什么语言的键盘。不论是AZERTY\n布局，或者我们常用的QWERTY\n布局都可以让方向控制保持一致。\n在能够精确的控制当前相应不同地域键盘的指令之后，我们来实现角色的移动逻辑\n移动逻辑相关 flowmap\n如下：\n┌───────────────┐\n│ 1. 是否坐下? │\n│ isSitting? │\n└──────┬────────┘\n| │是\n| ▼\n| [直接返回]\n│否\n▼\n┌────────────────────────────┐\n│ 2. 初始化 moveX, moveZ, │\n│ newDirection │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 3. 是否在地面? │\n│ !playerOnFloor │\n└──────┬─────────────┬───────┘\n│否 │是\n│ ▼\n│ playerVelocity.y -= GRAVITY * dt\n▼\n┌────────────────────────────┐\n│ 4. 计算 speedDelta │\n│ (地面上快, 空中慢) │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 5. 检查按键输入 │\n│ (WASD/方向键) │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 6. 有移动输入? │\n│ (moveX ≠ 0 || moveZ ≠ 0) │\n└──────┬─────────────┬───────┘\n│否 │是\n│ ▼\n│ updateCharacterRotation(调整朝向)\n|\n│ 行走动画\n│ playAnimation('walk')\n│\n│ playerVelocity.x/z += moveX/Z\n▼ ▼\n┌────────────────────────────┐\n│ 7. 没有移动且在地面? │\n│ (!isSitting && onFloor) │\n└──────┬─────────────┬───────┘\n│计算完毕 │是\n│ ▼\n│ playAnimation('idle')\n▼\n┌────────────────────────────┐\n│ 8. 速度阻尼 │\n│ playerVelocity *= damping │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 9. 计算位移 │\n│ deltaPosition = │\n│ playerVelocity * dt │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 10. 移动碰撞体 │\n│ playerCollider.translate │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 11. 碰撞检测与修正 │\n│ playerCollisions() │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 12. 动画状态更新 │\n│ updateAnimationState() │\n└────────────┬───────────────┘\n▼\n┌────────────────────────────┐\n│ 13. 同步模型与碰撞体 │\n│ updateModelFromCollider() │\n└────────────────────────────┘\n现在我们需要引入 Octree\n了，他算是在threejs\n中常见的碰撞检测方法。但这里我建议不要直接使用场景模型作为 Octree\n，Octree\n适合稀疏三维空间，层级分明，而在动态物体多时重建开销大 。我非常推荐你构建一个专属于 Octree\n用的碰撞检测用 Object 3D\n网格基本体，他要做的事情很简单，只是尽可能的将那些场景中的\"实体\"包裹住，比如当前**视觉场景( 图 1 )**如下：\n那么对应的**碰撞用网格基本体(图 2 )**为：\n简单的网格基本体能够降低用户设备的性能需求！毕竟不可能要求大家的电脑都是 4090。那么用户操控的角色实际上更像是在图 2 中的碰撞专用基本体中移动，然后将位置实时映射到视觉场景中的详细模型上。当用户在\"Octree\"的世界中碰到障碍时，则会“阻碍”其继续进行移动。\n现在先让我们看看角色控制代码, 从一个 tick\n内需要执行那些逻辑我想会更好理解一点 (你可以理解一个tick\n就是画面上的“一帧”，但这种从物理层面是错误的)\n// 判断是否有移动动作\nconst isAnyMovementKeyPressed = this.actions.up || this.actions.down || this.actions.left || this.actions.right\n// 角色移动\nif (!this.character.isSitting) {\nthis.moveCharacter(deltaTime)\n}\nelse if (!isAnyMovementKeyPressed && this.playerOnFloor) {\n// 阻尼\nconst damping = Math.exp(-10 * deltaTime) - 1\nthis.playerVelocity.addScaledVector(this.playerVelocity, damping)\n// 计算位移\nconst deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime) //计算实际位移\nthis.playerCollider.translate(deltaPosition) //应用位置更新\n}\nthis.playerCollisions() //碰撞检测与修正\nthis.updateModelFromCollider() //同步模型和碰撞体\n我们可以看到，当用户在没有坐着时触发移动指令则会调用moveCharacter\n相关逻辑，而当用户停止移动时则会使用户缓慢停下来，这里使用Math.exp(-10 * deltaTime) - 1\n来模拟阻尼效果，使得 damping\n得以迅速降为 -1。\n而在之前的角色控制流程图中提到移动的逻辑说白了就是计算位移，移动碰撞体，碰撞检测与修正最后同步模型与碰撞体。\n4.2.1 计算位移\n位移计算逻辑很简单，就像我们正常去操控一个网格基本体在三维空间的位置，速度 X 时间 = 位移(标量),确定方向将位移应用到该方向上构成矢量。\nmoveCharacter(deltaTime) {\nif (this.character.isSitting)\nreturn\n// 计算移动方向\nlet moveX = 0\nlet moveZ = 0\nlet newDirection = null\n// 重力\nif (!this.playerOnFloor) {\nthis.playerVelocity.y -= this.GRAVITY * deltaTime\n}\n// 速度\nconst speedDelta = deltaTime * (this.playerOnFloor ? 25 : 8)\n// 用 actions 判断移动\nif (this.actions.up) {\nmoveZ = -speedDelta\nnewDirection = new THREE.Vector3(0, 0, 1) // 朝向-Z\n}\nelse if (this.actions.down) {\nmoveZ = speedDelta\nnewDirection = new THREE.Vector3(0, 0, -1) // 朝向+Z\n}\nelse if (this.actions.left) {\nmoveX = -speedDelta\nnewDirection = new THREE.Vector3(1, 0, 0) // 朝向-X\n}\nelse if (this.actions.right) {\nmoveX = speedDelta\nnewDirection = new THREE.Vector3(-1, 0, 0) // 朝向+X\n}\n// 添加速度\nif (moveX !== 0 || moveZ !== 0) {\n// 更新角色朝向\nthis.updateCharacterRotation(newDirection)\n// 只有在地面且不是跳跃时才播放行走动画\nif (this.playerOnFloor && this.currentAnimation !== this.animations.jump) {\nthis.playAnimation('walk')\n}\n// 添加速度\nif (moveX !== 0) {\nthis.playerVelocity.x += moveX\n}\nif (moveZ !== 0) {\nthis.playerVelocity.z += moveZ\n}\n}\nelse if (this.playerOnFloor) {\n// 没有移动时播放待机动画\nif (!this.character.isSitting && this.currentAnimation !== this.animations.jump) {\nthis.playAnimation('idle')\n}\n}\n// 阻尼\nconst damping = Math.exp(-4 * deltaTime) - 1\nthis.playerVelocity.addScaledVector(this.playerVelocity, damping)\n// 位置更新\nconst deltaPosition = this.playerVelocity.clone().multiplyScalar(deltaTime)\nthis.playerCollider.translate(deltaPosition)\n// 动画状态更新\nthis.updateAnimationState()\n}\n4.2.2 避免多转半圈\n这里唯一要注意的地方就是更新角色朝向我单独拿出来写了，一般的思路不应该是在明确WSAD\n对应当前角色的东西南北面朝向前提下将代码写成以下形式吗？\nif (this.actions.up) {\nmoveZ = -speedDelta\nnewDirection = new THREE.Vector3(0, 0, 1) // 朝向-Z\nnewRotation = Math.PI/2 //更新旋转\n}\nelse if (this.actions.down) {\nmoveZ = speedDelta\nnewDirection = new THREE.Vector3(0, 0, -1) // 朝向+Z\nnewRotation = -1 * Math.PI/2 //更新旋转\n}\nelse if (this.actions.left) {\nmoveX = -speedDelta\nnewDirection = new THREE.Vector3(1, 0, 0) // 朝向-X\nnewRotation = 0 //更新旋转\n}\nelse if (this.actions.right) {\nmoveX = speedDelta\nnewDirection = new THREE.Vector3(-1, 0, 0) // 朝向+X\nnewRotation = Math.PI //更新旋转\n}\n但这种代码会在用户角色在从+Z\n轴转向 -X\n轴时出现多转半圈的问题,因为我们转向用程序写出来就是从 newRotation = -1 * Math.PI/2\n状态渐变到 newRotation = Math.PI\n状态 ，不经过特殊处理他一定会有一种情况如下图 先从 -π/2 到 0 再到 π。\n实际画面为\n为了避免这种情况我们需要将转向限制在 [-PI, PI] 之间\nupdateCharacterRotation(newDirection) {\nif (!newDirection || this.character.currentDirection.equals(newDirection))\nreturn\n// Store new direction\nthis.character.currentDirection = newDirection\n// Calculate the appropriate rotation based on direction\nlet targetRotation = 0\nif (newDirection.z === -1) {\ntargetRotation = 0 // Facing -Z\n}\nelse if (newDirection.z === 1) {\ntargetRotation = Math.PI // Facing +Z\n}\nelse if (newDirection.x === -1) {\ntargetRotation = Math.PI / 2 // Facing -X\n}\nelse if (newDirection.x === 1) {\ntargetRotation = -Math.PI / 2 // Facing +X\n}\n// Get the current rotation\nconst currentRotation = this.character.instance.rotation.y\n// Calculate the difference between the current rotation and the target rotation\nlet deltaRotation = targetRotation - currentRotation\n// Normalize the delta rotation to the range [-PI, PI]\nif (deltaRotation > Math.PI) {\ndeltaRotation -= 2 * Math.PI\n}\nelse if (deltaRotation < -Math.PI) {\ndeltaRotation += 2 * Math.PI\n}\n// Calculate the new target rotation\nconst newTargetRotation = currentRotation + deltaRotation\n// Animate rotation\ngsap.to(this.character.instance.rotation, {\ny: newTargetRotation,\nduration: 0.2,\nease: 'power1.out',\n})\n}\n这样一来就不会多转半圈了\n4.2.3 碰撞检测和修正\n移动碰撞体没什么好讲的，仅仅只是应用矢量到对应的对象上，让我们集中在碰撞检测上。首先我们得使用 Octree\n基于我们创建的碰撞专用基本体构建八叉树\nOctree\n提供给我们 fromGraphNode\n从 three.js 的 Object3D（通常是 Mesh 或 Group）中提取所有三角形，构建八叉树。\nimport { Octree } from 'three/addons/math/Octree.js'\nthis.worldOctree = new Octree()\nsetupCollider() {\n// Initialize octree from the collision model\nif (\"碰撞专用网格基本体\") {\nthis.worldOctree = new Octree()\nthis.worldOctree.fromGraphNode(\"碰撞专用网格基本体\")\n}\n}\n随后为用户角色创建胶囊体\nimport { Capsule } from 'three/addons/math/Capsule.js'\nthis.playerCollider = new Capsule(\nnew THREE.Vector3(0, 2.35, 0),\nnew THREE.Vector3(0, 3, 0),\n0.35,\n)\n此时场景实际上在 Octree\n那边可能是这样的\n用户角色的碰撞体积以胶囊体为准，而场景的碰撞体则以图中黑色建筑为准。\n而碰撞检测则需要用到Octree\n提供的另一个方法capsuleIntersect\n: 检测胶囊体与八叉树内所有三角形的碰撞，返回碰撞法线和深度。\nplayerCollisions() {\nconst result = this.worldOctree.capsuleIntersect(this.playerCollider) //检测胶囊体与八叉树内所有三角形的碰撞，返回碰撞法线和深度。\nthis.playerOnFloor = false\nif (result) {\nthis.playerOnFloor = result.normal.y > 0\n// Adjust position to prevent clipping\nif (result.depth >= 1e-10) {\nthis.playerCollider.translate(result.normal.multiplyScalar(result.depth))\n}\n}\n}\n那么他是如何起作用的呢?\n正如前面提到capsuleIntersect\n: 检测胶囊体与八叉树内所有三角形的碰撞，返回碰撞法线和深度，则当有返回法线矢量，则证明胶囊体与墙壁碰撞。接着让角色朝法线方向移动来抵消掉用户向墙里走的位移,从而避免穿模的出现\nthis.playerCollider.translate(result.normal.multiplyScalar(result.depth))\n如果你想了解更多的Octree\n碰撞检测逻辑，我推荐你看 threejs\n的 这个官方用例\n4.3.岩浆与海\n最后是场景中的水体，比如说岩浆和海，这里我简单拿岩浆举例\n通常这种风格的水体在行业内被称为 “风格化水体 (stylized water | toon water) ”。你可以通过搜索这些关键词来获取不一样的水体风格，让我们来分析做这样一个水体需要经理那些步骤。\nStep1: 我们需要一个水面纹理\nStep2: 在靠近水体边缘的地方加入渐变浮沫\nStep3: 让水面真正流动起来\n4.3.1水面纹理\n首先我们需要让一个平平无奇的平面看起来像是水面\n实现这种水面的方式由很多种，比如你可以在网上寻找这种水面遮罩素材\n或者自己选择一种噪声来模拟水面，比如 这篇文章 使用柏林噪声来模拟水面效果\n而我使用的则是蜂窝噪声(Cellular Noise),也被称为网格噪声。网格噪声基于距离场，这里的距离是指到一个特征点集最近的点的距离。这里同样为你奉上由ShaderBook\n写的蜂窝噪声相关文章, 但我仍会简单阐述其实现原理。\n首先我们需要知道什么是距离场，即为(SDF)，定义说有符号距离场 (SDF) 是计算机图形学中常用于渲染的形状的数学表示。它是一个函数，接收空间中的一个点，并返回到该形状表面上最近点的距离，并用符号表示该点位于形状内部还是外部：\n- 如果值为负，则该点位于形状内部。\n- 如果值为零，则该点位于形状的表面上。\n- 如果值为正，则该点位于形状之外。\n让我们来看以下代码，\nfloat sdfCircle(vec2 center, float r, vec2 pos) {\nreturn distance(center, pos) - r;\n}\nvoid main() {\nvec2 uv = gl_FragCoord.xy;\nfloat t = sdfCircle(iResolution * 0.5, iResolution.y * 0.4, uv);\ngl_FragColor = vec4(vec3(t), 1.0);\n}\n其中 iResolution * 0.5\n就是画布中心的位置，而 iResolution.y * 0.4\n则代表值为当前画布高度的 0.4\n。\ndistance(center, pos) - r\n就是计算当前画布上的每一个点 pos\n到画布中心 center\n的举例跟 iResolution.y * 0.4\n谁大谁小，举例\n- 当点\npos\n的距离小于iResolution.y * 0.4\n时，则t\n为负数，此时gl_FragColor = vec4(vec3(t), 1.0);\n就是gl_FragColor = vec4(vec3(负数), 1.0);\n显示成黑色。 - 当点\npos\n的距离大于iResolution.y * 0.4\n时，则t\n为正数，此时gl_FragColor = vec4(vec3(t), 1.0);\n就是gl_FragColor = vec4(vec3(正数), 1.0);\n显示成灰色或白色。\n最后得出的效果如下:\n这是个很简单的理论，但也是蜂窝噪声的基石。再让我们会看这句话计算它们与当前像素的距离并存储最接近的值\n假设现在我们平面上有N个\"中心点\"，那么我们现在要做的事分别求出单个片元到所有\"中心点\"的距离并求出最小值\nuniform vec2 iResolution;\nuniform float iTime;\nvec2 points[9];\nvoid init() {\npoints[0] = vec2(0.05,0.15);\npoints[1] = vec2(0.35,0.27);\npoints[2] = vec2(0.78,0.04);\npoints[3] = vec2(0.25,0.46);\npoints[4] = vec2(0.50,0.55);\npoints[5] = vec2(0.91,0.37);\npoints[6] = vec2(0.28,0.67);\npoints[7] = vec2(0.53,0.76);\npoints[8] = vec2(0.73,0.75);\n}\nvec2 getPoint(int index) {\nreturn sin(points[index] * 6.28 + iTime / 3.0) * 0.5 + 0.5;\n}\nvoid main() {\ninit();\nvec2 uv = gl_FragCoord.xy / iResolution.xy;\nfloat m_dist = 1.0;\nfor (int i = 0; i < 9; i++) {\nfloat dist = distance(uv, getPoint(i));\nm_dist = min(m_dist, dist);\n}\ngl_FragColor = vec4(0.0, m_dist * 2.25, 0.0, 1.0);\n}\n那么随着特征点越来越多，水面的效果也就随之显现了\n随后可以使用灰度作为混合因子，混合水面颜色和浮沫颜色即可，这点也非常简单\nuniform vec3 color1; // 水色\nuniform vec3 color2; // 白色\n片元着色器\nvoid main() {\ninit();\nvec2 uv = gl_FragCoord.xy / iResolution.xy;\nfloat m_dist = 1.0;\n// 计算点的效果\nfor (int i = 0; i < 11; i++) {\nif (float(i) >= numPoints) break;\nfloat dist = distance(uv, getPoint(i));\nm_dist = min(m_dist, dist);\n}\nfloat factor = smoothstep(0.05, 0.3, m_dist);\n// 使用 factor 作为混合因子, 混合两种颜色\nvec3 waterColor = mix(color1, color2,factor);\ngl_FragColor = vec4(waterColor, 1.0);\n}\n当然你现在可以增加多个特征点或者操控 uv 做出水面蠕动特效，但我们后续会使用flowmap\n就不在这里操作了。\n4.3.2 边缘浮沫\n在水面边缘存在一圈白色的浮沫，这是一种 hack\n手段的模拟菲涅尔现象。我不推荐你学这一块，因为他的应用场景仅仅只在这个案例中，所以我只贴上基本的shader\n代码\n顶点着色器\n// Calculate edge glow effect\nfloat getEdgeGlow(vec2 uv) {\n// Calculate distance to edge\nfloat distToEdge = min(min(uv.x, 1.0 - uv.x), min(uv.y, 1.0 - uv.y));\n// Use smooth step function to create a soft transition\nreturn 1.0 - smoothstep(0.0, edgeWidth, distToEdge);\n}\n片元着色器\nvoid main() {\ninit();\nvec2 uv = gl_FragCoord.xy / iResolution.xy;\nfloat m_dist = 1.0;\n// Calculate point effect\nfor (int i = 0; i < 9; i++) {\nif (float(i) >= numPoints) break;\nfloat dist = distance(uv, getPoint(i));\nm_dist = min(m_dist, dist);\n}\n// Calculate base color\nvec3 baseColor = vec3(m_dist * colorIntensity);\n// Add edge glow\nfloat edgeGlow = getEdgeGlow(uv) * edgeIntensity; // 获取边缘强度做混合因子\n// Mix base color and edge glow\nvec3 finalColor = mix(baseColor, vec3(1.0), edgeGlow);\ngl_FragColor = vec4(finalColor, 1.0);\n}\n4.3.3 流动水面\n这里我要向你介绍游戏中流动水体或者模拟流体的一种常见方法： flowmap\n。这里的flowmap\n指代的并不是程序中的流程图，而是一张记录了2D向量信息的纹理Flow map上的颜色（通常为RG通道）记录该处向量场的方向，让模型上某一点表现出定量流动的特征\n接下来我会向你解释 flowmap\n是如何工作的，以及如何低成本的构建一个flowmap\n。最后我会想你讲述如何将flowmap\n使用在 threejs\n中\n4.3.3.1 flowmap\n的原理\n**将2D\n向量场信息编码到纹理的红色通道& 绿色通道中，每个纹素代表一个流动方向向量，通过在shader中偏移uv再对纹理进行采样，来模拟流动效果。**这就是flowmap\n的作用。\n通俗地说，当片元着色器读取Flowmap上某一点的颜色值时：\n- 红色分量(R)代表X轴方向的流动\n- 绿色分量(G)代表Y轴方向的流动\n- 颜色值的大小决定了流动的强度\n接下来让我们来理解这段话。我们使用一个如图所示的flowmap\n，观察水面的流动方向。\n可以看到水面为橙色的会向右移动，水面为绿的则会向左移动.\n4.3.3.2 低成本的构建一个flowmap\n如果要构建一个正规的工业化 flowmap\n，其实最好选用如 Houdini 等一些专业的软件，但是如果不想学习 Houdini\n或者，需要再最短时间内拿出一个可运行的demo\n，可以试试以下两个工具中的一个。\n- cables.gl - 基于节点的可视化编程工具\n- FlowMap Painter - 专门的Flowmap绘制工具\n这里我简单使用 cables.gl ,构建一个 flowmap\n。\n就比如这样\n**得到可用的效果后将 Flowmap Visualize\n的值降低为 0\n，随后点击下载就获得你想要的flowmap\n了。\n4.3.3.3 如何在Threejs\n中使用flowmap\n第一种方法是使用 Threejs\n中自带的 Water2\n类，详情可以参考 Threejs Flowmap官网案例。\n核心代码如下:\n// 创建水面几何体\nconst waterGeometry = new THREE.PlaneGeometry(10, 10);\n// 加载Flowmap纹理\nconst flowMap = textureLoader.load('textures/water/flowmap.png');\n// 创建水面效果\nwater = new Water(waterGeometry, {\nscale: 1,\ntextureWidth: 1024,\ntextureHeight: 1024,\nflowMap: flowMap\n});\n// 设置位置和旋转\nwater.position.y = 1;\nwater.rotation.x = Math.PI * -0.5;\nscene.add(water);\n随后就会在平面上生成一个带有flowmap流动效果的透明平面\n但我们这里使用的是第二种方法,即为实打实的利用fragment shader\n操控uv\n来达到流动效果\n// 从Flowmap获取流动向量（值范围从[0,1]映射到[-1,1]）\nvec2 flow = texture2D(flowMap, vUv).rg * 2.0 - 1.0;\n// 计算时间相关的流动偏移量\nvec2 flowOffset = flow * flowSpeed * iTime;\n// 应用偏移到UV坐标\nvec2 uv = vUv + flowOffset;\n最后来的效果为\n具体效果还需要根据你自己的个人喜好来调整。完整实现代码可参考项目源码库。通过调整Flowmap纹理和着色器参数，您可以创建从平静水面到湍急河流等各种水体效果。\n5.为什么会鸽一个月？\n其实如果有看了上一期文章的朋友应该知道这个项目已经在上个月就完成了 80 %，但因为个人情感 & 生活上出现了一点问题，之后我消沉了很长一段时间，于是就耽误了文章的更新。我并不是一个自驱力很强的人，真正的编程能力并没有多么的出色，顶多也就是喜欢鼓捣一些神秘小代码。在过去几个月的持续创作中，我收获了来自多个平台的关注和鼓励，甚至包括一些我曾视为行业偶像的人士的认可。这些支持让我既感到荣幸，也时常感到惶恐。\n但我时常看着平台消息通知倍感压力，我认为我远远没有达到能够“系统化教授别人”threejs\n的地步。\n我必须坦诚地承认：\n- 我并非科班出身的专业开发者\n- 我的Three.js知识体系还存在许多不足\n- 持续的高质量输出对我而言是巨大的挑战\n这也是我想说的，我认为后续我会暂停目前Three.js技术文章的定期更新计划。没准会变回曾经的年更博主。但这并不意味着我会停止创作：\n- 我的GitHub仓库仍会持续更新有趣的项目\n- 社交媒体账号会分享新的探索和发现\n- 当有真正值得分享的内容时，我依然会撰写文章\n特别的感谢\n我要特别感谢：\n- 每一位留下评论和建议的读者\n- 那些通过Star和Fork支持我项目的开发者\n- 所有给予我鼓励的同行们\nThree.js领域有许多优秀的作者和教程资源，我相信这个充满活力的社区会继续蓬勃发展。虽然我的角色可能会改变，但我对创意编程的热情不会减退。\n我认为这个平台上有很多其余的非常优秀的Threejs\n领域的作者。他们会继续推动着这个领域到大众视野之中。再会，我的朋友！\n6.最后的一些话\n技术的未来与前端迁移\n随着 AI 技术的快速发展，各类技术的门槛正在大幅降低，以往被视为高门槛的 3D\n技术也不例外。与此同时，过去困扰开发者的数字资产构建成本问题，也正在被最新的 3D generation\n技术所攻克。这意味着，在不久的将来，前端开发将迎来一次技术迁移，开发者需要掌握更新颖的交互方式和更出色的视觉效果。\n本专栏的愿景\n本专栏的愿景是通过分享 Three.js\n的中高级应用和实战技巧，帮助开发者更好地将 3D\n技术应用到实际项目中，打造令人印象深刻的 Hero Section\n。我们希望通过本专栏的内容，能够激发开发者的创造力，推动 Web3D\n技术的普及和应用。\n加入社区，共同成长\n如果您对 Threejs\n这个 3D\n图像框架很感兴趣，或者您也深信未来国内会涌现越来越多 3D\n设计风格的网站，欢迎加入 ice 图形学社区。这里是国内 Web 图形学最全的知识库，致力于打造一个全新的图形学生态体系！您可以在认证达人里找到我这个 Threejs\n爱好者和其他大佬。\n此外，如果您很喜欢 Threejs\n又在烦恼其原生开发的繁琐，那么我诚邀您尝试 Tresjs 和 TvTjs, 他们都是基于 Vue\n的 Threejs\n框架。 TvTjs 也为您提供了大量的可使用案例，并且拥有较为活跃的开发社区，在这里你能碰到志同道合的朋友一起做开源！",
        "summary": "本文介绍了如何使用Three.js和Shader编程构建高定制化的3D场景，并结合AI生成资源来辅助设计。文章还提到了在线预览和调试链接，以及使用AI生成3D模型的流程。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Flutter Widget IDE 预览新进展，开始推进落地发布",
        "url": "https://juejin.cn/post/7497194242211168294",
        "source": "juejin",
        "hot": 1044,
        "time": "",
        "timestamp": 1745706678000,
        "extracted_time": "2025-04-26T22:31:18+00:00",
        "content": "去年 11 月我们就聊过《Flutter 终于正式规划 IDE Widget 预览支持》，而现在 Widget 预览功能终于开始推进正式落地，并发布了第二版的规划文档：\n如果你没看到前文，建议看看 ：juejin.cn/post/744100…\n其实一直以来由于 Flutter 具备 hotload 的能力，所以在 Widget Preview 能力这部分都被认为不是必须的场景，但是基于开发者可以更直观验证一些场景，如屏幕大小、方向、字体大小和区域设置等变量对App 的影响，Widget 预览最终还是被提上了议程。\n而这次， Widget Preview 之所以正式开始推进，核心主要依赖两点：\n因为 Widget Preview 实际会在 .dart_tool\n目录下创建一个名为 widget_preview_scaffold\n的 Flutter 项目，这个预览支持项目是一个 Flutter Web App 。\n所以可以理解为，现在大家都是基于 Canvas 的同源 UI ，所以可以用 Web 来实时渲染，从而在 IDE 内实现实时预览。\n在预览里，开发者可以和预览进行交互，支持缩放和平移，甚至可以预览动画，不过预览时的实际帧率最高只会是 60 FPS。\n而本次 V2 版本规划的预览支持里，主要是新增了 flutter widget-preview\n一些列命令，命令负责为项目生成预览脚手架并与预览环境交互支持。\n例如，执行 flutter widget-preview start\n命令后，就会在 .dart_tool\n目录下生成一个预览工程，工程结构大致为：\n- lib/src/widget_preview_rendering.dart：preview scaffold 项目的真正入口点，负责初始化 Dart Tooling Daemon（DTD） 服务和用于渲染 lib/src/generated_preview.dart 中定义的预览的控件\n- lib/src/generated_preview.dart：包含\nList previews()\n函数，函数最终会将已处理的 WidgetPreview 列表返回到 preview scaffold 用于渲染 - lib/src/widget_preview.dart：包含 WidgetPreview 类的定义，是一个与 Preview 接近 1:1 映射的数据类，类包括一个 builder 属性，这个属性采用一个闭包返回要预览的 widget\n- lib/src/dtd_services.dart：包含一个 Dart Tooling Daemon （DTD） 服务器连接，为工具提供 Widget 预览服务，并访问其他工具提供的服务（比如和 IDE、分析服务器等交互）。\n之后命令会初始化 widget_preview_scaffold\n的 pubspec.yaml\n，在开发者的项目中添加路径依赖，并列出开发者项目中的资源。\n然后在 widget_preview_scaffold\n的根目录下生成一个 preview_manifest.json\n，包含有关当前 Dart 和 Flutter SDK 版本的信息，以及用户的 pubspec.yaml 的哈希值，这个哈希值用于后续自动对比用户工程的 pubspec 是否发生变化。\n接着会使用 package:analyzer\n搜索 @Preview()\n注解，就如下面代码一样 ，记录需要预览函数名称、库和提供给注解的所有参数等。\n最终会根据 analyzer 搜索的结果生成 lib/src/generated_preview.dart\n。\n@Preview(name: 'Top-level preview')\nWidget preview() => const Text('Foo');\n@Preview(name: 'Builder preview')\nWidgetBuilder builderPreview() {\nreturn (BuildContext context) {\nreturn const Text('Builder');\n};\n}\nclass MyWidget extends StatelessWidget {\n@Preview(name: 'Constructor preview')\nconst MyWidget.preview({super.key});\n@Preview(name: 'Factory constructor preview')\nfactory MyWidget.factoryPreview() => const MyWidget.preview();\n@Preview(name: 'Static preview')\nstatic Widget previewStatic() => const Text('Static');\n@override\nWidget build(BuildContext context) {\nreturn const Text('MyWidget');\n}\n}\n而一旦用户运行了命令并生成预览脚手架工程之后，它就会被编译并使用提供的 --machine 运行，之后 Flutter 工具将在开发人员的项目目录上初始化一个文件观察器，用于检测源代码的更改，比如：\nanalyzer 会检测文件中添加或删除的\n@Preview()\n，必要时重新生成 lib/src/generated_preview.dart 。\n另外，flutter widget-preview clean\n可以触发删除 .dart_tool/widget_preview_scaffold/\n项目，强制它在下次运行 flutter widget-preview start\n时重新生成 。\n而针对 Preview 注解也有可定制参数，比如在预览时调节主题，亮度，文本大小等：\nbase class Preview {\n/// Annotation used to mark functions that return widget previews.\nconst Preview({\nthis.name,\nthis.width,\nthis.height,\nthis.textScaleFactor,\nthis.wrapper,\nthis.theme,\nthis.brightness,\n});\n同时，为了防止用户在整个 widget 预览环境中执行热重启，每个渲染的预览都能够在预览的 widget 上执行 “Soft restart” ：\n“Soft restart” 只是从一帧的 widget 树中删除预览的 widget，然后再将其重新插入到下一帧：github.com/flutter/flu…\n最后，因为最终需要在 IDE 中托管的 webview 中打开预览，需要类似于 Dart/Flutter DevTools 嵌入到 IDE 中的方式，但是由于 DWDS（Web VM 服务实现）需要一个开放的 Chrome 调试端口才能运行，这在 VSCode 等 IDE 中不可用，但是 DWDS 又是热重载的必备支持，所以目前最大的阻碍是：\n在没有 Chrome 调试端口的情况下运行 DWDS，同时保持热重载，做到当 DWDS 无法访问 Chrome 调试器时，改为提供一组有限的功能：github.com/dart-lang/w…\n其他问题还有比如 dart:io\n、原生插件等场景需要如何在预览工程处理，但是这些问题都是后话，在 DWDS 适配 IDE场景支持后，IDE 预览就可以基本考虑实验性落地了。\n看得出来其实 IDE 预览的话核心其实来自 Flutter Web ，由于 Flutter Web 支持 hotload 之后，用一个阴影工程来做实时预览确实是一个相对低成本的选择，不过真的要完整落地，需要考虑的细节还是很多，其中最重要的莫过于使用过程中的性能影响，如果体验太差，还不如直接 hotload 运行实际。\n那么，你会期待或者需要 Flutter 的 IDE Widget 预览吗？",
        "summary": "Flutter Widget IDE 预览功能开始推进落地，第二版规划文档发布。该功能通过创建 Flutter Web App 实现 IDE 内实时预览，支持交互、缩放、动画等，新增了 flutter widget-preview 命令及相关文件结构。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "[targetSDK升级为35] 恶心的EdgeToEdge适配",
        "url": "https://juejin.cn/post/7497170890083762213",
        "source": "juejin",
        "hot": 927,
        "time": "",
        "timestamp": 1745712067000,
        "extracted_time": "2025-04-27T00:01:07+00:00",
        "content": "开发多年, 碰到不少恶心需求与恶心甲方了. 但这次edgeToEdge真是刷新了我对google下限的想像.\n事情是Google要求8月底前, 所有play store上的app升级targetSDK为35 (政策链接是这个: developer.android.com/google/play…, 目前只说2024年8月底前到34; 但按google每年的规律, 前几年也是每年都升了33, 34的, 所以今年8月底前要肯定是升到35的).\n其它所有变动都可以理解, 只有一项是恶心的EdgeToEdge, 即Google强制所有app的所有页面全部变为全屏模式(full screen, edge to edge).\n一. EdgeToEdge为何让人火大?\n先来个图说明下这个强制要求会让我们的app如何变化:\n恶心的点就在于Google是强制所有app都要这样做, 而且还有一些细节点很恶心, 后续会讲到. 这样就给我们的每一个app都造成了麻烦. 我们app设计得好好的, 为什么一定要全屏.\n而且你强制让最上面的OS status bar给占了有什么意思哦, 这不是把\"时间, 电量, wifi信号, ..\"这些都给遮挡了嘛?!\n所以Google就会让你做适配, 不要占了status bar (如上图的And15+所示, 页面内部就没有占据status bar的区域)? 我就晕死了, 那适配后的效果跟不全屏不就一样了, 那你强制全屏有什么意思!!!!\n同理, 你的手机要是底部是\"三按钮\"或\"二按钮\"的OS navigation区域(如\"后退键 + home键 + recentTasks键\"), 那全屏后你的内容也会和这个区域重合.\n重合自然是不行的, 不然你按下去, 到底是响应OS的back键, 还是响应你页面中的某View的点击呢? 所以你肯定要做成不重合.\n那又回到原点? 要是不强制全屏, 本来就不重叠; 你现在强制全屏, 又要给开发增加额外工作量来做到不重合. 这就像极了, 本来一条路好好的, 你非要拆了, 再重新修一遍, 重新搞得和原来的路一样, 那你干嘛重修这条路?\np.s. Google离最初的\"不作恶\"初心越来越远了, 现在的Android更新也不侧重于用户的体验, 反而一个劲地推销自己的AI. 很多新东西也越来越倾向于大厂的开发/经理为了自己的KPI生硬地搞新东西, 而不是想这些新东西能解决什么难受的痛点.\n二. 着手做之前的分析\n虽然这个需求让人很无语, 吐槽完后做还是肯定要做的. 不过我们有必要在编码之前, 先分解下这个需求, 以及分析下它到底影响了哪些部分, 这样我们才能一步一步地去解决这些问题.\n2.1 影响哪些设备?\n经过测试, 一个app的targetSDK为34-\n时, 在任何设备上都不会被强制全屏.\n但要是你的app升级targetSDK到了35+\n了, 那么:\n- 在Android 14-的设备上, 不会全屏\n- 在Android 15+的设备上, 会强制全屏.\n- (这个其实有个后门, 在\n第三章 最快的适配\n里会讲到)\n- (这个其实有个后门, 在\n这个意味着什么?\n: 意味着, 要是我做了某些操作, 来让Android 15+适配此需求; 但同时我需要要让Android 14-不要受此影响 (因为Android 14-的设备没有强制全屏嘛!)\n2.2 影响所有页面, 所有组件吗?\n若你升级了targetSDK到35+, 那在Android 15+的设备上就会强制全屏.\n不过, 有些细节要注意:\n- 若你的页面本来就是全屏 (如很多app的splashActivity本身就是全屏, 或是video play页面本身也是全屏), 那它不受影响, 仍会是全屏的.\n- 若你的页面本身没有全屏, 那就会被强制全屏.\n所以问题的规模再次缩小: 我们需要让所有本来非全屏的页面来适配这个edgeToEdge的要求\n.\n另外强制一下, 而这里要做的改动是涉及到: Activity, Fragment, BottomSheetDialogFragment, ... 这些所有组件的哦!\n2.3 代码上如何实现?\n其实现在你新建一个Android工程, 它的Activity会写上:\nclass MainActivity : AppCompatActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContentView(R.layout.activity_main)\nViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\nval systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\nv.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\ninsets\n}\n}\n}\n它这里的R.id.main\n就是整个Activity的rootView:\n这个代码已经就已经是我们的解决方案了. 其核心思想就是:\n- 在时机合适时 (\nOnApplyWindowInsetsListener\n)时, 给Activity中的内容加一个上下左右的padding, 这样就可以让我们app的页面不和上面的status bar重叠, 也不全下面的navigation zone重叠.\n2.5 思路有了\n那只要让Activity的rootView做一定的padding就行了, 相当于是:\n- paddingTop = statusBar.height\n- paddingBottom = navigationZone.height\n那我们完全可以在BaseActivity中用:\nclass BaseActivity : AppCompatActivity() {\noverride fun onCreate(bundle) {\nsuper.onCreate(bundle)\nenableEdgeToEdge()\nsetContentView(...)\nViewCompat.setOnApplyWindowInsetsListener {\nrootView.setPadding(...)\n}\n}\n}\n这个问题貌似这样简单一个设置就能成功让所有页面适配edgeToEdge了. 哎, 事情要是能这么简单, 那也算google良心了. 可偏偏google搞了好多事情, 让我们本来困难的适配工作变得更加艰难.\n2.5 困难1: top方向\n第一个困难就来自于Google设计人员的有限小脑以为所有页面都是非全屏的, 所以你上面的设置就没问题.\n但上面第2.2小节\n说了, 原本已经全屏的页面是不受影响的. 你要是再加上个paddingTop, 那效果反而变成非全屏了.\n所以具体到top的方向, 我们就要区分处理:\n- Android 14- (不全屏)\n- Andorid 15+的全屏页面 (不要做paddingTop)\n- Android 15+的非全屏页面(要做paddingTop)\n2.6 困难2: top方向\n其实从上一个图中可以看到, 我们的第二个问题, 那就是我们把Activity的rootView加了一个paddingTop后, 就把statusBar的区域给空出来了, 但空出来的好怪, 成了一个透明色, 搞得时间, 电量, 这些信息都看不见了.\n所以在top方向上, 我们要做的其实是:\n- Android 14- (不全屏)\n- Andorid 15+的全屏页面 (不要做paddingTop)\n- Android 15+的非全屏页面\n- (要做paddingTop)\n- (还要给statusBar区域加上颜色)\n2.7 困难3: bottom方向\n联明的你肯定想到了bottom的方向上的困难也是类似的, 也要给navigation zone添加颜色 (加了paddingBottom后其背景色也成了空白了). 是的, 这样的想法是对的.\n但其实更困难的点来自于Google的Material库.\nimplementation 'com.google.android.material:material:1.12.0'\n比如说, 若你使用了Material库中的BottomNavigationView\n, 来看下效果:\n是的, Google\"贴心\"地已经为Material库里做好了edgeToEdge的适配. 但这种所谓的\"贴心\"反而增加了我们的工作量, 因为我们本来就是想在BaseActivity中简单加上 paddingBottom = systembars.bottom\n, 现在发现不能这样了, 因为有了BottomNavigationView这样的, 底部paddingBottom应该为0了.\n小总结下, 在bottom方向\nAndroid 14-\n不用变化Android 15+ && 有BottomNavigationView/BottomAppBar\n: 这时paddingBottom应该为0Android 15+ && 没有BottomNavigationView/BottomAppBar\n: paddingBottom应该为systemBar.bottom\n2.8 困难4: BottomSheet\n当我们变化targetSDK为35后, bottomSheet也变了, 来看下示例:\n我们的BottomSheet布局如下:\n即是把Button先放到最下方, 然后RecyclerView再占据剩下的所有空间.\n从上面的表格可以知道, And15+下,\n- Navigation Zone倒是和BottomSheet没有重叠\n- 但是BottomSheet的下方一大段内容 (测试约有110dp的样子)消失了.\n所以我们要对Android 15+的BottomSheet也要特别处理一下.\n2.9 小总结\n综上所述,\n- Google的Material库会自动适配, 导致我们要特别处理一下它;\n- 同时要是已经全屏的页面, 也要处理下;\n- 同时要注意下And 14-, And 15+有所不同, 要小心点\n2.10 more...\n好吧, 其实还有更多细节. 不过更多的细节问题只是小问题了, 我们后续会讲到, 并不影响我们这里的分类了.\n三. 最快的适配 (有后患)\n上面的分析已经大致了解了要分别处理哪几点, 但其实若你的时间紧, 来不及处理这么多, Google是开了个后门的. 你可以这样:\nstep 1.\n找到application的theme\nstep 2.\n给这个theme添加一个属性:\ntrue\n这样一来, 你的页面即使在Android 15+设备上也不会强制全屏. 不过Google也说明了, 这个flag的设置只在Android 15有用, 到了Android 16上你就是设置了它为true, 也会被Android给忽略掉.\n所以设置这个flag, 只能让你今年不去适配edgeToEdge, 但明年(2026年)8月底, 你还是要去适配edgeToEdge的. 即还是要走第四章 稳当的适配\n的各个步骤.\n四. 稳当的适配 (无患)\n4.1 升级Activityx库 (可选)\n现在既然升级到了targetSDK = 35, 那一些Androidx库也可以升级了, 如:\nimplementation \"androidx.activity:activity-ktx:1.9.0\"\nimplementation \"androidx.fragment:fragment-ktx:1.7.1\"\n这些库一般是和targetSDK绑定的, 你不升到某个版本还用不了高版本的activity-ktx库.\n升级它的原因是我们需要Activity中的enableEdgeToEdge()\n方法, 低版本的activity-ktx\n里没有.\n4.1.1 为何说它是可选\n因为在我的测试过程中, 我发现enableEdgeToEdge()\n其实并不是必需的.\n是的, 现在Google官网, Google的demo, 以及很多文章都在介绍:\n- 你要要使用\nenableEdgeToEdge()\n这个方法, - 再配合\nViewCompat.setOnApplyWindowInsetsListener(rootView) {v, insets -> ...}\n来调整padding 这就行了.\n但我想了想, 其实它并不是必需的. 在我的多次测试下, 如何你没用调用enableEdgeToEdge()\n方法, 那么:\n- Android 14-上页面也不全屏.\nViewCompat.setOnApplyWindowInsetsListener()\n这个回调不会被触发\n- Android 15+上页面仍是全屏.\nViewCompat.setOnApplyWindowInsetsListener()\n这个回调仍会被触发\n但要是你调用了enableEdgeToEdge()\n, 那么:\n- Android 14-上页面就是全屏\n- Android 15+上页面也是全屏.\n- 在所有机型上,\nViewCompat.setOnApplyWindowInsetsListener()\n这个回调都被触发了\n说到这里, 其实我们就明白了,\n- Android 15+自动强制全屏, 即相当于为我们调了\nenableEdgeToEdge()\n- Android 14-上不调用\nenableEdgeToEdge()\n就不会是全屏.\n=> 所以enableEdgeToEdge()\n是想在全平台上实现全屏效果.\n我都哭死了, 这么恶心的全屏效果我才不想在全屏上实现呢. 我只想让Android 15+有这样的效果就行了. 所以我的适配方案是没有调用的enableEdgeToEdge()\n方法的!!\n4.2 top方向上的调整\n不调用enableEdgeToEdge()\n, 那如何调整top上的全屏呢?\n我们来看几种情况:\n- Android 14-: 因为没调用\nenableEdgeToEdge()\n, 所以完全不用理会这种情况 - Android 15+ && 全屏页面: 就是升级到targetSDK = 35, 效果仍不变, 所以不用管\n- Android 15+ && 非全屏页面: 这些页面我们都是有ActionBar/ToolBar/TopBar在上面的, 如下图所示:\n这里有一个规律: 即非全屏页基本上全是有ActionBar/TopBar/ToolBar这样的头在top上的, 所以我们只要这样做就能完美适配了:\n假设我们的topBar原本调试是50dp, statusBar调试是34dp, 所以我们原来的dimen是: topbar_height = 50dp\n的.\n现在我们修改下, 在topBar上新加一个View, 宽度为全屏, 高度为top_placeholder_height\n:\nres/values/dimens.xml\n: 设置top_placeholder_height = 0dp\nres/values-v35/dimens.xml\n: 设置toolbar_height = 34dp\n当然你若是担心statusBar高度不一定是34dp, 也可以在代码中得到后更新这个topbar的高度即可:\n// BaseActivity\nval isAndroid15 = Build.VERSION.SDK_INT >= Build.VERSION_CODES.VANILLA_ICE_CREAM //VANILLA_ICE_CREAM是35\nval hasTopBar = contentView.findViewById(R.id.topbar) != null\nif (isAndroid15 && hasTopBar) {\ntopPlaceHolderView.updateLayoutParams {\nheight = getStatusBarHeight()\n}\n}\n小结:\n- Android 14-与Android 15+的全屏页面可以不用管\n- Android 15+的非全屏页面, 只要调整下actionBar的调试即可.\n没有使用enableEdgeToEdge()\n, 也没有使用paddingTop = systembars.top\n, 只在有TopBar的地方加一个空view即可. 空View的高度则是根据Android版本不同而变化.\n4.3 Bottom方向\n4.3.1 处理paddingBottom\n这个因为有些页面有BottomNavigationBar, 有些没有, 所以只好全局地设置了, 我们应该要在BaseActivity中设置:\noverride fun onStart() {\nval pageRootView = window.decorView.findViewById(android.R.id.content).getChildAt(0)\nval hasBottomBar = pageRootView.findViewById(R.id.bottomBar) != null\nViewCompat.setOnApplyWindowInsetsListener(pageRootView) { v, insets ->\nval systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\nval paddingBottom = if(hasBottomBar) 0 else systemBars.bottom\nv.updatePadding(systemBars.left, 0, systemBars.right, paddingBottom)\ninsets\n}\n}\n-\n说明1: BaseActivity还不知道每个子类页面是inflate了哪个layout XML, 所以我们要在onStart这种已经inflate完毕的时机里去调用这个\nViewCompat.setOnApplyWindowInsetsListener\n方法 -\n说明2: 如上面所述, 有bottomNavigationView的地方, 我们就不要调整paddingBottom了, 所以有了上面的\nval paddingBottom = if(hasBottomBar) 0 else systemBars.bottom\n的设置 -\n说明3: Android 14-的设备, 因为没有调用\nenableEdgeToEdge()\n方法, 所以这个ViewCompat.setOnApplyWindowInsetsListener\n回调根本不会被调用, 所以无须担心Android 14-的设备了. 它们的体验和以前一样的.\n效果如下:\n4.3.2 处理OS navigation zone的颜色\n明显从上面看到这个navigation zone的颜色不太对, 太透明了, 所以我们来修改下:\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nwindow.navigationBarColor = getColor(R.color.purple)\n}\n效果如下:\n备注: 要是有同学看其源码, 能发现这方法说And 15+上, 这个方法将无效 -> 不过, 我的实践证明这个方法在targetSDK = 35时仍可以用.\n4.4 BottomSheet的处理\n这里又要骂Google不当人子了, 你既然是所有页面都要app们去适配, 那为何不让开发们自己去做就好了? Google一定要去修改BottomNaivgationView, BottomSheet的代码, 导致我们app的开发工作量更大了.\n这里也是, BottomSheet的处理更复杂, 原因就是BottomSheet来自于Google Material库.\n4.4.1 他人的建议\n文章来源于: 《Advanced Android Edge-ToEdge: BottomSheet》\n这位作者的做法就是分两步\n第一步, 修改theme\n第二步, Google Material把BottomSheet的多个View都设置成了 fitsSystemWindows = true\n了, 我们要设置为false (And 14-就是false), 并做一定修改:\n我试了下这些做法, 可以说, 效果有, 但并不完美, 我们app的页面看起来和And14-的效果不一样. 所以我最终没有采用方法.\n(不过我仍然列出这篇文章在这里, 说不定其它同学会觉得它正好适合于你们app)\n4.4.2 自己加paddingBottom\n好在我们App中的BottomSheet并不多, 只有3个. 所以我的做法就是像给topBar加一个View做为paddingBottom. 这样反而效果和我们预期的一样.\n不过仍是有坑, 那就是我得出来的systemBars.bottom\n约为46dp, 于是我给BottomSheet加了一个高度为46dp的空view\n// sheet_carousel_info.xml\n这个bottom_placeholder_height\n在values-v35\n里设置为46dp, 却仍是让button给显示不出来.\n我最终设置成110dp, button才成功显示出来, 我也是晕了.\n4.5 ConstraintLayout的坑\n上面讲了, 在处理top, 以及BottomSheet时, 我们都采用了不同OS上有不同dimen的做法, 如:\nvalues/dimens.xml\n: 0dpvalues-v35/dimens.xml\n: 34dp\n但这个做法在碰到ConstraintLayout时就出问题了. 以top为例哦, 这样的设置后, 来看下效果:\n即在And 15+上正常, 在And14-上却是top上的palceHolderView占据了整个屏幕.\n原因就是在ConstraintLayout中, 0dp不再代表0高度, 而是代表根据约束来. 所以这就可能导致上面点满全屏的情况.\n(再骂一句Google, 0dp就应该只有一种意义, 表示0高度; 而不是有2种意思, 导致了现在的问题)\n解决办法其实也简单, 不过是我老婆想到的. 她说既然0dp不行, 那我设置为0.01dp总可以吧. 果然, 试了下, 真的行!\n所以为了兼容ConstraintLayout, 当使用dimen方案时, 请这样设置:\nvalues/dimens.xml\n: 0.01dpvalues-v35/dimens.xml\n: 34dp\n这样就基本Okay了.\n4.6 总结\n- 针对top方向, 只要处理非全屏页面, 所以我们给topBar加了一个高度可变的topPlaceHolderView\n- (全局地生效)\n- 针对bottom方向, 要用Google推荐的设置paddingBottom的方法,\n- (全局地生效)\n- 只不过要注意 bottomNavigationView, 以及OS navigation zone的颜色\n- 针对BottomSheet,\n- 要么用我推荐的文章 (全局地生效)\n- 要么用我的方法(手动地一个个地加bottomPlaceHolderView)\n五. 其它的可能有影响的点\n5.1 Material2的theme\n我没有碰到这种情况(因为我用的是material1的theme), 但老婆碰到了. 老婆说她们公司用的是Material2的theme, 这时要适配edgeToEdge, 就得升级到Material3的theme.\n但熟悉的朋友一定发现了, 改整个Application的theme是个非常危险的操作, 意味着可能每个页面都有所变化, 可能你要修改每个页面的UI了.\n具体方法可能只能升级到material3页面, 然后一个页面一个页面地修改material theme升级带来的影响了.\n5.2 Dark theme\n若你的app还支持dark theme, 那你会发现BottomSheet的方案有问题, 在Android 15设备上paddingBottom过大了:\n原因也是Google Material库的锅.\n- Android认为, 又是values-v35, 又是dark theme的情况下, 那dimen的值就去\nvalues-v35\n中取, 自然paddingBottom这时就是100dp - 但是, Google Material库认为, 一个dark theme的BottomSheet, style应该走dark, 所以它的各个子view又不用得像是Android 14一样(即\nfitsSystemWindows = false\n)\n这二者一结合就冲突了. 但明显是Android的处理更正常.\n正确的解决办法, 新加一个res/values-night-v35\n目录:\n总结下来就是:\nvalues/dimens.xml\n:bottomSheet_paddingBottom\n= 0.001dp\nvalues-v35/dimens.xml\n:bottomSheet_paddingBottom\n= 110dp\nvalues-night-v34/dimens.xml\n:bottomSheet_paddingBottom\n= 0.001dp\n六. 结语\n其实Google早就有\"开发, 我是你爹\"的感觉了. 早在targetSDK升31时, 就已经有过类似事件了. 当时Google根本不管你app是否有splash, 它自己就是强行加一个splash. 结果你不适配就会变成有2个splash页. 这种一拍脑袋就要干, 完全不给开发自己选择是否跟进的选择很让人反感. 不过当时适配splash的工作量较小, 我也没有十分在意. 现在则不同了, edgeToEdge的改动太大了, 真的让人如鲠在喉了.\n从上面的篇幅, 可以看出我在这上面花费了多少时间. Google这种强制app更新UI的方式很恶心, 偏偏它的Material库又给我们增加了很多障碍. 好在现在大体完工了. 多谢你的阅读~\n参考资料\n1). developer.android.com/about/versi…\n2). developer.android.com/develop/ui/…\n4). 老婆的各种实践\n5). 我自己的各种实践",
        "summary": "Google要求所有应用在2024年8月底前将targetSDK升级至35，并强制实施EdgeToEdge全屏适配，引发开发者不满，认为此政策增加了开发难度且影响用户体验。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "四大产品升级，广汽昊铂HT/GT 2025款开启预售",
        "url": "https://www.ifanr.com/1622740",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746016797000,
        "desc": "2025年4月30日，2025款昊铂HT、昊铂GT正式预售，双车同步实现四大配置升级。此次推新，豪华再加码，为用户带来安全好开、舒适贴心的豪华出行体验。\n本次2025款车型均升级了HOD（Hand-Off Detection）电容感应方向盘，在使用智能驾驶辅助过程中，可实时监测驾驶员手部状态，及时进行提醒警示，增添了一道安全屏障；在设计上探索运动美学与驾控性能的有效融合，昊铂HT 2025款升级20英寸玄甲轮毂，新增扰流板，在丰富运动化设计元素的同时，进一步优化动力学性能，降低风阻和提升整车动态行驶稳定性；新升级的5G座舱能提升车机响应速度，让智联交互更灵敏，智能沟通无缝衔接。\n昊铂GT 2025款升级为19寸星动轮毂+标配碧青蓝性能卡钳，在强化颜值外观的同时运动性能张力十足，满足年轻用户对运动性能的审美追求；昊铂GT 2025款还针对710 Max版本车型升级VGR、FSD底盘智能技术，应对复杂道路场景优化车辆动态行驶灵活性，提升驾驭操控，让路途皆为坦途。\n广汽昊铂对于豪华品牌的高端化诠释，以「高价值」的技术加速产品推新，赋能豪华带来体验革新的同时，更以「高品价比」的产品策略让用户买得放心、坐得舒心、用得省心。广汽昊铂HT/GT 2024款同步推出限量一口价政策，昊铂HT 2024款限量置换一口价最低17.99万元起；昊铂GT 2024款限量置换一口价最低16.39万元起。\n广汽昊铂以一口价机制让用户感知到豪华消费的最高价值，更凭借着出众的产品水准，链接用户对于高端化产品的豪华价值认同。广汽昊铂HT/GT双车均斩获2025年第一季度中国汽车质量排行双榜，昊铂GT荣获中大型及大型纯电车型第一名，昊铂HT荣获中大型及大型纯电SUV第三名。",
        "content": "为您查询到 篇文章\n2025年4月30日，2025款昊铂HT、昊铂GT正式预售，双车同步实现四大配置升级。此次推新，豪华再加码，为用户带来安全好开、舒适贴心的豪华出行体验。\n本次2025款车型均升级了HOD（Hand-Off Detection）电容感应方向盘，在使用智能驾驶辅助过程中，可实时监测驾驶员手部状态，及时进行提醒警示，增添了一道安全屏障；在设计上探索运动美学与驾控性能的有效融合，昊铂HT 2025款升级20英寸玄甲轮毂，新增扰流板，在丰富运动化设计元素的同时，进一步优化动力学性能，降低风阻和提升整车动态行驶稳定性；新升级的5G座舱能提升车机响应速度，让智联交互更灵敏，智能沟通无缝衔接。\n昊铂GT 2025款升级为19寸星动轮毂+标配碧青蓝性能卡钳，在强化颜值外观的同时运动性能张力十足，满足年轻用户对运动性能的审美追求；昊铂GT 2025款还针对710 Max版本车型升级VGR、FSD底盘智能技术，应对复杂道路场景优化车辆动态行驶灵活性，提升驾驭操控，让路途皆为坦途。\n广汽昊铂对于豪华品牌的高端化诠释，以「高价值」的技术加速产品推新，赋能豪华带来体验革新的同时，更以「高品价比」的产品策略让用户买得放心、坐得舒心、用得省心。广汽昊铂HT/GT 2024款同步推出限量一口价政策，昊铂HT 2024款限量置换一口价最低17.99万元起；昊铂GT 2024款限量置换一口价最低16.39万元起。\n广汽昊铂以一口价机制让用户感知到豪华消费的最高价值，更凭借着出众的产品水准，链接用户对于高端化产品的豪华价值认同。广汽昊铂HT/GT双车均斩获2025年第一季度中国汽车质量排行双榜，昊铂GT荣获中大型及大型纯电车型第一名，昊铂HT荣获中大型及大型纯电SUV第三名。\n[展开]",
        "summary": "广汽昊铂HT/GT 2025款开启预售，实现四大配置升级，包括HOD电容感应方向盘、5G座舱、玄甲轮毂及VGR/FSD底盘技术等，提升安全、舒适与智能驾驶体验。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "快手成立可灵 AI 事业部",
        "url": "https://weibo.com/1642720480/5161195188784974",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746008515000,
        "desc": "快手成立可灵 AI 事业部，负责可灵、可图等系列大模型业务\n据晚点报道，快手在今日成立了可灵 AI 事业部。该事业部下设可灵 AI 产品部、运营部和技术部，负责可灵、可图等系列大模型业务，快手高级副总裁盖坤担任可灵 AI 事业部负责人，继续兼任社区科学线负责人。\n据悉，可灵与可图分别是快手自研的 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "微信支付在新加坡开启刷掌支付",
        "url": "https://weibo.com/1642720480/5161191414176533",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746007911000,
        "desc": "微信支付今天官宣，微信刷掌开启首个海外点位 —— 新加坡。\n5 月 1 日起，到新加坡圣淘沙名胜世界就能刷掌支付，包含水上探险乐园及八大消费点位。而且用户在境外（非中国大陆地区）还能用小程序「PalmDa」管理刷掌权限。\n早于去年 12 月，在新加坡金融科技节上腾讯刷掌与 Visa 合作官宣出海，海外 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "DeepSeek 发布新模型 DeepSeek-Prover-V2-671B",
        "url": "https://weibo.com/1642720480/5161186569487727",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746006703000,
        "desc": "刚刚，DeepSeek 在全球最大 AI 开源社区 Hugging Face 发布了一个名为 DeepSeek-Prover-V2-671B 的新模型。@APPSO\n根据目前公布的信息，DeepSeek-Prover-V2-671B 使用了更高效的 safetensors 文件格式，并支持多种计算精度（BF16、FP8、F32 等），方便模型更快、更省资源地训练和部署。\n从命名上看 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "路虎揽胜 EV 完成冬季测试",
        "url": "https://weibo.com/1642720480/5161175752114656",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746003685000,
        "desc": "最近，路虎官方宣布了旗下新款的路虎揽胜 EV（ Range Rover E）即揽胜纯电版车型已经完成了发布前的第二轮冬季测试。这次冬季测试主要是为了验证新车的热管理系统，确保它在零度以下的极端温度中能够加热机舱并保持快速充电。\n在去年夏天，也曾经有外媒报道过，新的路虎纯电车型曾经在阿联酋的沙漠中 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "苹果发布两条 Apple Watch 健康功能视频",
        "url": "https://weibo.com/1642720480/5161164900404084",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746001874000,
        "desc": "苹果最近发布了两条关于 Apple Watch 健康功能的 30 秒 TVC 视频，均是根据真实的中国 Apple Watch 用户的故事来进行拍摄。\n这两条 30 秒的 TVC 视频，分别聚焦于两位 Apple Watch 用户：刚刚退休的白红、即将上大学的李浩铭。\n年龄和背景都截然不同的他们，却有着一个共同点：都曾被 Apple Watch 在 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "联想百应智能体接入千问 3 全面升级，重塑 IT 运维与AI办公体验",
        "url": "https://www.ifanr.com/1622659",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1746000096000,
        "desc": "在企业智能化转型加速的当下，联想凭借强大的技术整合能力，携手通义千问模型 Qwen3（简称千问 3），深度升级百应智能体，在 IT 运维和 AI 办公领域实现重大突破，再次展现其在企业智能化服务领域的卓越实力。\n千问 3 作为国内首款混合推理模型，具备混合推理模式、支持 MCP、多语言等先进能力，这为联想百应智能体带来质的飞跃。\n在 IT 运维场景，千问 3 的强大推理与知识泛化能力，助力百应智能体本地推理模型升级。如今，百应智能体能够更精准地诊断问题、更智能地处理故障。值得一提的是，近期百应智能体还将推出离线智能桌面运维功能，即便处于复杂网络或离线环境，也能迅速定位异常并自动修复，全方位保障企业 IT 系统 7×24 小时稳定运行。此外，联想百应智能体 PC 端即将上线千问 3 本地模型一键部署功能，企业无需依赖外部网络，就能调用本地大模型，核心数据全程锁定在本地设备，从根本上确保数据安全，极大提升办公与运维的智能化水平。\n在 AI 办公场景，联想百应 Copilot 办公超级智能体与千问 3 深度融合，成效显著。通过重构 Word 长文档分析、多语言协作等核心能力，办公效率实现跨越式提升。千问 3 支持 119 种语言及方言的实时翻译，让百应 Copilot 在企业海外业务拓展、跨文化团队沟通、跨国会议语音转写与决议提炼等方面发挥关键作用。同时，创新引入的 “深度思考开关”，使用户可在轻量级快速交互与深度推理模式间自由切换，无论是简单的文本润色，还是深度的结构化报告生成，百应 Copilot 都能出色完成，结合企业知识库与检索增强生成（RAG）技术，实现精准问答与智慧决策，引领企业智能办公进入新时代。此次联想百应智能体与千问 3 的深度融合，为企业提供了高效、安全的智能化服务，有力推动企业在数字化浪潮中快速发展。",
        "content": "为您查询到 篇文章\n在企业智能化转型加速的当下，联想凭借强大的技术整合能力，携手通义千问模型 Qwen3（简称千问 3），深度升级百应智能体，在 IT 运维和 AI 办公领域实现重大突破，再次展现其在企业智能化服务领域的卓越实力。\n千问 3 作为国内首款混合推理模型，具备混合推理模式、支持 MCP、多语言等先进能力，这为联想百应智能体带来质的飞跃。\n在 IT 运维场景，千问 3 的强大推理与知识泛化能力，助力百应智能体本地推理模型升级。如今，百应智能体能够更精准地诊断问题、更智能地处理故障。值得一提的是，近期百应智能体还将推出离线智能桌面运维功能，即便处于复杂网络或离线环境，也能迅速定位异常并自动修复，全方位保障企业 IT 系统 7×24 小时稳定运行。此外，联想百应智能体 PC 端即将上线千问 3 本地模型一键部署功能，企业无需依赖外部网络，就能调用本地大模型，核心数据全程锁定在本地设备，从根本上确保数据安全，极大提升办公与运维的智能化水平。\n在 AI 办公场景，联想百应 Copilot 办公超级智能体与千问 3 深度融合，成效显著。通过重构 Word 长文档分析、多语言协作等核心能力，办公效率实现跨越式提升。千问 3 支持 119 种语言及方言的实时翻译，让百应 Copilot 在企业海外业务拓展、跨文化团队沟通、跨国会议语音转写与决议提炼等方面发挥关键作用。同时，创新引入的 “深度思考开关”，使用户可在轻量级快速交互与深度推理模式间自由切换，无论是简单的文本润色，还是深度的结构化报告生成，百应 Copilot 都能出色完成，结合企业知识库与检索增强生成（RAG）技术，实现精准问答与智慧决策，引领企业智能办公进入新时代。此次联想百应智能体与千问 3 的深度融合，为企业提供了高效、安全的智能化服务，有力推动企业在数字化浪潮中快速发展。\n[展开]",
        "summary": "联想百应智能体接入通义千问3模型，升级IT运维与AI办公体验，提升故障处理、数据安全及多语言协作能力，推动企业智能化转型。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "索尼 XPERIA 1 VII 预计5月发布",
        "url": "https://weibo.com/1642720480/5161141558842414",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1745995839000,
        "desc": "索尼 XPERIA 1 VII 或将 5 月发布\n近期，媒体 sumahodigest 爆料了大量索尼 Xperia 1 VII 新机的外观信息，具体来看：\n新机将提供墨绿色和许久未见的紫色，后盖表面均采用磨砂处理；机身中框依然为直边设计，拥有前后切角处理；\n从公布的图片来看，新机依然拥有「徒手」拆卸的 SIM 卡槽与 3.5mm 耳 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "魅族 Note 16 系列外观公布",
        "url": "https://weibo.com/1642720480/5161139046973633",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1745995233000,
        "desc": "魅族 Note 16 系列外观公布，高管回应争议\n日前，星纪魅族正式公布了旗下 Note16 系列机型的外观信息。\n新机采用多边形切角环形相机模组，其中四个开孔位置对称排布；配色方面提供金红撞色和纯白两款配色。但在此消息公布后，不少网友纷纷表示魅族 Note16 系列「撞脸」华为 Mate XT 三折叠机型。\n随 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "iPhone 17 部分机型完成测试",
        "url": "https://weibo.com/1642720480/5161133002458230",
        "source": "ifanr",
        "hot": 0,
        "time": "",
        "timestamp": 1745994025000,
        "desc": "消息称 iPhone 17 部分机型完成工程测试\n据 Digitimes 援引苹果供应链人士消息，苹果近期完成了 iPhone17 系列部分机型的工程验证测试（EVT）第一阶段，新机距离量产又更近了一步。\n据悉，工程验证测试是苹果产品测试中的一个重要阶段，后续还有设计验证测试（DVT）、生产验证测试（PVT），具体来看 ​……",
        "content": "Sina Visitor System",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "劳动节为什么不翻译为劳工节或者工人节",
        "url": "https://www.v2ex.com/t/1129260",
        "source": "v2ex",
        "hot": 51,
        "time": "",
        "timestamp": "",
        "desc": "说劳动节，好像这个节是为了劳动，或者为了歌颂劳动似的，“劳动最光荣”\n其实英文是 International Workers' Day, 或者 Labour Day ，意思是工人、劳工的节日，是为了**保障劳动者（工人）权益**的节日\n这个节日的起源，是当时的工人为了争取 8 小时工作制而进行罢工，可见**是为了减少劳动，而非歌颂劳动，并非“劳动最光荣”**\n总结如下：\nLabour Day 的起源可以总结如下：\n- **起源背景**\n19 世纪中后期，随着资本主义的发展，工人阶级普遍遭受超长工时和恶劣劳动条件的剥削。工人们为争取八小时工作制和改善生活条件，陆续发起罢工和抗议[3][4]。\n- **澳大利亚的首次行动**\n1856 年 4 月 21 日，澳大利亚墨尔本的石匠和建筑工人举行大规模停工，要求实施八小时工作制，这一行动成为后续国际工人运动的先声[1][5][7]。\n- **美国芝加哥大罢工**\n1886 年 5 月 1 日，美国芝加哥等城市约 35 万工人举行大罢工，要求八小时工作制。期间发生了著名的“干草市场事件”（ Haymarket Affair ），工人与警方冲突，造成多人伤亡。这次运动虽然遭到镇压，但极大地推动了全球工人运动的发展[1][2][3][4][5][9]。\n- **国际劳动节的确立**\n为纪念美国工人的斗争，1889 年 7 月，恩格斯领导下的第二国际在巴黎召开代表大会，决定将每年的 5 月 1 日定为国际劳动节（ May Day ），号召全球工人为争取合法权益和八小时工作制而团结斗争[1][3][4][5]。\n- **节日影响与传播**\n1890 年 5 月 1 日，欧美多国工人首次集体庆祝这一节日。此后，五一劳动节逐渐成为全球 80 多个国家法定的节日，象征工人阶级团结、争取权益和社会进步[3][4]。\n简要总结：\nLabour Day 起源于 19 世纪工人为争取八小时工作制而发起的罢工运动，尤其是 1886 年美国芝加哥的大罢工。1889 年，第二国际将 5 月 1 日定为国际劳动节，以纪念工人运动和争取权益的斗争精神。此节日如今已成为全球劳动者的共同节日[1][3][4][5]。\n来源\n[1] 国际劳动节- 维基百科，自由的百科全书 https://zh.wikipedia.org/zh-hans/%E5%9B%BD%E9%99%85%E5%8A%B3%E5%8A%A8%E8%8A%82\n[2] 五一国际劳动节起源 - 项城市人民政府 https://xiangcheng.gov.cn/sitesources/xcs/page_pc/xwdt/ssxw/articleA1FAF1E27CF14A9EA301668D58F39535.html\n[3] 五一国际劳动节_百度百科 https://baike.baidu.com/item/%E4%BA%94%E4%B8%80%E5%9B%BD%E9%99%85%E5%8A%B3%E5%8A%A8%E8%8A%82/810559\n[4] 国际劳动节由来 http://paper.ce.cn/pad/content/202404/28/content_293674.html\n[5] 五一国际劳动节的起源是什么？（罗莎·卢森堡，1894 ） https://www.marxists.org/chinese/rosa-luxemburg/mia-chinese-rosa-1894.htm\n[6] 党史故事|五一国际劳动节是怎样被引入到中国的？ - 共产党员网 https://www.12371.cn/2021/04/16/VIDE1618554904389481.shtml\n[7] 劳动节- 维基百科，自由的百科全书 https://zh.wikipedia.org/zh-hans/%E5%8A%B3%E5%8A%A8%E8%8A%82\n[8] 新中国的第一个“五一”国际劳动节 http://cpc.people.com.cn/n1/2024/0425/c443712-40223444.html\n[9] [PDF] 國際勞動節由來及意義 https://www.mol.gov.tw/media/tkrfbokv/%E6%B4%BB%E5%8B%95%E8%A8%8A%E6%81%AF.pdf?mediaDL=true",
        "content": "| 注册会员 | 746,513 |\n| 主题 | 1,129,312 |\n| 回复 | 16,207,327 |\n| 朋友买卢浮宫门票被钓鱼网站骗 信息安全 • zerozz • 2 分钟前 • 最后回复来自 chesha1 | 86 |\n| 最近自建一个 nas 装了飞牛，使用域名解析 ipv6， 只能局域可以访问， 外网访问不了，怎么回事，折腾半天不行，求教。 NAS • pey69 • 17 分钟前 • 最后回复来自 pey69 | 7 |\n| 求问 2025 年技术栈选择， RN 还是 flutter\n1 程序员 • Asuler • 29 分钟前 • 最后回复来自 MRlaopeng\n|\n33 |\n| 求教：使用 iSCSI 共享能否解决 SMB/NFS 的权限冲突问题 NAS • Ploter • 55 分钟前 • 最后回复来自 scegg | 13 |\n| 分享 Golang 视频： Golang 快速实现 CRUD API - 基于开源框架 Airway Go 编程语言 • ospulse • 1 小时 45 分钟前 |\n| Win10, 手贱把 NTUSER.DAT 以及相关的几个文件删除了，现在无法用原来的本地账户登录 windows, 每次登录都会自动创建临时的用户目录, 开始菜单无法打开 Windows • kelvinaltajiin • 52 分钟前 • 最后回复来自 kelvinaltajiin | 4 |\n| emby 怎么鼠标悬停在影片上自动播放预览，类似 p 站那样 NAS • wty95 • 40 分钟前 |\n| perplexity 的 deep research 模式的 AI 幻觉（hallucination）很严重，动不动就伪造古文，自编数据更是司空见惯，各位有没有同价位的幻觉率少点的 Deep Research 推荐？ 程序员 • qqqfreeboycn • 2 小时 6 分钟前 • 最后回复来自 neteroster | 1 |\n| 每天解锁 Jemini ai 的一种玩法 5/1：素描转实体图 程序员 • antaeus • 7 小时 23 分钟前 |\n| 腾讯云欠费 2 元删数据没有讨论的吗 云计算 • lichdkimba • 13 分钟前 • 最后回复来自 spiritV | 175 |\n| 多进制数的乘法时间复杂度 O(n)? 程序员 • qwertyegg • 5 小时 24 分钟前 • 最后回复来自 KeShih | 2 |\n| 有没有研究图形化 AI 模型的大牛。预测轮盘落点。我有海量数据 程序员 • ydt0728 • 3 小时 19 分钟前 • 最后回复来自 EchoWhale | 24 |\n| 月兔编程语言支持国产芯片开发，对标 C？ 程序员 • Hooooooey • 3 小时 23 分钟前 • 最后回复来自 mayli | 8 |\n| 直接用 v0.dev 写的界面与真实的后端接口通讯可以吗? 程序员 • jiaoguan1688 • 4 小时 35 分钟前 • 最后回复来自 kneo | 4 |\n| 高频金融系统如何防止突然断电导致的数据丢失？ 程序员 • latifrons • 6 小时 31 分钟前 • 最后回复来自 PhpBB | 95 |\n| 接了一个小程序的单子，客户很多图片怎么放比较好呢？\n1 程序员 • ccctttwww • 8 分钟前 • 最后回复来自 realpg\n|\n31 |\n| 大厂的同事们，你们是怎么定位线上故障的？\n1 程序员 • 5261 • 2 小时 13 分钟前 • 最后回复来自 mbeoliero123\n|\n101 |\n| 字节的 AI 智能体 Trae 用起来怎么样 程序员 • kellysally • 3 小时 22 分钟前 • 最后回复来自 mayli | 15 |\n| Hacker News 中文 RSS 订阅 RSS • s4fea0a8321 • 3 小时 24 分钟前 • 最后回复来自 s4fea0a8321 | 4 |\n| tg 上运维/sre/devops 相关的交流群 DevOps • hellolinuxer • 13 小时 49 分钟前 • 最后回复来自 lizzzy | 1 |\n| [Golang/k8s] 内存分析中 pprof 与 runtime 包的 HeapInuse 的 GAP 在哪里呢？ Go 编程语言 • Charlie17Li • 19 小时 45 分钟前 • 最后回复来自 feedcode | 1 |\n| 浅浅体验了一下 vivo x200 ultra，不太满意 Android • Awes0me • 9 小时 21 分钟前 • 最后回复来自 southwolf | 20 |\n| 那个大模型编码能力最好？\n1 程序员 • silenceboychen • 20 小时 31 分钟前 • 最后回复来自 sickoo\n|\n99 |\n| nodejs 后端，怎么比较好的生成接口文档？(排除 nest.js) Node.js • wuxilaoshiren • 1 小时 54 分钟前 • 最后回复来自 llej | 27 |\n| Cursor 帮我写了个 pdf 编辑器 程序员 • daBig • 6 小时 51 分钟前 • 最后回复来自 Syiize | 3 |\n| 微信公众号新消息立刻转发到群里如何实现，有人有点子或者软件吗？ 程序员 • john2023 • 6 小时 53 分钟前 • 最后回复来自 mybro | 26 |\n| 哪一家 AI 对会话隐私保护的最好？ 程序员 • haolitcs • 6 小时 6 分钟前 • 最后回复来自 flyqie | 2 |\n| Python 项目代码升级咋搞？ Python • jackOff • 21 小时 23 分钟前 • 最后回复来自 bingfengfeifei | 7 |\n| 中国建设银行顺利无损收取谷歌广告联盟 Google Adsense 电汇 程序员 • handsometong • 1 小时 41 分钟前 • 最后回复来自 ch3nbo | 5 |\n| 你们的 cursor 界面卡吗?win 版本的 程序员 • jiaoguan1688 • 3 小时 40 分钟前 • 最后回复来自 love2328 | 3 |\n| 在线之家 在公司就可以访问 家里的网就访问不了，请问是什么原因呢？ 程序员 • doujiao • 6 小时 48 分钟前 • 最后回复来自 keshi | 1 |\n| emby 服务远程访问的问题 NAS • guoguobaba • 17 小时 14 分钟前 • 最后回复来自 kid1412621 | 27 |\n| 这几天折腾 PVE AIO 有点上头了 NAS • 0x663 • 4 小时 19 分钟前 • 最后回复来自 anonymity | 48 |\n| 打包 mac 应用进行分发一定需要进行苹果开发者认证并付费吗？ iDev • silenceboychen • 1 天前 • 最后回复来自 hwdq0012 | 17 |\n| 请教下，有没有实现基于笔记本的 win11 系统自动完成不同的 PM 操作 Windows • tyy123 • 1 天前 • 最后回复来自 ntedshen | 6 |\n| 腾讯新开源的 Kuikly，但是我不太敢用，害怕又是一个 kpi 产物 程序员 • hhhhohhhh • 9 小时 41 分钟前 • 最后回复来自 bunnyblueair | 36 |\n| 两个人的数据开发团队,被要求从零开始治理企业数据 MySQL • IIIIZAYOI • 7 小时 8 分钟前 • 最后回复来自 iv8d | 20 |\n| 谁有开源的 react antd 5 的表单设计器求分享 程序员 • zsvc • 1 天前 |\n| 再也不用记 k8s 的命令了 Kubernetes • justyy • 2 小时 55 分钟前 • 最后回复来自 mikaelson | 1 |\n| NAS 硬盘选多大的？有没有可能混用希捷西数？ NAS • dcsuibian • 6 小时 23 分钟前 • 最后回复来自 Autonomous | 36 |\n| 有做过基于 webrtc 技术的多人视频会议系统的吗 PHP • tangknox1 • 18 小时 50 分钟前 • 最后回复来自 tangknox1 | 16 |\n| 救救我~~， k8s 的 containerd 的镜像加速还有那些办法可以用呀 Kubernetes • 052678 • 22 小时 19 分钟前 • 最后回复来自 mengyx | 21 |\n| jdk 发行版大家生产环境和开发环境都用的是哪一家呢？\n1 Java • zx9481 • 1 天前 • 最后回复来自 guanyujia5444\n|\n54 |\n| GitHub 开源项目提 PR，求推荐！ 程序员 • gulao • 1 天前 • 最后回复来自 guanzhangzhang | 16 |\n| WEB 版本的操作系统好用么？ 程序员 • zsvc • 1 天前 • 最后回复来自 qinqiuxu | 19 |\n| 安卓有类似熊猫吃短信的短信拦截工具吗 Android • balddonkey1 • 17 小时 28 分钟前 • 最后回复来自 flynaj | 21 |\n| 有没有学习 opencl 和 cuda 编程的教程和学习的地方啊#web3#区块链 程序员 • akadanjuan101 • 1 天前 • 最后回复来自 bytecc | 5 |\n| 如何记住 debug 的快捷键 程序员 • movq • 1 天前 • 最后回复来自 newaccount | 21 |\n| Deepseek 发布新模型 程序员 • johnsmith2077 • 22 小时 30 分钟前 • 最后回复来自 coolfan | 1 |\n| 前端开发 | 微信 前端开发 Chrome Vue.js 浏览器 React CSS Firefox Flutter Edge Angular Electron Web Dev Next.js Vite Nuxt.js Ionic |\n| 编程语言 | Python Java PHP Go 编程语言 JavaScript Node.js C++ Rust Swift HTML .NET C# Ruby on Rails TypeScript Ruby Kotlin Lua |\n| 后端架构 | 云计算 服务器 DNS MySQL NGINX Docker 数据库 Kubernetes Ubuntu Amazon Web Services Django Redis MongoDB DevOps Cloudflare Elasticsearch Flask Tornado API Timescale |\n| iOS | iDev iCode iMarketing iAd |",
        "summary": "新闻标题讨论了劳动节不翻译为劳工节或工人节的原因，新闻内容主要为技术论坛中的各类问题和讨论，涉及编程、AI、NAS、云计算、操作系统等技术话题。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "我靠，今天被喷出翔了",
        "url": "https://www.v2ex.com/t/1129226",
        "source": "v2ex",
        "hot": 47,
        "time": "",
        "timestamp": 1746020644000,
        "desc": "起因是在一篇笔记中，被用户吐槽 UI 非常难看。然后发了个帖子，询问是否真的难看，结果一堆人喷的，哈哈哈哈\n![]( https://pic1.imgdb.cn/item/681228b458cb8da5c8d56fc5.png)\nhttps://www.xiaohongshu.com/explore/6811e2ac000000002001c306?app_platform=ios&app_version=8.81.2&share_from_user_hidden=true&xsec_source=app_share&type=normal&xsec_token=CBiUzkG028lq8hU6I9jsmb6GWzcEYg4UVLK4D4IQhn5tc=&author_share=1&xhsshare=WeixinSession&shareRedId=ODg4OEg3ODo2NzUyOTgwNjczOTdIPEg9&apptime=1746020248&share_id=49fa61985bc3417da1459b3442151b64&wechatWid=97b9a307154af3ac968d6f0f759920ce&wechatOrigin=menu",
        "extracted_time": "2025-04-30T13:44:04+00:00",
        "content": "起因是在一篇笔记中，被用户吐槽 UI 非常难看。然后发了个帖子，询问是否真的难看，结果一堆人喷的，哈哈哈哈\n1\nmurmur 19 小时 54 分钟前\n比起 UI ，我更关心你这产品干啥用的，用 AI 生成有用没用的东西然后往一堆平台发布？\n|\n3\nCNN 19 小时 43 分钟前 1\n|\n4\nkatwalk 19 小时 27 分钟前\n从 UI 设计透露出的品质感，其实很大程度上反映了背后团队的实力。如果 UI 没有品质感，用户的感觉是这背后的团队不太行，没啥实力。\n至于美观上让人不舒服，是其次的事情了。 这么多人吐槽你的网站不好看，你说人家不是你的目标用户。你这么想无非就是找借口，你这种理解方式就决定了你的业务的上限不会很高。 现实是，想把业务坐上去，UI 这个短板就得补上。至于什么’工具产品主要要看功能‘’他们不懂‘’不是目标客户‘，就是骗骗自己，给自己加没有设计能力和负担不起设计及其增加的研发工作量，找点借口罢了。 承认自己没有那个能力，或者不愿意付出代价，即可。 |\n5\nrenmu 19 小时 21 分钟前 via Android\n丑得不行。。\n不同业务对 ui 的要求是不同的 工具类对 ui 要求较低，用户只要能用，复杂的工具类也很难做出好的 ui 你这种偏向营销的用户第一眼很重要 |\n6\nchiaf 18 小时 30 分钟前\n我的独立开发之路目前被 UI 设计绊住了，代码什么的都好说，但是一到实际设计，愁😮💨\n|\n7\nMajestySolor 18 小时 3 分钟前\n功能大差不差的情况下，我永远会选界面好看的产品🤣\n界面丑的产品除非有什么独一无二的牛比功能，否则绝对不碰🤣 |\n8\ndongcxcx 17 小时 54 分钟前\n你的页面。 都有现成的模板。 为什么不买个直接用。 省事\n|\n9\nLiuJiang OP @CNN\n@katwalk @renmu @dongcxcx 问题来了，你觉得这些好看吗 https://medio.cool/ https://snapany.com/zh https://bibigpt.co/landing/v1 https://www.qingdou.vip/pctool/work-benches https://www.subeasy.ai/zh-CN |\n10\nSuperDaniel313 17 小时 31 分钟前 1\n|\n11\nLiuJiang OP @SuperDaniel313 不拉，因为产品研发才 5%的进度，拉 UI 没有意义。并不能带来用户增长或盈利。就这个帖子发出去之后，你知道新增了几个注册用户？ 6 个，也就是说这篇帖子下，没有一个是目标用户\n|\n12\nSuperDaniel313 17 小时 12 分钟前\n@LiuJiang #11 如果你是想通过这种方式加曝光，引流量的话，你需要先把你的其他短板拉起来。比如你强调的功能和价值，然后制造话题和争端，让人来体验。\n类似小红书的所谓听劝改造套路。本来底子好，故意扮丑来造反差，这样加量快。 你现在完成度才 5%（流程跑通了吗？），你引流也是毒瘤（毒流），人家只会到处去说你这产品果然如同 UI 一样，表里如一。 |\n13\nzhanying 17 小时 2 分钟前\n确实不太好看。。。\n|\n14\nyinanc 16 小时 41 分钟前\n一眼就绷不住这个配色。。做产品起码要有点设计的 sense 吧\n|\n15\nkdwnil 16 小时 32 分钟前 via Android\n不至于很丑，但不好看。设计不出好看的，抄一份好看的作业总会吧？\n|\n16\nJoeDH 16 小时 3 分钟前\n确实不好看\n|\n17\nlaikick 15 小时 46 分钟前\n真的很难看 文字堆积在一起太难看了.\n|\n18\nyunye 15 小时 43 分钟前\n5%进度也学人家引流，自己找不痛快\n|\n19\nTrim21 15 小时 29 分钟前\n无论好看与否都不该跟用户对线（\n|\n20\ntedaz 14 小时 33 分钟前 via Android\n配色拉了\n|\n21\nLiuJiang OP @SuperDaniel313 已经引流成功，做独立开发者，优先做产品运营，吸收有合理性建议。那些吐槽 UI ，有几个用的，何况我们产品还有使用门槛。UI 和功能随时改，到时候，用户又是另外一番评价，信不信。\n|\n22\nwasaibi12345 7 小时 24 分钟前 1\n这个链接太丑了，就不能把 Tracker 删一下吗 ...\n|\n23\nPhpBB 6 小时 36 分钟前\n当前笔记暂时无法浏览\n请打开小红书 App 扫码查看 |\n24\nSuperDaniel313 5 小时 54 分钟前 1\n@LiuJiang #21 你要不学学 Follow 吧，非常成功的产品运营，现在改名叫 Folo 了。\n任何产品引流的前提都是要有个基础体验版本用来承接流量，光打广告不提供买卖窗口，那打广告的精力不如拿来打磨产品。用户的时间和精力花在了产品身上，也是交易的一种。交易环节只做了引流，但不做转化可以视为投流失败。 最好的引流方式莫过于拿出贴合市场、满足用户的产品让人体验（比如 Folo ），邀请码裂变只是加速传播，并不会让 Folo 从烂产品变成好产品，如果本来就是烂产品的话，邀请机制更像个笑话。 用户可以赞美功能简陋但质量过硬的产品，但绝不会接受质量不堪但功能高级的半成品。 |\n25\nLiuJiang OP @SuperDaniel313 Follow 啥团队？啥配置？啥资源？能告诉我吗\n|\n26\nkatwalk 5 小时 4 分钟前\n|\n27\nxxx027 4 小时 51 分钟前\n@SuperDaniel313 我觉得你有点小看 Follow 了，DIYgod 拥有的资源没那么容易学\n|\n28\nLiuJiang OP @katwalk 是的，我们的产品，目标用户是付费用户跟日活用户，你要么看下，上下文的对话，不只是单独挑字眼 \"产品研发 5%\"，我发上来，感叹下用户差异化很大，我想表达的是创业者，在产品最早期的形态上，不要过度关注无关紧要的小事，起码 UI 改动，对我们来说，就是一件小事，没有意义，这里的意义是指，对我们带来价值上的附赠，比如用户会因为改了 UI 而付费吗？用户会觉得 UI 好看，而深入使用吗？我们的数据日活数据体现了，并不会。你要么看下，我发的小红书全文内容\n|\n29\nalading11 4 小时 35 分钟前 3\n@LiuJiang #25 别的我不知道，但是有朋友在下面给你正经地提意见，你的反应不是“感谢建议。但是我们当前的情况和 Follow 差距在哪里哪里，成本怎样怎样，人员咋样咋样”，而是用反问来回复别人，有点意思，可以看一下后面是否还有人来给你提意见和建议。\n|\n30\nLiuJiang OP @alading11 ok ，我可以感谢他的建议，没问题。你觉得让学习 Follow ，正经吗？团队、资源、配置，都不一样，我更好奇，他为啥会提出学习 Follow ？每个产品要走的路线，都不一样。因背后的团队，资源，配置。都有自己的打法。找到适合自己的路线\n|\n31\nmx1700 4 小时 32 分钟前 via Android\n看评论我以为丑的天怒人怨了，其实也没有，只是不好看而已，我觉得现阶段优先功能没问题，不过建议宣传首页优化一下，第一眼的眼缘很重要\n|\n32\nirainsoft 4 小时 29 分钟前\n小红书海外经典 429 打不开，但看你发的图右下角评论的那一点，确实不好看...\n蓝字和黑字，加上蓝白渐变，字还多，真的很不好看。找个美工朋友咨询点建议吧，能提升的空间非常大... 而且做产品不谦逊，明明自己的贴子里问是否 UI 难看，别人评价后又说“好看并不能带来盈利”，给路人一种尝试通过丑 UI 来达到“黑红也是红”的目的。 |\n35\nkatwalk 4 小时 19 分钟前\n@LiuJiang #28\n小红书原文没有提你这个产品处于进度 5% 的「早期」。你在说出「我比较诧异的是，居然有人觉得好看是第一要事」的时候并没有定语。 你在小红书的末尾还问「我们的 UI 难看吗」，表明你并不认可自己的 UI 难看，至少是怀疑态度，但是小红书下面的评论让你失望了。 你觉得是小红书的人群问题，然后来 V2EX 发帖。但是没想到 V2EX 的评价也不好。这时候你才掏出「我们产品研发 5%」。 「在产品早期形态上」这个定语是在 V2EX 评论区加上去的。 |\n36\nSuperDaniel313 3 小时 38 分钟前 1\n@xxx027 #27 学不是抄，学是把人家成功的、人家失败的、自己能用上的、开拓自己认知的东西拿过来用，学以致用才是关键。\n我从 Follow 上看到了邀请裂变的功效和限制。Follow 能像当初 Arc 一样快速裂变，总结他们的成功营销之路来看，都是要有一个好产品打底，KOL 吹一波之后提高准入门槛，利用猎奇心打破大众认知，在成熟领域也能靠产品差异化杀出一条路来。 因为有了好产品，带来好体验，才能在流量来了之后能接得住，配合成熟的裂变机制将转化出来的流量进行二次裂变，正循环之后口碑完全就起来了。 以上并不需要等同资源才能学，只要有项目，有产品，有心思，有毅力就能学。 |\n37\nlvlongxiang199 3 小时 7 分钟前\n调成白底黑字都比现在的好看\n|\n38\nSuperDaniel313 2 小时 57 分钟前\n@alading11 #29 人嘛，总是需要一些外在因素来平衡自己的内心。\n“我要是有阿里的资源我也能干支付宝，比马云当初干得还要好” |\n39\nk9982874 2 小时 45 分钟前 via Android\n我只问一个问题，这个产品现在赚钱吗？\n如果赚钱就别听前面那些“专家建议”虾鸡脖乱改 |\n40\nxueyuehua 1 小时 53 分钟前\n首先你的产品要一进去我就知道是做什么的，而且功能简单好用，没有广告没有一上来就注册啥的，那我可能不会关心你的 ui 。但又是你功能和市面同类产品大差不差，上来就要我信息，那我第一眼就是看 ui ，ui 好点起码是用心的，那我可能捏着鼻子尝试下，不然我就直接卸载了，还得骂一句浪费我流量\n|\n41\nKevinChan 1 小时 15 分钟前\n楼主好傲慢啊\n|\n42\nhullopanda 1 小时 9 分钟前\n得看产品的目标用户，如果是数据展示量大的，甚至需要 UI 负优化。\n|\n44\nbnrwnjyw 56 分钟前 3\n就冲这帖子里 op 的态度我都不屑打开你链接看一眼\n|\n46\nlizhenda 43 分钟前\n移动到推广节点更合适。\n|\n47\naLazarus 15 分钟前\n很多独立开发者共性问题就是不看重 ui ，我觉得这是很致命的一个问题。\n在功能上你打不过别人，那么你在 ux 、ui 上也打不过人家，那你觉得谁还会用呢？ 我现在创业的支出之一就是 ui+产品原型，如果这两个都不做，那么我建议是找个班去上 |",
        "summary": "一篇关于产品UI设计引发的讨论，用户对UI的外观提出批评，部分用户提到AI生成内容和产品功能的重要性，但整体讨论主要围绕UI设计和用户体验。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "求问 2025 年技术栈选择， RN 还是 flutter",
        "url": "https://www.v2ex.com/t/1129229",
        "source": "v2ex",
        "hot": 33,
        "time": "",
        "timestamp": 1746021897000,
        "desc": "我是一个 6 年前端开发，熟悉 react 相关技术栈，也会 nodejs 这一块\n现在想要学习 app 开发，我的想法如下\n1. 我是出于个人兴趣爱好而学，想要做个自己的 app ，打算花个一年左右用空闲时间慢慢做\n2. 我认为应该学习 flutter ，这样 ios 和安卓 UI 层是不是能统一不用额外处理？ 但是现在国内公司好像都是以 RN 为主？\n3. 如果我学习 RN 的话，我得处理一堆及其恶心的兼容问题吧，但是不选 RN 的话会少了很多工作机会？现在的前端市场行情好像很差，要求也越来越高\n4. 目前两个对比下来，性能问题应该都不用担心了。我主要不想处理兼容问题，但又不想缺失职业竞争力，这两个想法是不是看着很矛盾？\n5. 我曾经尝试跑过 github 上的 RN 的一些项目，一跑就报错，完全跑不起来，相比之下 flutter 项目好像一下子就跑起来了，项目搭建也简单\n求问 2025 年了我该怎么选择，感激不尽",
        "extracted_time": "2025-04-30T14:04:57+00:00",
        "content": "1\njamesjammy061 19 小时 40 分钟前\n感觉都挺恶心，准备写三套代码。用 Capacitor by Ionic 好点\n|\n2\nmurmur 19 小时 40 分钟前 1\n如果是外包项目，无脑 uniapp ，别管为什么，想雕花可以学 flutter ，这玩意做个待办，记账，是挺好的，就是没啥用\n|\n3\nnuonuojump 19 小时 17 分钟前\n现在好像无脑 uni ,会 vue 就能干。我之前搞过 flutter ，感觉写起来也很恶心。rn 没搞过，问过搞过的 也是恶心的不行。主要现在 ios 少了，跨端还不如做学学 android 原生了。\n|\n4\nroundgis 18 小时 51 分钟前 via Android\n如果要大量使用原生接口\n不如用原生+webview 如果是隨便寫來玩那就 rn 吧 |\n5\nlifeaslingex 18 小时 29 分钟前\n我也是前端 react 技术栈，我个人偏向用 RN （自身写习惯 React 了考虑到时间成本），建议不要陷入\"我该学习什么技术\"，能解决问题的技术就是好技术\n|\n6\nhwdq0012 18 小时 14 分钟前\n79 官方在 jsx 中直接调 c++了， 作为一个 qml + c++写桌面，嵌入式 mvvm 的人， 我很想把我的 c++反射用到 rn 上玩一玩\n|\n7\nangrylid 18 小时 12 分钟前\n“生产力”和“图一乐”才是你最大的矛盾。\n如果你是在国内混饭吃，其实最好就业的跨端技术应该是小程序，最近两年可能所谓鸿蒙开发能开出一些岗位，另外就是听说一些车机开始上 Flutter 。 反之你要是出于什么兴趣爱好，就不要执着于跨端了。用苹果手机就学 SwiftUI 反之 Jetpack Compose ，反正你又不想处理平台兼容性问题。 |\n8\nmusi 18 小时 9 分钟前 via iPhone\n1 自己项目做着玩那就无所谓\n2 flutter 走的是自绘引擎，你可以理解为所有组件都是在 canvas 上画出来的，所以所有平台上都长一个样，RN 走的是转译，就是将 react 语法转成对应平台的原生组件，所以每个平台都是自己的样子 3 不管是 flutter 还是 rn 你只要涉及到对应平台的 api 都会有一定问题，跨平台没有银弹 4 这俩其实都不太能增加职业竞争力，现在 AI 这么强了，写一些通用的业务逻辑问题不大 5 RN 生态比 flutter 多的多，但是质量不好说，没准用的一个包啥时候就不维护了，flutter 稍微好一点 |\n9\nmogutouer 17 小时 55 分钟前\nAI 最熟悉哪个就用哪个\n|\n10\nJafee 17 小时 53 分钟前\n好像没人提到 KMP ，借楼问下 2025 有人用 KMP 吗？\n|\n11\nlaogui 17 小时 36 分钟前 via Android\nAI 时代，RN 又胜一筹\n|\n12\nkid1412621 16 小时 46 分钟前 via iPhone\nrn 现在不是流行 expo 吗？不过有 youtuber 拔 meta 自己的 app ，也没几个是完全用 rn 的\n|\n13\nmyoula 15 小时 53 分钟前 via Android\n我用 rn 和 flutter 都做过项目，rn 写 ui 比 flutter 更舒服一点，flutter 的嵌套过于让人眼花缭乱了，但是如果要接入第三方库 flutter 更好一点，rn 很多第三方库都停止更新了，比如微信 qq 登录这些，我都自己 fork 了好几个去适配官方最新的 sdk ，国内很多平台的 sdk 在 flutter 上明显支持比 rn 好很多。\n|\n14\nAItsuki 10 小时 59 分钟前\n长话短说：都学一遍就对了，rn 和 flutter 都很简单。\nrn 和 flutter 我都用，相对来说 flutter 遇到的疑难杂症要少一些，项目配置更简单一些，并且不需要依赖太多额外的第三方库。flutter 本质上是个 “游戏引擎”，编译出来的 ios 和 android 的 ui 组件高度一致。 rn 的优势是除了前端生态以外，还有一个很重要优势是成熟的热补丁方案，而 flutter 的热补丁才起来没多久。 ps：rn 确实有你说的一堆恶心的兼容问题，甚至离谱到无法用 windows 编译。比如 rn 现在最热门的 expo 框架并不完全兼容 windows 开发环境，写原生插件要用 linux 或 mac 。 |\n15\nsn0wdr1am 9 小时 21 分钟前\n都学，都用。\n哪个合适用哪个。 小马过河，自己试试。 |\n16\ncrackidz 8 小时 49 分钟前\n技术选型的问题都不如跑个 DeepResearch ，人容易有刻板偏见，本质输出的是个人爱好\n|\n17\njaydenhu8077 8 小时 19 分钟前\n@AItsuki 我最近也在写 flutter ，你说的这个 flutter 的热补丁现在有啥方案能实现\n|\n18\niv8d 8 小时 17 分钟前 via Android\n问来问去的，多大人了自己写个小 demo 对比一下心中有数\n|\n19\njustsoup 7 小时 6 分钟前\nhttps://tech.meituan.com/2019/12/19/meituan-mrn-practice.html\n看下这篇文章，里面有清楚描述 RN 的能力范围 重点：RN 适合中低频交互页面，Flutter 适合高频交互 Flutter 自绘 UI 是优势（特别是完成图表功能），但是还是免不了要对接原生模块 如果想做到生产级别的，RN 需要掌握技术栈：RN （ Javascript ）+Kotlin+Objective-C （为什么是 Objective-C ，因为 App 要兼容旧机型，Objective-C 是更好的选择），这个也是我目前的技术栈 Flutter 的话，可以少了 Kotlin ，需要掌握的技术栈：Flutter （ Dart ）+Objective-C RN 目前 122K star ，Flutter 目前 170K star ，看好 Flutter 的人数更多 |\n20\nLockroach 6 小时 35 分钟前\n你熟悉 react 就用 rn ，不熟悉就直接用 ft\n|\n21\ncheman 6 小时 16 分钟前\nflutter 写起来会简洁舒适\n|\n22\nchiaf 6 小时 5 分钟前\n如果自己玩就用原生，iOS 就 swiftUI ，android 就 JC （其实还得看看 UIKit 和传统 android 的东西），但是 android 现在不管国内国外，上架是个麻烦的事。\n目前看招聘市场，flutter 好像比 RN 多一点。经常看到要 flutter 的，RN 的招聘看到的不多，当然也许跟城市有关系。 |\n23\nokakuyang 5 小时 39 分钟前\n两个都半斤八两，现在 Compose 也可以编译成 iOS App ，swiftUI 也可以编译成安卓 App ，没什么界限。\n|\n24\ncabudon 5 小时 34 分钟前\n@nuonuojump 如果是个人开发的工具呢？ python 的 flet 怎么样？现在也支持自定义 ui 了\n|\n25\nnuonuojump 4 小时 31 分钟前\n@cabudon 个人玩 还是玩 flutter 吧 虽然嵌套的恶心，还需你去学点 android 端的 java /kotlin ios 的 oc/swift 。我现在是等 compose 跨端了\n|\n26\ntootfsg 4 小时 17 分钟前 via Android\nflutter 对 非 ui 前端相关 程序员很友好，默认 material ui 组件足够舒适了，自己主要做结构设计和组件组合。\n嵌套写多了也就无感了。dart 也简单高效，几乎不需要学，看一半天文档之类的就能开发 app 了。 |\n27\ncabudon 3 小时 52 分钟前\n@nuonuojump flet 就是 python 语言上的 flutter ，不过还是早点上船 dart 的 flutter 吧\n|\n28\nnuonuojump 3 小时 27 分钟前\n@cabudon #27 没用过，我那会是用来跨 ios 和 android 的 ，dart 写的我龇牙咧嘴。\n|\n29\nfox0001 2 小时 55 分钟前 via Android\n用过 Flutter 开发项目，配合 provider 之类的框架，挺好用\n|\n30\nmagic3584 1 小时 43 分钟前\n语言和框架，用过 OC & Swift & SwfitUI ，RN ，flutter ，java & kotlin & jecpack compose 。\n只要跨端，总避免不了处理兼容问题以及编写原生的桥接代码，升级的时候会影响很多库一起升。 RN 对比 flutter 多了个热更，其它的感觉没差 |\n31\nbboring 1 小时 29 分钟前\n年初我也在纠结，现在用 RN 开发的 APP 已经快到尾声了～\n|\n32\nduanxianze 1 小时 9 分钟前\n无脑 Uniapp ，也就是类似把小程序功能独立出来打包，比如阿里的 mpass ，微信的多端应用\n|",
        "summary": "多位开发者讨论2025年技术栈选择，比较React Native（RN）和Flutter的优缺点，涉及跨平台开发、原生接口使用、第三方库支持及AI对技术选型的影响。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "关于 \"家宽不允许开设 Web 服务\" 限制的一些解读",
        "url": "https://www.v2ex.com/t/1129251",
        "source": "v2ex",
        "hot": 33,
        "time": "",
        "timestamp": 1746041324000,
        "desc": "TL;DR: 为避免不必要的麻烦，请不要在家宽的任何端口直接暴露 HTTP(S) 服务；请使用 Tailscale / ZeroTier 。\n---\n最近看到有些朋友因为使用家宽 v4 / v6 在高端口开 HTTP(S) 服务被运营商掐网，要求签保证书不允许架设网站。\n本次以我和广东移动客户经理沟通的内容为基础，简单解读一下该限制到底是如何被执行的。\n叠个甲，这些内容可能并不适用于其它省份和 / 或其它运营商，也仅仅是个人意见，仅供参考。本文也并不涉及 BT / PT / PCDN 相关，仅讨论 \"架设 Web 服务\" 这一行为。\n---\n首先上一张截取自广东移动政企 \"互联网 ICP 备案需要的资料说明\" 的，现时常见需备和不需备案的情况：\n![image]( https://i.imgur.gg/BUaLdQb-IMAGE_2025-04-30_20:37:25.jpg)\n这张图里有些术语并没有清晰给出解释，因此以下的内容是根据我和客户经理讨论过后的扩充和规范化解释。\n总结来说，对于服务器任意端口发送 HTTP(S) 请求，能获得表示服务器已完成响应的返回码的情况，那么就需要备案。\n用大白话讲就是，只要使用浏览器 + HTTP(S) 协议请求该 IP / 域名的任意端口，能获得任意**并非浏览器自带错误页面**的返回码，那么就需要备案；其余情况则不需要备案。\n详细解释:\n- 任何使用 TCP 80 / 8080 / 443 / 8443 的服务 -> 需要备案\n- 发送 HTTP(S) 请求到任意端口，返回 2xx / 3xx / 4xx / 5xx -> 需要备案\n- 如图中所述使用 IP / 域名 连接 App 、POS 机、监控等，但是使用 HTTP(S) 协议 -> 需要备案\n- 返回 Connection Closed (Nginx 444) / HTTP2 Protocol Error / SSL Unrecognized Name Alert -> 不需要备案\n- 不是 HTTP(S) 协议 (如 FTP) -> 不需要备案\n- 通过 HTTP 101 Switch Protocol 转到 Websocket ，用来连接 App ，同时主动关闭任何其余的无效 WebSocket Upgrade 请求，且全程不使用 80 / 8080 / 443 / 8443 端口 -> 不需要备案（这是允许使用 HTTP 协议的唯一例外情况）\n因此，如果以 \"只是暴露路由器面板 / 个人网盘\" 等理由尝试去绕过该限制的话，最后的结果大概率还是吃封停。\n同时，对于 HTTP(S) 以外的协议，广移方面则几乎不予理会。\n---\n补充解释：\n备注中的 \"不需备案情况申请端口开通，需客提供不涉及网页或网站建设承诺书\"：这个很难办下来，就算批下来也会监控 HTTP(S) 入站使用情况，不建议钻这个空子。\n对于基于 UDP 的 QUIC HTTP/3 ，指南中并没有详细说明，实际上广移政企也没有限制 80 / 443 等端口的 UDP 入站。使用 UDP 入站代替理论上可行，然而考虑到实际使用中 HTTP/3 无法脱离传统的基于 TCP 的协议运行，实际配置成本较高，且可能并不稳定。\n---\n个人的一些小想法：\n假设你需要从外部公网环境访问家中的内容的话，哪怕没有对于建站方面的限制，直接将内部的服务暴露在外部网络都是有很高风险的。既然已经有一个可以直接暴露在公网的端口了，为什么不考虑下异地组网的方案呢？\n---\n（其它想到再补充……）",
        "extracted_time": "2025-04-30T19:28:44+00:00",
        "content": "TL;DR: 为避免不必要的麻烦，请不要在家宽的任何端口直接暴露 HTTP(S) 服务；请使用 Tailscale / ZeroTier 。\n最近看到有些朋友因为使用家宽 v4 / v6 在高端口开 HTTP(S) 服务被运营商掐网，要求签保证书不允许架设网站。\n本次以我和广东移动客户经理沟通的内容为基础，简单解读一下该限制到底是如何被执行的。\n叠个甲，这些内容可能并不适用于其它省份和 / 或其它运营商，也仅仅是个人意见，仅供参考。本文也并不涉及 BT / PT / PCDN 相关，仅讨论 \"架设 Web 服务\" 这一行为。\n首先上一张截取自广东移动政企 \"互联网 ICP 备案需要的资料说明\" 的，现时常见需备和不需备案的情况：\n这张图里有些术语并没有清晰给出解释，因此以下的内容是根据我和客户经理讨论过后的扩充和规范化解释。\n总结来说，对于服务器任意端口发送 HTTP(S) 请求，能获得表示服务器已完成响应的返回码的情况，那么就需要备案。\n用大白话讲就是，只要使用浏览器 + HTTP(S) 协议请求该 IP / 域名的任意端口，能获得任意并非浏览器自带错误页面的返回码，那么就需要备案；其余情况则不需要备案。\n详细解释:\n因此，如果以 \"只是暴露路由器面板 / 个人网盘\" 等理由尝试去绕过该限制的话，最后的结果大概率还是吃封停。\n同时，对于 HTTP(S) 以外的协议，广移方面则几乎不予理会。\n补充解释：\n备注中的 \"不需备案情况申请端口开通，需客提供不涉及网页或网站建设承诺书\"：这个很难办下来，就算批下来也会监控 HTTP(S) 入站使用情况，不建议钻这个空子。\n对于基于 UDP 的 QUIC HTTP/3 ，指南中并没有详细说明，实际上广移政企也没有限制 80 / 443 等端口的 UDP 入站。使用 UDP 入站代替理论上可行，然而考虑到实际使用中 HTTP/3 无法脱离传统的基于 TCP 的协议运行，实际配置成本较高，且可能并不稳定。\n个人的一些小想法：\n假设你需要从外部公网环境访问家中的内容的话，哪怕没有对于建站方面的限制，直接将内部的服务暴露在外部网络都是有很高风险的。既然已经有一个可以直接暴露在公网的端口了，为什么不考虑下异地组网的方案呢？\n（其它想到再补充……）\n1\nmooyo 14 小时 4 分钟前\n是的，实践中也是，只管 http/https 协议，其他的基本不管\n|\n2\nxqzr 13 小时 36 分钟前\n> 获得任意并非浏览器自带错误页面\n返回 4xx 、5xx ，没有 body 也可以得到浏览器自带 4xx/5xx 错误页面 > HTTP/3 无法脱离传统的基于 TCP 的协议运行 DNS HTTPS 记录类型； curl --http3-only |\n3\ndatocp 10 小时 24 分钟前 via Android\n网安的观点非常简单，\n不作为， 不要因为方便了别人， 麻烦了他们。 给我停。 说白了就是政 zi 问题。 出问题就要找背锅的。 |\n4\nbluetree2039 10 小时 11 分钟前 via iPhone\nwebdav 是 web 吗？\n|\n5\nlovelylain 10 小时 1 分钟前 via Android\n@bluetree2039 是的，webdav 是在 web 上传输的 xml\n|\n6\nlns103 9 小时 28 分钟前 via Android\n一个想法，如果把网站的根目录“/”不做任何返回，是不是能规避这个检测\n|\n8\nkaiveyoung 9 小时 5 分钟前 via Android 1\n@levelworm 根目录直接 sleep 86400 ，好的，现在就实践\n|\n9\nzhleonix 8 小时 51 分钟前\n自己搞个 VPN tunnel\n|\n10\nesrkforward 8 小时 6 分钟前 via iPhone\n所以，在外部网络，通过 VPS 上部署的 FRP 来访问家宽端口上的 http/https 有风险吗？\n|\n11\nslowmist 8 小时 5 分钟前 5\n宽带是实名的 为什么要备案😆\n|\n12\nbluetree2039 7 小时 55 分钟前\n把 家宽当做 frp 服务端应该没问题吧\n|\n13\nstrobber16 7 小时 38 分钟前 via Android\n可以通过 https 记录让浏览器在不访问 tcp 的情况下直接连接 h3 。麻烦的是 chrome 只允许 https 记录指定 443 端口的 h3 。我因为这个原因切换到了基于 ff 的 zen\n|\n14\nkevinhwang 6 小时 52 分钟前\n被发警告的 v 友说一下自己当时的情况吧\n|\n16\nPhpBB 6 小时 45 分钟前 1\n这两年家宽受到的鞭挞真的给我一种活在申奥前的感觉\n昨天备份了 3 个 G 的文件到网盘,上传速度限死了 64KB,传了十多个小时 iperf 连下载都限制,反馈几次,打死不承认 20 块的宽带你说亏本了,可我这接近 300 的宽带,有必要这样吗 |\n17\nbaobao1270 6 小时 28 分钟前\n按照 MIIT 的规定来讲，其实不管是不是 80/443 ，只要网站是「公开」的，那就需要备案；相反用于 API 、需要登录的内部系统等，如果纯按 MIIT 的说法是不需要备案的\n但是实操上区分是不是「公开网站」太麻烦，所以大多数采用屏蔽 80/443/HTTP 协议特征等「一刀切」的方法，就比如楼主给的这张图里的规则。 楼主的建议是对的，技术上讲了解运营商的限制方式、作针对性的规避即可。从安全角度上说使用 WireGuard 或者其他内网穿透服务是最佳实践；技术上讲 port knocking 、高位端口的 SSL 双向验证等方式，也是可以的，但是安全性上存在一定的瑕疵。 |\n18\nbaobao1270 6 小时 24 分钟前\n顺带一提，主流的这些组网软件都是基于 UDP 的，而主流的应用都是基于 TCP 的，走这些组网软件其实是存在 MTU/MSS 对性能的影响的。当然考虑大多数人 <100Mbps 的上行带宽其实并没有到需要优化 MTU/MSS 的地步。\n|\n19\nMFWT 6 小时 23 分钟前\n> 发送 HTTP(S) 请求到任意端口，返回 2xx / 3xx / 4xx / 5xx -> 需要备案\n我一直担心的一件事是，比如说，OpenConnect 这种基于 HTTPS （或者说需要 HTTPS 协商）的 VPN ，似乎也不能用了？ |\n20\nMaverickPLS OP @xqzr 没有 Body 的 4xx 5xx 这点确实是我没讲清楚。正文所述 \"浏览器自带错误页面\" 其实想指代的是服务端没有返回任何有效 HTTP Status Code 的情况。\n|\n21\nMaverickPLS OP @xqzr\n@strobber16 关于直接访问 H3 ，我明白技术上通过 HTTPS 记录确实可行，之前也看到过 v2 上的相关帖子，但是也需要额外配置，不算特别开箱即用。 以及，我个人有遇到 UDP 443 被偶发阻断的情况，尤其是跨境访问（我人目前在海外）。不知道是不是触发了 GFW 的规则。 |\n22\nMaverickPLS OP @MFWT 如果使用了 HTTPS 来协商，并使用正常的 HTTP Status Code 返回，那么原则上说是的，需要备案。\n|\n23\nMaverickPLS OP @esrkforward\n@bluetree2039 我刚去检查了一下 FRP 支持的传输协议，包括 TCP 、KCP 、QUIC 、Websocket 、WSS 。 如果是这样的话，不管是在家宽上使用客户端还是服务端，运营商侧都不会理会。 但是如果你家宽上的 FRP 服务端还额外启用了 HTTP 类型代理的功能，同时开放对应端口，对外监听 HTTP(S)，那么则需要备案。 |\n24\nMaverickPLS OP @lns103\n理论上来说，运营商作为中间人，在 HTTPS 入站访问的过程中最多只能得知你的 SNI ，并不知道具体访问的是什么内容。 但是，他们也可以在得知了 SNI 之后直接撞字典找你的真实 URL 。技术上是可以实现的。 |\n25\nJensenQian 5 小时 26 分钟前\n顺带开 web 不安全\n搞个 wireguard 什么的连回去完事了 |\n26\ngransh 5 小时 4 分钟前\n这算什么，当初我给我 lofter 绑定了一下自己的阿里云域名（ lofter 自带的个性域名功能）。\n竟然被打电话要我停止这一行为。我说我域名备案过了，他说博客就是不行。我说我的 lofter 博客是网易提供的，我只是加个域名。 他们说那也不行，只要有评论功能的博客就不行。 从此再也不把域名放国内。 |\n27\ngunner168 4 小时 55 分钟前\n@bluetree2039 应该算吧，301 跳转只支持 Web ，试了一圈下来只 webdav 协议能访问，smb 或者其他都不行\n|\n28\nmorpheuszero2023 4 小时 19 分钟前\n你问了，他们肯定告诉你最严格的规定。实际执行的时候不知道是啥样的。\n怕就用 vpn 连回家，不怕就 web 继续用。被封了沟通一下也能解。一天天怕这怕那的，真累。 |\n29\nkk2syc 4 小时 2 分钟前\n@morpheuszero2023 确实，正常使用根本不需要担心。我备案域名（ cn ）+家宽 81 端口（ nginx ）直接 ddns 使用已经用超过 10 年了，十多个朋友各种用。只要不是直接访问内容的一点问题没有，加个特定链接 http auth 触发白名单加白的事情。\n|\n30\nJamesR 3 小时 36 分钟前\n家宽是动态 IP 的，架设网站有多大意义？都是 DDNS ？\n域名放国外，直接开个 FRP ，全过程加密，把端口转移到 VPS 服务器上。 |\n31\nNoOneNoBody 3 小时 33 分钟前\n不是，你没有最终解释权，你解读没有用啊，最多只能算“理解”\n|\n32\ngordengan 2 小时 38 分钟前\n通过反代加上密码 path 路径呢？\n比如： https://myabc.cn:8888/izki4jeo 可以登录 然后让 https://myabc.cn:8888/ 返回浏览器自带错误页面（如果可以实现） |\n33\ntxydhr 2 小时 37 分钟前\n我觉得这个服务不是指的技术层面的服务，而是法律层面的服务，80/443 等需要备案\n|",
        "summary": "新闻讨论了在家宽网络上开设Web服务可能被运营商限制的情况，并建议使用Tailscale或ZeroTier等工具进行替代。文章解释了备案要求及可能的规避方法。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "各位网络达人，大家觉得现在家用局域网有必要上万兆吗？",
        "url": "https://www.v2ex.com/t/1129276",
        "source": "v2ex",
        "hot": 32,
        "time": "",
        "timestamp": 1746068021000,
        "desc": "如果有的话，是铺设光纤好，还是网线好？\n2.5G 就不考虑了。谢谢大家，🙏",
        "extracted_time": "2025-05-01T02:53:41+00:00",
        "content": "1\ndfdd1811 6 小时 37 分钟前\n看需求吧，我千兆就够，没什么传东西的需求，正常 atv 从 nas 上看个片，没什么问题。唯一有网络瓶颈的问题就是如果原盘 atv 不能播放，我要单独把里面正片取出来重新做成 mp4 会比较麻烦。但也不总这么弄，而且等的时间可以干别的\n|\n2\nkeshi 6 小时 34 分钟前 via Android\n是否有必要 看自己需求 单速度来说 肯定是光纤好 ，如果全换成光纤 包括终端设备 不知道你是否需要考虑成本问题，我理解的个人家庭，会接受不了成本\n|\n3\nxcodeghost 6 小时 31 分钟前\n很多中小型企业千兆局域网都够了，家庭的话其实不需要，大部分时间都宽带都跑不满。\n|\n4\nsiknet 6 小时 31 分钟前\n看具体情况啊，NAS 下毛片，你局域网看的话，一般都有点卡顿，特别是那种几十 G 的 4K 或者 VR ，我用万兆网看就不会，配合 MPV 还能插帧到 60hz ，非常爽\n不是有非常低成本的方案的，两边设备上 cx341 的洋垃圾万兆网卡，然后一根 SFP 的一体线一捅就能用了，全部加一起也就一百多吧 |\n5\nsiknet 6 小时 30 分钟前\n我说的卡顿不是说播放时卡顿，是播放器随意快进的话会有延迟，比如 POTPLAYER ，用 MPV 能做到无延迟跳转快进后退\n|\n6\ngpt5 6 小时 29 分钟前\n看需求吧。有阵子我有局域网内大文件快速传输需求，就全面上了 10gbe ，后来需求没了，10gbe 设备(交换机/网卡/typec 网卡等)全出二手了。\n|\n7\nPhpBB 6 小时 27 分钟前\n十几年前千兆够用,现在依旧够用,我缺的从来不是带宽而是延迟\n|\n8\n1145148964 6 小时 27 分钟前\n装修的话，当然有必要。都没多少钱。\n|\n9\nbaobao1270 6 小时 24 分钟前\n当前市场主流还是 2.5G ，感觉除非你给每个终端都配上 10G 的连接能力，不然最终的接入终端还是受限于 2.5G/千兆的\n不考虑 2.5G 那就只有万兆了吧……总不能用 5Gbps 以太网在这个更小众的标准 万兆电口对网线质量要求较高，如果一定要万兆那么还是建议走光纤 |\n10\nfeikaras 6 小时 24 分钟前 via iPhone\n不太有需求。但是成本也不算太贵。\n|\n11\nfeikaras 6 小时 21 分钟前 via iPhone\n六类可以布不超过 60 米的万兆。线没啥成本的。成本在其他地方。布电口可以方便弃坑。因为东西都是一样的，除了网卡交换机没加钱。\n|\n12\nCheons 6 小时 15 分钟前 via Android 2\n还要问别人\n说明没需求，不需要。 |\n13\nAutonomous 6 小时 13 分钟前\n搞 NAS ，上万兆光网，真香\n|\n15\nBernieDu 6 小时 4 分钟前\n还好，我 nas 用的垃圾机械硬盘，读取速度可能也就 140 MB/s ，千兆（ 125 MB/s ）带宽差不多够用了，你家终端要是都能支持万兆都是固态硬盘那就上呗，有钱还是没钱的问题\n|\n16\nsomeonesnone 6 小时 4 分钟前\n没必要吧， 我 wan 还在用 8M 的 adsl\n|\n17\nsunziren 6 小时 3 分钟前 via Android\n全屋万兆，要上！\n光纤有点鸡肋，就算了！ 网线好，自己可以打水晶头，光纤问题一个人不好处理？ |\n18\nztmzzz 5 小时 50 分钟前 via iPhone\n看价格，有时候 2.5g 的设备比 10g 的设备还要贵，没理由不上 10g\n|\n19\nnetjacky OP @someonesnone 8 兆 ？？？ 现在还有这个速率吗运营商？\n|\n20\nYouko 5 小时 42 分钟前 via iPhone\n全屋光纤是不是运营商会帮忙安装\n|\n21\nTellMeWHY 5 小时 37 分钟前 1\n看毛片我不喜欢看特别高清的，感觉特别假，有毛刺的影片才叫毛片啊\n|\n22\nYuriX 4 小时 53 分钟前 via Android\n整机备份，必须的\n|\n23\nsxm 4 小时 26 分钟前 via Android\n如果是现在新装修，完全可以六类网线和普通不带钢丝的室内皮纤同时布，这种光纤线缆的成本不会超过 100 元。后续装运营商的 fttr 还是自己用光交换机都方便\n|\n24\nadoal 3 小时 30 分钟前\n没有“大家”，只有你家\n|\n25\nmoefishtang 3 小时 16 分钟前\n网线吧\n网线钳才多少钱，光纤熔接机最便宜的都要上千了 而且感觉局域网千兆够用了 |\n26\nXenotaros 3 小时 15 分钟前\n我觉得有必要，为以后留好余量\n|\n27\nEndlessMemory 1 小时 10 分钟前\n又不是天天下大文件，百兆对我都够用了，而且好多时候百兆都跑不满\n|\n28\nashong 1 小时 9 分钟前 via iPhone\n如果全设备都支持万兆，肯定上万兆\n|\n29\nlikooo125802023 1 小时 9 分钟前\n你是准备把 4K 视频素材放 NAS 上，然后剪辑？？\n除此之外都用不到那么大的带宽 |\n30\nhammy 1 小时 6 分钟前\n不在家办公的话，我最近觉得宽带都没必要有了。。\n|\n31\nglouhao 1 小时 0 分钟前 via Android\n局域网剪辑视频需求有吗\n|",
        "summary": "用户讨论家用局域网是否需要升级至万兆，涉及传输需求、成本、设备兼容性及实际使用体验等因素。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "求解，学历升级相关方面",
        "url": "https://www.v2ex.com/t/1129236",
        "source": "v2ex",
        "hot": 26,
        "time": "",
        "timestamp": 1746024769000,
        "desc": "本人学历是统招的大专，一直在从事 java 开发，刚拿了赔偿离职。\n在愉快的玩耍一段时候后，想要重新找，但是离职的人太多了，很多公司都要求学历了，随便一个公司都要求本科。\n之前在偶然的机会加了一个教育机构的微信，里面说的是一年硕士，两年博士，具体的没问，只是他们发的消息。\n我就想知道，像这种的能提升学历，帮助进一些比较好的公司吗",
        "extracted_time": "2025-04-30T14:52:49+00:00",
        "content": "本人学历是统招的大专，一直在从事 java 开发，刚拿了赔偿离职。 在愉快的玩耍一段时候后，想要重新找，但是离职的人太多了，很多公司都要求学历了，随便一个公司都要求本科。 之前在偶然的机会加了一个教育机构的微信，里面说的是一年硕士，两年博士，具体的没问，只是他们发的消息。 我就想知道，像这种的能提升学历，帮助进一些比较好的公司吗\n1\nmetory 18 小时 52 分钟前 via Android 1\n现在专硕都要三年了，博士四五年起步，还有捷径可以走吗，你不姓董的\n|\n2\nandyyuen 18 小时 50 分钟前 via Android\n不能，好公司都要全日制。\n其次，学信网能查到的非全本科，正规途径的非全本科，都要走统一入学考试，还要毕业论文🥲，不可能给钱拿证。 |\n3\nandyyuen 18 小时 46 分钟前 via Android\n985 211 的非全学历可以拿，那是真考试的😂，也不是随便弄弄就能过\n|\n4\nchiaf 18 小时 43 分钟前\n一定要在学信网上能查到的那种，比如自考等。\n国内用处不大，不是看第一学历就是统招、全日制，有的甚至要看你高考分数🤪。 反而找国外的工作可能有点用。 |\n5\neternaldzw OP @andyyuen 我倒不是说要进什么 pdd 啊，腾讯这种，一般中等的就行，不然大专就只能外包了。像以前还能靠能力进一些比如易车这类的公司，起码正规，五险一金足额交，现在别人看都不看\n|\n6\neternaldzw OP @chiaf 学信网这个肯定是要查到的，所以现在很蛋疼，不过我也不是说要进什么 BAT 这类的，就不知道行不行了\n|\n7\neternaldzw OP @metory 性别也不匹配撒\n|\n8\nMAVETRICK 17 小时 30 分钟前 via Android\n除非正儿八经的全日制硕士，不然没什么用，年轻的话可以去考研，考个双非研究生难度也不大。\n|\n9\nOHyn 15 小时 11 分钟前\n港硕倒是有 1 年的。但是价格不便宜。而且作用几乎就是用来考编。\n|\n10\ndearmymy 13 小时 14 分钟前\n@OHyn 这段研究就是为了硬性问题，同样认可貌似就看到港硕跟美硕可以 online ，不知道哪里还有便宜的，就是为了一个能 wes 认证的 online 硕。。。\n|\n11\nsir283 9 小时 4 分钟前\n一年硕士那种，我之前在知乎上看到过，最低都要二三十万一年，还要出去上学，在国外待半年，才能申请留服认证，巨麻烦，而且是只有硕士学位证单证，国内企业都基本不认可，国内普遍都是毕业证加学位证双证。当然，你如果确实有实力，财力充足，确实可以去搞一个。\n|\n12\ngransh 8 小时 29 分钟前\n你现在是大专，招聘网站上要本科，你也以为自己找不到工作是因为没有本科才被拒的。\n1.于是你考虑起了成人本科 or 自考本科，然后你去找 hr ，他说只要统招本科。 2.那你说我弄个硕士总比本科强吧，hr 说一年制水硕不行，必须全日制。 3.于是你狠下心考+读了个全日制硕士，4-5 年过去了；哦对你好像还得先专升本，那也就是 6-8 年过去了，hr 说你第一学历不是本科啊。 明白吗，你现在不是仅仅一个本科能解决问题的，而是你的大专让你和 hr 没有往后聊，才让你误以为搞个一年制水硕可以解决问题。 你现在年龄是关键，如果还小的话，努力读个全日制硕士还是有点用的。也就是 3 |\n13\nmurmur 8 小时 28 分钟前\n外包有个专升本就够了，读全职日硕士，怕以后别人查初始学历，反正国央企研究所特别喜欢双 211 双 985 这种提法\n|\n14\nhammy 8 小时 3 分钟前\n非全也要统考的，不容易考上。\n同等学力申硕的意义不大，价值低。 |\n15\nhammy 8 小时 1 分钟前\n相对好的可能是同等学力考研，考全日制。毕业后学信网可查，双证。但是第一学历硬伤。\n|\n16\n74123gzy 7 小时 41 分钟前\n看你 2018 年就发 6 年的 NET 能拿到了，也就是说起码工作 12 年了，也别指望了，老老实实回家吧，或者看有没有啥高级岗能投的，普通开发基本是不可能了\n|\n18\n74123gzy 7 小时 39 分钟前\n@74123gzy #16 总之不要考虑学历的问题了，你以前十几年都干过来了，现在突然啥也找不到了，你还觉得是学历的问题么？普通外包肯定是不可能了，没非全日制本，肯定是不会给你推简历到甲方的\n|\n19\nNewYear 7 小时 36 分钟前\n有能力就尽量提升学历。\n至少在未来你找工作遇到问题时你想的是《我已经尽力搞学历了》，而不是《当年我咋就不去整个好点的学历呢》。 我的意思是，如果你尽力了，未来你会专注于提升能力，不需要再关注学历了，因为我们尽可能的去努力了，人不会因为已经尽力过的事情后悔，也不用因此怀疑自己。 而你现在在做的事情，就是在怀疑自己。 你现在因为学历怀疑自己，接下来你会困惑你努力学新知识还有用吗，如果找不到工作学了又有什么意义呢？ 现在我告诉你，尽量提升学历，后续就没有这个疑虑了，然后你会专注于提升能力，如果 HR 不接受，那也是这个公司的损失。。。 也许未来还会磕磕绊绊，但那又如何，你本身的情况就注定了不是最强的那一批高学历者，接受现实也没什么不好的，还能更早的去筹划未来，比如转到其他行业、创业等等。 |\n20\nNewYear 7 小时 32 分钟前\n以上回复是针对“我就想知道，像这种的能提升学历，帮助进一些比较好的公司吗”。\n一句话简述就是： 尽可能提升学历，你更强一分，就能超越许多其他人，一定能进到比现在更好的公司。 这会让你更自信，从而去做更有用的事情，比如锻炼口才在面试的时候拿到更好的岗位，提升能力去面试更好的岗位。 从而你能有更好的工作，更好的未来。 趁年轻吧，等你年龄大了，你会无比纠结，因为年龄越大，能在职场呆的时间越少了，学历的意义也就下降了。 |\n22\nnuonuojump 7 小时 27 分钟前\n@chiaf #21 需要加科目的，很难，学校那边也会卡的。\n|\n23\nchiaf 7 小时 19 分钟前\n@nuonuojump 看学校，看专业的。知道一个专科都是自考的，然后考研去了吉林那边一个大学，选的什么农业相关的专业🌝\n|\n24\nnuonuojump 6 小时 59 分钟前\n@chiaf #23\n专科 2 年是同等学力，一般要加科目，要是再跨专业，还不如重新高考难度低。起码刷个全日本。计科的难难难。我之前梦想的学校反正卡。 |\n25\nsagaxu 6 小时 42 分钟前\n我亲戚本科 985 ，去 QS 靠前的英国学校读了一年制硕士，自己做饭比较节俭，总费用 70 万。教育部是认可的，上海落户也顺利办理，企业也认可。国内大厂其实有不少员工是一年制硕士。\n|",
        "summary": "一名拥有统招大专学历的Java开发者因学历限制在求职中遇到困难，寻求通过非全日制教育提升学历以进入更好公司，但网友指出正规学历提升需通过考试且耗时较长，非全日制学历在多数企业不被认可。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "前两天特种兵去了一波北京，说说感受",
        "url": "https://www.v2ex.com/t/1129195",
        "source": "v2ex",
        "hot": 23,
        "time": "",
        "timestamp": "",
        "desc": "陪媳妇去看张杰演唱会\n26 号上午 7 点的飞机深圳起飞去北京，28 号晚上 7 点的飞机北京起飞回深圳\n3 天总花费了 8000 （机票 3300+住宿 1100+演唱会门票 1300+景点门票+交通+吃）\n交通：\n1.都是飞的大兴（都快到河北了），大兴这机场感觉与众不同，吃的都是平价的，没有溢价，值机柜台很简陋，但上面一层又有奢侈品卖，两个站到北京草桥居然要 35,商务座 50\n2.去八达岭的高铁 28 号的就没有了，感觉是五一大家提前走，还好 27 还有，不然得坐公交了（很耗时），五一去玩的游客体验肯定不太好了，长城上面肯定挤然后缆车肯定要排队。\n3.有非机动车道的城市就是好啊，感觉路也比较宽（但三环内貌似比较挤）\n4.市内地铁比深圳便宜多了，但车比深圳的车小\n景点：\n其实我 20 年前去过一次北京，那时候还小，然后那段时间因为北京奥运，很多景点在修缮，导致只去了圆明园。所以这次去把遗憾弥补了。\n1.天坛公园，本次旅行的 MVP ，门票才 15 ，我们从南门进去的，因为下午才去，比较累还在公园长椅上睡了一觉(惬意又舒服)，有老年乐团演奏，有鸽子，公园很大，人也不算多，要是深圳有这样的公园就好了。\n2.故宫，没有很惊艳，但是行李寄存好评，免费送到指定的门。门票 60 ，而且票很难抢。\n3.颐和园，门票 30 ，感觉不错，就是人太多了（可能 28 才去的原因），然后跟课本里想象的不太一样。\n4.长城，感觉不错，可惜没时间怎么爬，时间紧又要给老婆拍照。\n5.天安门，安检好慢，旁边一个口的速度是我这边的 2 倍，想说下安检人员又不敢。\n饮食：\n吃不习惯，豆汁儿没有想象中的难喝，卷饼和涮肉好像跟其他地方的味道一样，烤鸭没来得及去吃不过以前吃过了。\n人文：北方人普通话就是好，不像广东这边集合了湖南塑普+云贵川马普+广西老表+广普，跟猴子叫一样。长相也感觉比较方正，不像广东这边尖嘴猴腮一点。不过人感觉没有广东这边友善\n规划：感觉三环内没什么高楼，然后到处都是标志性建筑，我住的鸟巢附近，也有很多博物馆这些，恢弘大气，很漂亮，令人神往。\n天气：这个季节很舒服，就是柳絮纷飞\n总结：政治+文化+经济中心就是好 当年因为深圳离家近+不喜欢北方的天气 选择的深圳 现在看来选错了？",
        "content": "| 注册会员 | 746,513 |\n| 主题 | 1,129,312 |\n| 回复 | 16,207,327 |\n| 朋友买卢浮宫门票被钓鱼网站骗 信息安全 • zerozz • 2 分钟前 • 最后回复来自 chesha1 | 86 |\n| 最近自建一个 nas 装了飞牛，使用域名解析 ipv6， 只能局域可以访问， 外网访问不了，怎么回事，折腾半天不行，求教。 NAS • pey69 • 17 分钟前 • 最后回复来自 pey69 | 7 |\n| 求问 2025 年技术栈选择， RN 还是 flutter\n1 程序员 • Asuler • 29 分钟前 • 最后回复来自 MRlaopeng\n|\n33 |\n| 求教：使用 iSCSI 共享能否解决 SMB/NFS 的权限冲突问题 NAS • Ploter • 55 分钟前 • 最后回复来自 scegg | 13 |\n| 分享 Golang 视频： Golang 快速实现 CRUD API - 基于开源框架 Airway Go 编程语言 • ospulse • 1 小时 45 分钟前 |\n| Win10, 手贱把 NTUSER.DAT 以及相关的几个文件删除了，现在无法用原来的本地账户登录 windows, 每次登录都会自动创建临时的用户目录, 开始菜单无法打开 Windows • kelvinaltajiin • 52 分钟前 • 最后回复来自 kelvinaltajiin | 4 |\n| emby 怎么鼠标悬停在影片上自动播放预览，类似 p 站那样 NAS • wty95 • 40 分钟前 |\n| perplexity 的 deep research 模式的 AI 幻觉（hallucination）很严重，动不动就伪造古文，自编数据更是司空见惯，各位有没有同价位的幻觉率少点的 Deep Research 推荐？ 程序员 • qqqfreeboycn • 2 小时 6 分钟前 • 最后回复来自 neteroster | 1 |\n| 每天解锁 Jemini ai 的一种玩法 5/1：素描转实体图 程序员 • antaeus • 7 小时 23 分钟前 |\n| 腾讯云欠费 2 元删数据没有讨论的吗 云计算 • lichdkimba • 13 分钟前 • 最后回复来自 spiritV | 175 |\n| 多进制数的乘法时间复杂度 O(n)? 程序员 • qwertyegg • 5 小时 24 分钟前 • 最后回复来自 KeShih | 2 |\n| 有没有研究图形化 AI 模型的大牛。预测轮盘落点。我有海量数据 程序员 • ydt0728 • 3 小时 19 分钟前 • 最后回复来自 EchoWhale | 24 |\n| 月兔编程语言支持国产芯片开发，对标 C？ 程序员 • Hooooooey • 3 小时 23 分钟前 • 最后回复来自 mayli | 8 |\n| 直接用 v0.dev 写的界面与真实的后端接口通讯可以吗? 程序员 • jiaoguan1688 • 4 小时 35 分钟前 • 最后回复来自 kneo | 4 |\n| 高频金融系统如何防止突然断电导致的数据丢失？ 程序员 • latifrons • 6 小时 31 分钟前 • 最后回复来自 PhpBB | 95 |\n| 接了一个小程序的单子，客户很多图片怎么放比较好呢？\n1 程序员 • ccctttwww • 8 分钟前 • 最后回复来自 realpg\n|\n31 |\n| 大厂的同事们，你们是怎么定位线上故障的？\n1 程序员 • 5261 • 2 小时 13 分钟前 • 最后回复来自 mbeoliero123\n|\n101 |\n| 字节的 AI 智能体 Trae 用起来怎么样 程序员 • kellysally • 3 小时 22 分钟前 • 最后回复来自 mayli | 15 |\n| Hacker News 中文 RSS 订阅 RSS • s4fea0a8321 • 3 小时 24 分钟前 • 最后回复来自 s4fea0a8321 | 4 |\n| tg 上运维/sre/devops 相关的交流群 DevOps • hellolinuxer • 13 小时 49 分钟前 • 最后回复来自 lizzzy | 1 |\n| [Golang/k8s] 内存分析中 pprof 与 runtime 包的 HeapInuse 的 GAP 在哪里呢？ Go 编程语言 • Charlie17Li • 19 小时 45 分钟前 • 最后回复来自 feedcode | 1 |\n| 浅浅体验了一下 vivo x200 ultra，不太满意 Android • Awes0me • 9 小时 21 分钟前 • 最后回复来自 southwolf | 20 |\n| 那个大模型编码能力最好？\n1 程序员 • silenceboychen • 20 小时 31 分钟前 • 最后回复来自 sickoo\n|\n99 |\n| nodejs 后端，怎么比较好的生成接口文档？(排除 nest.js) Node.js • wuxilaoshiren • 1 小时 54 分钟前 • 最后回复来自 llej | 27 |\n| Cursor 帮我写了个 pdf 编辑器 程序员 • daBig • 6 小时 51 分钟前 • 最后回复来自 Syiize | 3 |\n| 微信公众号新消息立刻转发到群里如何实现，有人有点子或者软件吗？ 程序员 • john2023 • 6 小时 53 分钟前 • 最后回复来自 mybro | 26 |\n| 哪一家 AI 对会话隐私保护的最好？ 程序员 • haolitcs • 6 小时 6 分钟前 • 最后回复来自 flyqie | 2 |\n| Python 项目代码升级咋搞？ Python • jackOff • 21 小时 23 分钟前 • 最后回复来自 bingfengfeifei | 7 |\n| 中国建设银行顺利无损收取谷歌广告联盟 Google Adsense 电汇 程序员 • handsometong • 1 小时 41 分钟前 • 最后回复来自 ch3nbo | 5 |\n| 你们的 cursor 界面卡吗?win 版本的 程序员 • jiaoguan1688 • 3 小时 40 分钟前 • 最后回复来自 love2328 | 3 |\n| 在线之家 在公司就可以访问 家里的网就访问不了，请问是什么原因呢？ 程序员 • doujiao • 6 小时 48 分钟前 • 最后回复来自 keshi | 1 |\n| emby 服务远程访问的问题 NAS • guoguobaba • 17 小时 14 分钟前 • 最后回复来自 kid1412621 | 27 |\n| 这几天折腾 PVE AIO 有点上头了 NAS • 0x663 • 4 小时 19 分钟前 • 最后回复来自 anonymity | 48 |\n| 打包 mac 应用进行分发一定需要进行苹果开发者认证并付费吗？ iDev • silenceboychen • 1 天前 • 最后回复来自 hwdq0012 | 17 |\n| 请教下，有没有实现基于笔记本的 win11 系统自动完成不同的 PM 操作 Windows • tyy123 • 1 天前 • 最后回复来自 ntedshen | 6 |\n| 腾讯新开源的 Kuikly，但是我不太敢用，害怕又是一个 kpi 产物 程序员 • hhhhohhhh • 9 小时 41 分钟前 • 最后回复来自 bunnyblueair | 36 |\n| 两个人的数据开发团队,被要求从零开始治理企业数据 MySQL • IIIIZAYOI • 7 小时 8 分钟前 • 最后回复来自 iv8d | 20 |\n| 谁有开源的 react antd 5 的表单设计器求分享 程序员 • zsvc • 1 天前 |\n| 再也不用记 k8s 的命令了 Kubernetes • justyy • 2 小时 55 分钟前 • 最后回复来自 mikaelson | 1 |\n| NAS 硬盘选多大的？有没有可能混用希捷西数？ NAS • dcsuibian • 6 小时 23 分钟前 • 最后回复来自 Autonomous | 36 |\n| 有做过基于 webrtc 技术的多人视频会议系统的吗 PHP • tangknox1 • 18 小时 50 分钟前 • 最后回复来自 tangknox1 | 16 |\n| 救救我~~， k8s 的 containerd 的镜像加速还有那些办法可以用呀 Kubernetes • 052678 • 22 小时 19 分钟前 • 最后回复来自 mengyx | 21 |\n| jdk 发行版大家生产环境和开发环境都用的是哪一家呢？\n1 Java • zx9481 • 1 天前 • 最后回复来自 guanyujia5444\n|\n54 |\n| GitHub 开源项目提 PR，求推荐！ 程序员 • gulao • 1 天前 • 最后回复来自 guanzhangzhang | 16 |\n| WEB 版本的操作系统好用么？ 程序员 • zsvc • 1 天前 • 最后回复来自 qinqiuxu | 19 |\n| 安卓有类似熊猫吃短信的短信拦截工具吗 Android • balddonkey1 • 17 小时 28 分钟前 • 最后回复来自 flynaj | 21 |\n| 有没有学习 opencl 和 cuda 编程的教程和学习的地方啊#web3#区块链 程序员 • akadanjuan101 • 1 天前 • 最后回复来自 bytecc | 5 |\n| 如何记住 debug 的快捷键 程序员 • movq • 1 天前 • 最后回复来自 newaccount | 21 |\n| Deepseek 发布新模型 程序员 • johnsmith2077 • 22 小时 30 分钟前 • 最后回复来自 coolfan | 1 |\n| 前端开发 | 微信 前端开发 Chrome Vue.js 浏览器 React CSS Firefox Flutter Edge Angular Electron Web Dev Next.js Vite Nuxt.js Ionic |\n| 编程语言 | Python Java PHP Go 编程语言 JavaScript Node.js C++ Rust Swift HTML .NET C# Ruby on Rails TypeScript Ruby Kotlin Lua |\n| 后端架构 | 云计算 服务器 DNS MySQL NGINX Docker 数据库 Kubernetes Ubuntu Amazon Web Services Django Redis MongoDB DevOps Cloudflare Elasticsearch Flask Tornado API Timescale |\n| iOS | iDev iCode iMarketing iAd |",
        "summary": "新闻标题讨论了劳动节不翻译为劳工节或工人节的原因，新闻内容主要为技术论坛中的各类问题和讨论，涉及编程、AI、NAS、云计算、操作系统等技术话题。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "越南交易所岗位",
        "url": "https://www.v2ex.com/t/1129269",
        "source": "v2ex",
        "hot": 21,
        "time": "",
        "timestamp": 1746066524000,
        "desc": "越南公司紧急招募，公司主要做交易所，区块链\n包吃住\ngolang 开发\nweb 端工程师\n运维工程师\n运维精通 Python 开发及主流运维工具（如 K8S 、Ansible 、Jenkins 等），具备丰富的\n项目管理和跨团队协作能力。 工作经验丰富",
        "extracted_time": "2025-05-01T02:28:44+00:00",
        "content": "越南公司紧急招募，公司主要做交易所，区块链 包吃住 golang 开发 web 端工程师 运维工程师\n运维精通 Python 开发及主流运维工具（如 K8S 、Ansible 、Jenkins 等），具备丰富的 项目管理和跨团队协作能力。 工作经验丰富\n1\ndanhahaha 7 小时 15 分钟前 via iPhone 1\n是不是得先去柬埔寨中转\n|\n2\nthinkm 7 小时 13 分钟前 6\n骗子的亲妈不得善终\n|\n3\nsunziren 6 小时 37 分钟前 via Android\n为什么要做这种事？\n|\n4\nweb2320632844 OP @danhahaha 你咋不直接说去缅北呢？\n|\n5\nweb2320632844 OP @thinkm 嘴碎的亲妈不得善终\n|\n6\nweb2320632844 OP @sunziren 有毛病啊，正经的招聘\n|\n7\ntongbufu 5 小时 33 分钟前 via iPhone\n越南妹子是真的好\n天天嫖断屌了吧 |\n8\nfrankilla 5 小时 28 分钟前\n越南公司……\n|\n9\nfsdrw08 4 小时 19 分钟前 via Android\n必须 base 越南吗？\n|\n10\nkk2syc 3 小时 53 分钟前\n难怪最近总有人问去不去越南，地点不说，薪资不说，电话来了就是一句愿不愿意去越南\n|\n11\nNamelessRain 2 小时 41 分钟前\n别去千万别去 现在去越南都是割腰子换地方了\n|\n12\nyuanmomo 2 小时 36 分钟前 via iPhone\n我估计还认识这个团队的人\n|\n13\nweb2320632844 OP @tongbufu 来个帝王洗头套餐~\n|\n14\ncwxiaos 2 小时 25 分钟前 via iPhone\n一会长沙，一会儿东京，一会儿越南…\n|\n15\nweb2320632844 OP @NamelessRain 你是真敢想\n|\n16\nweb2320632844 OP @fsdrw08 对\n|\n17\nweb2320632844 OP @cwxiaos 猎头了\n|\n18\nweb2320632844 OP @kk2syc 在胡志明\n|\n19\nweb2320632844 OP @yuanmomo 认识就好 待遇咋样你知道的省的那些给我乱扣帽子\n|\n20\njiangzhaosen518 1 小时 51 分钟前\n@web2320632844：\n你们项目有需要远程 UI 设计么？ 2022 年及到 2024 年，一直参与设计项目：区块链、交易所、钱包、web3 、及 AI 涉及到客户：洛杉矶、纽约、澳洲、日本、菲律宾等 提供服务： UI 设计 、静态样式前端（ h5+div+css3+js ） 擅长： pc 端的----商城、交互、门户、及其他大型平台、系统量身定制 UI 设计、h5 移动端界面设计 、app （ 只设计） 技术： photo 、div+css(CSS 手写)，JS 特效、html 、Jquery 、d3.js 设计作品链接： https://ludesala.blogspot.com/ （ oversea 客户浏览） 有联系方式 上线案例： http://www.zefeigc.com 服务：UI 设计 +响应前端 https://www.aiznx.com 服务：UI 设计 +响应前端 https://payment.chainpaygo.com/ 服务：UI 设计 +响应前端 https://transformer.knn3.xyz/homepage 服务：UI 设计 +响应前端 联系方式： tg: @Yisitie777 vx : 191400619 |\n21\nShanky 1 小时 34 分钟前\n是正经工签出去吗?\ntg 上一堆类似的狗推卖人头的 |",
        "summary": "越南一家公司紧急招募交易所相关岗位，包括区块链、Golang开发、运维工程师等，但评论区出现质疑招聘信息真实性及工作条件的讨论。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "hacksider/Deep-Live-Cam",
        "url": "https://github.com/hacksider/Deep-Live-Cam",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "real time face swap and one-click video deepfake with only a single image\nLanguage: Python\nStars: 55378\nForks: 7949",
        "desc": "real time face swap and one-click video deepfake with only a single imageLanguage: PythonStars: 55378Forks: 7949",
        "summary": "该新闻介绍了一个名为Deep-Live-Cam的项目，支持实时换脸和一键生成视频深伪，仅需单张图像，使用Python语言开发，拥有大量星标和分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "patchy631/ai-engineering-hub",
        "url": "https://github.com/patchy631/ai-engineering-hub",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "In-depth tutorials on LLMs, RAGs and real-world AI agent applications.\nLanguage: Jupyter Notebook\nStars: 8760\nForks: 1469",
        "desc": "In-depth tutorials on LLMs, RAGs and real-world AI agent applications.Language: Jupyter NotebookStars: 8760Forks: 1469",
        "summary": "该新闻介绍了一个GitHub项目，提供关于大型语言模型（LLMs）、RAG（检索增强生成）和实际AI代理应用的深入教程，项目使用Jupyter Notebook，拥有8760个星标和1469个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "QwenLM/Qwen-Agent",
        "url": "https://github.com/QwenLM/Qwen-Agent",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Agent framework and applications built upon Qwen>=2.0, featuring Function Calling, Code Interpreter, RAG, and Chrome extension.\nLanguage: Python\nStars: 7450\nForks: 640",
        "desc": "Agent framework and applications built upon Qwen>=2.0, featuring Function Calling, Code Interpreter, RAG, and Chrome extension.Language: PythonStars: 7450Forks: 640",
        "summary": "Qwen-Agent是一个基于Qwen>=2.0的框架和应用，支持功能调用、代码解释器、RAG和Chrome扩展，使用Python语言，拥有7450个星标和640个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "QwenLM/Qwen3",
        "url": "https://github.com/QwenLM/Qwen3",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Qwen3 is the large language model series developed by Qwen team, Alibaba Cloud.\nLanguage: Shell\nStars: 19689\nForks: 1292",
        "desc": "Qwen3 is the large language model series developed by Qwen team, Alibaba Cloud.Language: ShellStars: 19689Forks: 1292",
        "summary": "Qwen3是由阿里云Qwen团队开发的一系列大型语言模型。该模型在GitHub上获得了大量关注，拥有19689个星标和1292个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "juspay/hyperswitch",
        "url": "https://github.com/juspay/hyperswitch",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "An open source payments switch written in Rust to make payments fast, reliable and affordable\nLanguage: Rust\nStars: 17073\nForks: 2010",
        "desc": "An open source payments switch written in Rust to make payments fast, reliable and affordableLanguage: RustStars: 17073Forks: 2010",
        "summary": "juspay/hyperswitch 是一个用 Rust 编写的开源支付开关，旨在使支付过程快速、可靠且经济实惠。该项目在 GitHub 上获得了 17073 个星标和 2010 个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "daytonaio/daytona",
        "url": "https://github.com/daytonaio/daytona",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code\nLanguage: TypeScript\nStars: 17403\nForks: 1812",
        "desc": "Daytona is a Secure and Elastic Infrastructure for Running AI-Generated CodeLanguage: TypeScriptStars: 17403Forks: 1812",
        "summary": "Daytona 是一个用于运行 AI 生成代码的安全且弹性的基础设施，该项目在 GitHub 上获得大量关注，拥有 17403 星标和 1812 个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "vllm-project/vllm",
        "url": "https://github.com/vllm-project/vllm",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "A high-throughput and memory-efficient inference and serving engine for LLMs\nLanguage: Python\nStars: 46341\nForks: 7188",
        "desc": "A high-throughput and memory-efficient inference and serving engine for LLMsLanguage: PythonStars: 46341Forks: 7188",
        "summary": "vllm是一个用于大语言模型（LLMs）的高性能、内存高效的推理和服务器引擎，使用Python编写，拥有大量星标和分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "simular-ai/Agent-S",
        "url": "https://github.com/simular-ai/Agent-S",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Agent S: an open agentic framework that uses computers like a human\nLanguage: Python\nStars: 3624\nForks: 362",
        "desc": "Agent S: an open agentic framework that uses computers like a humanLanguage: PythonStars: 3624Forks: 362",
        "summary": "Agent S是一个开源的智能代理框架，使用Python编写，旨在让计算机像人类一样工作。该项目在GitHub上获得了3624个星标和362个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "microsoft/generative-ai-for-beginners",
        "url": "https://github.com/microsoft/generative-ai-for-beginners",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "21 Lessons, Get Started Building with Generative AI 🔗 https://microsoft.github.io/generative-ai-for-beginners/\nLanguage: Jupyter Notebook\nStars: 81836\nForks: 41985",
        "desc": "21 Lessons, Get Started Building with Generative AI 🔗 https://microsoft.github.io/generative-ai-for-beginners/Language: Jupyter NotebookStars: 81836Forks: 41985",
        "summary": "微软推出了一个名为'generative-ai-for-beginners'的项目，包含21个课程，帮助初学者入门生成式AI的构建。该项目使用Jupyter Notebook格式，已在GitHub上获得大量关注。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "LadybirdBrowser/ladybird",
        "url": "https://github.com/LadybirdBrowser/ladybird",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Truly independent web browser\nLanguage: C++\nStars: 38049\nForks: 1578",
        "desc": "Truly independent web browserLanguage: C++Stars: 38049Forks: 1578",
        "summary": "LadybirdBrowser/ladybird 是一个用 C++ 编写的独立网络浏览器，该项目在 GitHub 上获得了 38049 个星标和 1578 个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "ml-explore/mlx-swift-examples",
        "url": "https://github.com/ml-explore/mlx-swift-examples",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Examples using MLX Swift\nLanguage: Swift\nStars: 1738\nForks: 214",
        "desc": "Examples using MLX SwiftLanguage: SwiftStars: 1738Forks: 214",
        "summary": "该新闻介绍了MLX Swift的示例项目，包含Swift语言代码，拥有1738个星标和214个分支。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "hiyouga/LLaMA-Factory",
        "url": "https://github.com/hiyouga/LLaMA-Factory",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Unified Efficient Fine-Tuning of 100+ LLMs & VLMs (ACL 2024)\nLanguage: Python\nStars: 48091\nForks: 5869",
        "desc": "Unified Efficient Fine-Tuning of 100+ LLMs & VLMs (ACL 2024)Language: PythonStars: 48091Forks: 5869",
        "summary": "该新闻介绍了一个名为hiyouga/LLaMA-Factory的项目，该项目实现了对100多个大型语言模型和视觉语言模型的统一高效微调，使用Python语言，已在GitHub上获得大量关注。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "AutoMQ/automq",
        "url": "https://github.com/AutoMQ/automq",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "AutoMQ is a stateless Kafka on S3. 10x Cost-Effective. No Cross-AZ Traffic Cost. Autoscale in seconds. Single-digit ms latency. Multi-AZ Availability.\nLanguage: Java\nStars: 6040\nForks: 404",
        "desc": "AutoMQ is a stateless Kafka on S3. 10x Cost-Effective. No Cross-AZ Traffic Cost. Autoscale in seconds. Single-digit ms latency. Multi-AZ Availability.Language: JavaStars: 6040Forks: 404",
        "summary": "AutoMQ是一个基于S3的无状态Kafka实现，具有高成本效益、自动扩展、低延迟和多区域可用性。该项目使用Java编写，在GitHub上获得大量关注。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "bitcoin/bitcoin",
        "url": "https://github.com/bitcoin/bitcoin",
        "source": "Github Trending",
        "hot": "",
        "time": "2025-05-01 17:48:58",
        "timestamp": 1746092938918,
        "published": "2025-05-01 17:48:58",
        "content": "Bitcoin Core integration/staging tree\nLanguage: C++\nStars: 83222\nForks: 37143",
        "desc": "Bitcoin Core integration/staging treeLanguage: C++Stars: 83222Forks: 37143",
        "summary": "新闻内容涉及Bitcoin Core的集成和开发信息，包括使用的编程语言C++以及项目的星标和分叉数量。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Apple violated antitrust ruling, judge finds",
        "url": "https://www.wsj.com/tech/apple-violated-antitrust-ruling-federal-judge-finds-66b85957",
        "source": "Hacker News 近期最佳",
        "hot": "",
        "time": "2025-05-01 00:03:55",
        "timestamp": 1746029035000,
        "published": "2025-05-01 00:03:55",
        "content": "Article URL: https://www.wsj.com/tech/apple-violated-antitrust-ruling-federal-judge-finds-66b85957\nComments URL: https://news.ycombinator.com/item?id=43852145\nPoints: 723\n# Comments: 266",
        "desc": "Article URL:https://www.wsj.com/tech/apple-violated-antitrust-ruling-federal-judge-finds-66b85957Comments URL:https://news.ycombinator.com/item?id=43852145Points: 723# Comments: 266",
        "summary": "A federal judge has ruled that Apple violated an antitrust ruling, likely related to its App Store practices.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "谷歌的 NotebookLM 能生成中文播客了",
        "url": "http://www.ruanyifeng.com/blog/2025/05/notebooklm.html",
        "source": "阮一峰的网络日志",
        "hot": "",
        "time": "2025-05-01 04:26:24",
        "timestamp": 1746044784000,
        "published": "2025-05-01 04:26:24",
        "content": "两天前，谷歌发了一个公告。\n它旗下的 AI 笔记产品 NotebookLM，现在支持50种语言生成播客了（原来只支持英文）。\n我一定要分享这个消息，终于能生成中文播客了。这是我一直想要的功能，相信也是很多朋友想要的。\n我演示一下，大家听听效果，会惊到你的。\n首先，访问它的官网，点开右上角的设置，选择\"Output Language\"（输出语言）。\n切换到\"中文（简体）\"。\n然后，在首页新建一个笔记本。一般来说，一个学习主题，对应一个笔记本。\n作为演示，我新建了一个\"中国小说\"的笔记本。进入后，在 Source（原始材料）标签页上传了鲁迅的《阿Q正传》。\n注意，上传的文件格式目前只限于 PDF、TXT 和 Markdown。\n另外，经过我测试，如果是图片扫描的 PDF 文件，它会自动进行文字识别。\n接着，切换到 Studio（工作室）标签页，点击 Generate（生成）按钮，它就开始生成播客。\n几分钟以后，播客就生成了，里面是一男一女在谈论你上传的资料。\nruanyf · 阿Q正傳\n大家听听看，是不是很像那些精心准备的真人播客。\nNotebookLM 不仅可以上传文本材料，还可以针对网站和 Youtube 视频，生成播客。\n我随便找了一个 Youtube 的英文视频，内容是国产旗舰手机的摄影能力比较。\n下面是生成的播客。\nruanyf · Vivo X200 Ultra 相机评测\n我听了以后，觉得都不必看视频了。而且，中文播客比英文视频，更容易抓住重点。\n总之，有了中文播客以后，任何枯燥的学习资料，都能变成平易近人的播客节目。走路、休息、锻炼、开车的时候都能听，学习时间和途径都变多了。\n需要注意的是，免费账户一天只能生成三个播客，更多需要付费。\n除了播客，NotebookLM 的 AI 笔记功能，也非常好用。\n你可以上传自己的学习材料，也可以用它搜索某个主题的学习材料。\n下面是我用它搜索 PostgreSQL 数据库的学习材料。\n指定学习材料以后，你可以跟这些材料聊天。\n它还会自动生成各种笔记：学习指导、内容摘要、常见问题、时间线等等。\n以上就是 NotebookLM 的基本用法。\n我的评价是，NotebookLM 是一款革命性的笔记工具，属于少数几个真正有重大用处的 AI 产品。\n它会改变做笔记的方式和学习方式，每个学习者都应该知道有这样一个工具。\n它属于谷歌的产品，似乎还没有竞品，希望国内的厂商能够做出替代品。\n（完）\n文档信息\n版权声明：自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）\n发表日期： 2025年5月 1日",
        "desc": "两天前，谷歌发了一个公告。...",
        "summary": "谷歌的NotebookLM现在支持50种语言生成播客，包括中文。用户可以通过上传文本、网站或YouTube视频生成类似真人主持的播客。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "ScienceOne正式发布：基于科学基础大模型的智能科研平台",
        "url": "https://www.jiqizhixin.com/articles/2025-05-01",
        "source": "机器之心",
        "hot": "",
        "time": "2025-05-01 08:12:32",
        "timestamp": 1746058352000,
        "published": "2025-05-01 08:12:32",
        "content": "文章库 | 机器之心 机器之心",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "一个月 78 块的 AI 日历，治好了我的「万事开头难」",
        "url": "http://www.geekpark.net/news/348924",
        "source": "极客公园",
        "hot": "",
        "time": "2025-05-01 01:24:57",
        "timestamp": 1746033897000,
        "published": "2025-05-01 01:24:57",
        "content": "作者 | Li Yuan\n编辑 | 郑玄\n你有没有一件事，因为做起来太麻烦，拖到一直都不想开始？\n好吧，笔者承认，我有这个问题。这也是笔者自从拥有智能手机以来，一直在不断尝试各种日程管理和 To-do List 应用的原因。\n不过笔者很快就发现，对于一个擅长规划的人而言，似乎只用一个日历，也已经能很好地规划自己的工作了。而对于一个本来就讨厌规划的人而言，添加任务，添加截止日期，添加子任务，添加截止日期，分配优先级，本身就是一项令人头疼到不想开始的事情。\n于是，我和日程软件的关系，最后变得很像一对怨偶——只有任务变得又紧急又多又重要的时候，我才会鼓起勇气，把一件一件任务登记到软件里，设置好截止日期和提醒时间。而只要能够稍得喘息，我就永远想不起来打开这个软件。\n而如果一件事情虽然重要，比如我知道我想学习拳击，但是这件事并不十分紧急，对我来说又很麻烦——又要去买装备又要去对比课程，哪个 To-do List 也很难帮我开启这一任务。\n作为一个日程管理 app 的资深用户，笔者本来已经对这个「老怨偶」不再抱有太多期望了。大多数 To-do List 的软件，功能都大同小异，区别无非是 UI 和使用上的繁琐程度。\n不过，最近，机缘巧合之下，笔者发现了一款 AI-native 的日程管理软件，让我突然眼前一亮。\n日程管理领域，早已有一整套成熟完整的理论体系，无论是「重要 vs 紧急」四象限理论、番茄工作法、还是 GTD 理论，都早在上世纪就已经被提出。而这款软件，却在这样一个「历史悠久、创新稀少」的领域中，依然借助 AI 做出了突破，甚至意外地，在我的日常生活里真正起到了点作用。\nAI-native 的日程软件长什么样？\n笔者是在小红书最开始发现了这款软件。\n名叫 Splitti，这款由国外独立开发者设计的日程管理软件，最先在 ADHD 社群中有了小范围的传播——ADHD 人群注意力不集中，因此对于日程管理软件本身的需求，也相对比较旺盛。\n而这款 app，主打的是能够使用 AI，帮助 ADHD 人群，更快地启动任务和安排生活。\n一打开这个 app，我就感受到了这个软件的与众不同之处。\n作为日程软件的老用户，笔者已经对日程软件的界面十分熟悉——一般不是一个日历，就是一个任务添加界面。\n而打开 Splitti，则很不一样——你被要求写一段自我介绍，让 AI 更好地了解你。\n不明所以，笔者填写了几个关键信息：「Li Yuan、女、科技作者、INTP」，并填写了一个规划痛点「养猫，猫会打扰我的工作。」\n接下来，出乎笔者的意料，app 马上根据笔者输入的内容，生成了一段非常长的对笔者个人的情况分析，包括「注意她可能喜欢深度专注，应该在交流中增加智识性内容。」等等。并马上提出了三个追问问题，包括「在做科技作者的过程中，你遇到的最大挑战是什么？」\n这种体验确实是在 AI 时代之前难以想象的。软件并不像之前的日程软件一样，提供的是一个标准化的工具体验，而更像一个真正的私人教练，在接触中，会选择先了解你的情况。\n而在获得笔者的私人情况后，Splitti 开始建议笔者增加一条新任务。\n任务可以直接用自然语言，甚至语音输入，直接输入关于这条任务，我的所有思考就可以了。\n接下来，AI 则根据它对我，和对人物的理解，直接将这个任务分成了多个子任务。\n除了分解任务之外，笔者还惊喜地发现，AI 已经为我的每个任务，规划了一个大概能完成的时间，并给他们自动设置了截止日期。\n每一个子任务，如果过于抽象，还可以点击，再次进行任务分解。比如「找到拳击课程」可以进一步拆解为「在网上调研」，「在线下调研」，「阅读评论」，「给场馆打电话」，「列出不同场馆的对比」。\n在任务被拆解到足够细之后，即使是启动困难的人，似乎也有了可以开始的动力。而 Splitti 正是用 AI 为用户垫好了这关键的一步。\n甚至在深度使用中，笔者发现， 这样的任务拆解，甚至是根据个人使用定制化的——在笔者添加了一个写作任务之后， AI 进行任务拆解时，会单独拆解出一条任务：请寻找一个合适的工作环境，尽量免受猫咪打扰。\n使用越多，把自己的需求和困惑向 AI 讲解地越明确，AI 就会生成一个越完美的私人定制规划。\n笔者还惊喜地发现，AI 能做的还不仅如此。\nAI 还能为我的任务生成经典的「重要 vs 紧急」四象限图。在得知我是一个科技作者后，AI 自动把我列出的「撰写一个机器人方向稿件」列入了重要且紧急的象限中，而把寻找拳击场馆列入了不那么重要且不紧急的象限中，并在下面给出了自己的原因。\n在添加多条任务后，AI 还可以根据添加的任务，直接帮你规划出日程安排，重要紧急事项靠前，而不那么紧急的事项靠后。甚至还加入了一些不完全符合中国水土的考量——AI 把工作事项都尽量安排在了每天晚上五点之前，五点之后安排了健身和娱乐。\n甚至除了传统的日程软件的功能之外，Splitti 还会提供对于添加任务的分析——事业方向的任务过多了，也需要多安排一些朋友聚会；当日的情绪疏导——用户可以选择不同的 AI 导师，从幽默风趣型的，到正念冥想型的；还可以收到针对用户定制化的通知——Yuan，你想要力量的话，就应该赶紧来挑拳击设备了！\n笔者第一次感觉到 AI-Native 的应用的魅力。\n相比于传统 To-do List 软件，用户所需要付出的努力非常少，只需要用「人话」把自己想做的事，想长期实现的目标简单说一遍，而获得的体验，却是完全翻倍的。\n相比于传统更像「电子化日历」的应用，Splitti 更像是一个能听懂人话、但比人类更强的助手——它不会遗漏细节，也不会被复杂的规划问题搞得头疼。\n对人来说，添加一项新任务，往往意味着整个日程都需要重新调整：要重新评估每项任务的重要性和紧急性，考虑购物是否安排在促销日，健身是否避开生理期，最后才能决定新任务的最佳插入点。\n但对 AI 而言，这一切只需一秒，整个日程就能被即时、自动、合理地重新安排。\nAI-Native App 的一种新思路：不同档位 AI 进行不同定价\nSplitti 的另一个有趣之处，是它尝试了一种完全 AI-Native 的定价方式。\n通常情况下，To-do List App 有自己的一套定价方式。\n以 2013–2014 年就已推出的知名应用滴答清单为例，目前采用「免费+付费解锁高级功能」的模式：免费用户可以使用基础的日历视图，并创建有限数量的清单和任务；而成为高级会员后，才能解锁如持续提醒、时间段设置、高级数据统计、更大的任务和清单容量等功能。\n这样的定价策略，反映了传统的日程软件的电子工具属性——免费用户只能使用不那么好用的工具，而付费用户，则可以获得更强大的工具。\n而 Splitti 在这点上，设计理念是完全不同的。\n虽然 Splitti 的不同付费档位也存在一定的功能差异，但它的核心定价逻辑，并不在于「能用多少功能」，而在于「用的是哪种 AI」。\n免费用户几乎可以使用与付费用户相同的功能，但调用的是被称为「简单 AI 」的基础模型。中档付费用户则可以获得「更智能的 AI」，而最高档位的用户，使用的则是 Splitti 提供的「最先进的 AI」。\n在功能层面，最高档付费用户获得的也并不是更多的工具选项，而是更深度的 AI 交互权限——他们可以更频繁地与 AI 沟通，提出更复杂的请求，享受更个性化、更智能的任务规划体验。\n对 Splitti 来说，贵的不是功能多，而是你可以「更多地跟更聪明的大脑对话」。\n作为一个小众 app，这样的定价方式是不是能够获得接受还不明确，不过笔者在美区的 app 评论下，找到了一个有趣的评价：\n「我用了二十年的手机，这是我人生中第一次留下应用评论。我之所以写这条评论，是因为我觉得这个 App 对像我这样的人来说简直是救星。我有决策瘫痪、注意力缺陷障碍（ADHD），总是对生活感到极度压力大、难以招架。过去，我曾是个高效能人士，但自从有了孩子，加上每天被各种紧急事务压得喘不过气来，我的生活节奏彻底被打乱了。过去两年我几乎是在痛苦中熬过来的。\n我曾考虑过请一位生活教练，希望有人能帮助我找回动力、重新接触我热爱的事情，同时也帮我理清思路、保持条理。然而，当我得知报价在 6000 到 7000 美元之间时，我意识到这条路对我来说并不可行。\n我知道自己非常需要那种「有个人真正关心我、会问我怎么了、会追问细节、会提出前进建议」的帮助。所以我开始寻找带有 AI 辅助的任务管理工具，尝试了大概四款，最终选择了这一个。\n它真的非常棒，我目前还没有用完所有功能，但已经印象深刻。当然，它还有一些 bug 和小问题需要完善，毕竟这款应用还比较新。但我真的很认可他们的思路，也希望借由这条评论表达我的感谢，并为他们的成长和改进贡献一份力量。\n谢谢你们！」\n当用户真的能够将 app 与 life coach（生活教练）这样的服务开始对比的时候，或许 Splitti 已经成功了一半了。\nAI 时代的软件开发——或许从 Day One 就可以跨国\n相信读者或许注意到了，在本文的配图中，Splitti 的软件中，有时文字是中文，而有时文字是英文。\n这或许也是下一个时代的 AI 应用中，非常有趣的一点。\n在上一个时代中，如果想做出非常好的应用出海，翻译和本地化是非常重要的一点。而对于新时代的 AI 应用而言，却不一定完全如此。\n笔者在第一次使用 Splitti 的时候，使用的是 Splitti 的英文版本软件 。然而从一开始，笔者输入的个人简介，就是全中文输入。而在 AI 时代，这并没有任何影响。\n软件背后的 AI，认识每一种语言，虽然前端使用了英文提示，但无论你输入的是哪种小众的语言，并不会影响 AI 的核心功能，AI 仍然能我把任务进行成功分解，进行规划。\n对于应用出海而言，现在或许是前所未有的好时机。\n不过同时，用 AI 开发应用，也仍然存在许多不稳定性。\nSplitti 的评论中，也有不少评论都在批评软件的 bug。\n这与软件本身由两位独立开发者开发有关。作为一项准日程工具，Splitti 在功能上极其全面。不仅具有 AI 分解任务，AI 规划日程，AI 陪伴提醒这样的创新功能，还具备了比如「重要 vs 紧急」四象限、番茄钟、任务分析、白噪音冥想等一系列传统日程软件可能要付费获得，或者不会全面实现的功能。显然两位独立开发者的野心过于庞大，导致软件仍有不少 bug 影响使用。\n而同时，部分原因也仍然根植于 AI 应用开发无法绕开的 AI 本身的局限性中。\n如前面所提到，AI 本身虽然能读懂中文，有时候 AI 会选择用英文帮我分解任务，有时 AI 会选择用中文帮我分解任务，这完全无法预料。\n而在一些评论中，还有用户提到，有时 AI 设置的截止时间不对，用户手动调整时间的时候，AI 会忽略用户调整的时间，按照自己生成的截止时间规划日程。\n经过精调后，这些问题并非不可解决，不过对于新时代的 AI 开发者而言，要不断面临 AI 带来的未知性，将是一项永久的功课。\nAI 应用从卖生成能力走向卖推理能力\n在 Splitti 身上，笔者也看见了 AI 应用的未来。\n过去我们所熟悉的 AI，多是依赖其生成能力：生成对话，提供情绪价值；或者用来进行文字总结、润色，提升一定程度的生产力。但这些应用的核心，仍然是「生成内容」。\n而随着 OpenAI 的 o 系列、DeepSeek R1 等推理模型的逐步成型，AI 的「智力」实现了真正意义上的飞跃。我们终于可以开始依赖 AI，去完成那些过去对人类来说既繁琐又困难的任务——需要进行多个维度的考量最后做出判断的任务。\nSplitti 的特别并不在于它重新定义了日程工具的呈现方式，而在于它将任务分解、长期规划、日程安排——这些对人类来说难度较高的工作，交由 AI 处理。\n它不是在用户规划之后，用更漂亮的方式「重写」内容，而是从根本上，使用了 AI 的「大脑」来代替人类进行逻辑思考和规划。\n表面上，Splitti 似乎只是优化了交互方式——用户可以用自然语言来安排日程，使用体验更舒适；但实质上，它真正改变的是交付的内容：用户需要做的越来越少，而 AI 能承担的越来越多。\n这样的变化，正在各个行业发生。\n比如在 极客公园的采访 中，猿辅导的硬件负责人提到：在推理模型出现之前，AI 主要被用来解题和扩充题库，依赖的仍是生成能力。而现在，小猿 AI 会将用户的数据直接交给 AI，由它来判断用户不理解的知识点，并安排接下来的学习任务——这正是推理能力的体现。\n旅游行业也有类似趋势。生成旅行规划在 2023 年就已成为 AI 应用的重点方向之一。但当时的产品更多是重新包装网络信息，充其量告诉用户某地有哪些景点、评分如何。而进入推理时代，我们有望看到 AI 真正「理解人类」，为用户制定出合理而个性化的行程规划。\nAI 时代就是如此。看似没有太多变化，但实际已经走过沧海桑田。前一年 AI 能力尚不足以完成的，今年或许就可以了。\n我们曾一度觉得 AI 像是个「情商高、但做事不太靠谱」的搭子——擅长聊天、擅长安慰，却难以真正承担任务。\n而从今年开始，随着推理模型的成熟，这种印象或许将被颠覆：AI 的面孔开始更像一个智商高、逻辑缜密、执行力强的勤勉高管，能独立完成任务，也能做出判断和规划。\n*头图来源 ：AI 生成\n本文为极客公园原创文章，转载请联系极客君微信 geekparkGO",
        "desc": "作者 | Li Yuan编辑 | 郑玄你有没有一件事，因为做起来太麻烦，拖到一直都不想开始？好吧，笔者承认，我有这个问题。这也是笔者自从拥有智能手机以来，一直在不断尝试各种日程管理和 To-do List 应用的原因。不过笔者很快就发现，对于一个擅长规划的人而言，似乎只用一个日历，也已经能很好地规划自己的工作了。而对于一个本来就讨厌规划的人而言，添加任务，添加截止日期，添加子任务，添加截止日期，分配优先级，本身就是一项令人头疼到不想开始的事情。于是，我和日程软件的关系，最后变得很像一对怨偶——只有任务变得又紧急又多又重要的时候，我才会鼓起勇气，把一件一件任务登记到软件里，设置好截止日期和提醒时间。而只要能够稍得喘息，我就永远想不起来打开这个软件。而如果一件事情虽然重要，比如我知道我想学习拳击，但是这件事并不十分紧急，对我来说又很麻烦——又要去买装备又要去对比课程，哪个 To-do List 也很难帮我开启这一任务。作为一个日程管理 app 的资深用户，笔者本来已经对这个「老怨偶」不再抱有太多期望了。大多数 To-do List 的软件，功能都大同小异，区别无非是 UI 和使用上的繁琐程度。不过，最近，机缘巧合之下，笔者发现了一款 AI-native 的日程管理软件，让我突然眼前一亮。日程管理领域，早已有一整套成熟完整的理论体系，无论是「重要 vs 紧急」四象限理论、番茄工作法、还是 GTD 理论，都早在上世纪就已经被提出。而这款软件，却在这样一个「历史悠久、创新稀少」的领域中，依然借助 AI 做出了突破，甚至意外地，在我的日常生活里真正起到了点作用。AI-native 的日程软件长什么样？笔者是在小红书最开始发现了这款软件。名叫 Splitti，这款由国外独立开发者设计的日程管理软件，最先在 ADHD 社群中有了小范围的传播——ADHD 人群注意力不集中，因此对于日程管理软件本身的需求，也相对比较旺盛。而这款 app，主打的是能够使用 AI，帮助 ADHD 人群，更快地启动任务和安排生活。一打开这个 app，我就感受到了这个软件的与众不同之处。作为日程软件的老用户，笔者已经对日程软件的界面十分熟悉——一般不是一个日历，就是一个任务添加界面。而打开 Splitti，则很不一样——你被要求写一段自我介绍，让 AI 更好地了解你。不明所以，笔者填写了几个关键信息：「Li Yuan、女、科技作者、INTP」，并填写了一个规划痛点「养猫，猫会打扰我的工作。」接下来，出乎笔者的意料，app 马上根据笔者输入的内容，生成了一段非常长的对笔者个人的情况分析，包括「注意她可能喜欢深度专注，应该在交流中增加智识性内容。」等等。并马上提出了三个追问问题，包括「在做科技作者的过程中，你遇到的最大挑战是什么？」这种体验确实是在 AI 时代之前难以想象的。软件并不像之前的日程软件一样，提供的是一个标准化的工具体验，而更像一个真正的私人教练，在接触中，会选择先了解你的情况。而在获得笔者的私人情况后，Splitti 开始建议笔者增加一条新任务。任务可以直接用自然语言，甚至语音输入，直接输入关于这条任务，我的所有思考就可以了。接下来，AI 则根据它对我，和对人物的理解，直接将这个任务分成了多个子任务。除了分解任务之外，笔者还惊喜地发现，AI 已经为我的每个任务，规划了一个大概能完成的时间，并给他们自动设置了截止日期。每一个子任务，如果过于抽象，还可以点击，再次进行任务分解。比如「找到拳击课程」可以进一步拆解为「在网上调研」，「在线下调研」，「阅读评论」，「给场馆打电话」，「列出不同场馆的对比」。在任务被拆解到足够细之后，即使是启动困难的人，似乎也有了可以开始的动力。而 Splitti 正是用 AI 为用户垫好了这关键的一步。甚至在深度使用中，笔者发现，这样的任务拆解，甚至是根据个人使用定制化的——在笔者添加了一个写作任务之后， AI 进行任务拆解时，会单独拆解出一条任务：请寻找一个合适的工作环境，尽量免受猫咪打扰。使用越多，把自己的需求和困惑向 AI 讲解地越明确，AI 就会生成一个越完美的私人定制规划。笔者还惊喜地发现，AI 能做的还不仅如此。AI 还能为我的任务生成经典的「重要 vs 紧急」四象限图。在得知我是一个科技作者后，AI 自动把我列出的「撰写一个机器人方向稿件」列入了重要且紧急的象限中，而把寻找拳击场馆列入了不那么重要且不紧急的象限中，并在下面给出了自己的原因。在添加多条任务后，AI 还可以根据添加的任务，直接帮你规划出日程安排，重要紧急事项靠前，而不那么紧急的事项靠后。甚至还加入了一些不完全符合中国水土的考量——AI 把工作事项都尽量安排在了每天晚上五点之前，五点之后安排了健身和娱乐。甚至除了传统的日程软件的功能之外，Splitti 还会提供对于添加任务的分析——事业方向的任务过多了，也需要多安排一些朋友聚会；当日的情绪疏导——用户可以选择不同的 AI 导师，从幽默风趣型的，到正念冥想型的；还可以收到针对用户定制化的通知——Yuan，你想要力量的话，就应该赶紧来挑拳击设备了！笔者第一次感觉到 AI-Native 的应用的魅力。相比于传统 To-do List 软件，用户所需要付出的努力非常少，只需要用「人话」把自己想做的事，想长期实现的目标简单说一遍，而获得的体验，却是完全翻倍的。相比于传统更像「电子化日历」的应用，Splitti 更像是一个能听懂人话、但比人类更强的助手——它不会遗漏细节，也不会被复杂的规划问题搞得头疼。对人来说，添加一项新任务，往往意味着整个日程都需要重新调整：要重新评估每项任务的重要性和紧急性，考虑购物是否安排在促销日，健身是否避开生理期，最后才能决定新任务的最佳插入点。但对 AI 而言，这一切只需一秒，整个日程就能被即时、自动、合理地重新安排。AI-Native App 的一种新思路：不同档位 AI 进行不同定价Splitti 的另一个有趣之处，是它尝试了一种完全 AI-Native 的定价方式。通常情况下，To-do List App 有自己的一套定价方式。以 2013–2014 年就已推出的知名应用滴答清单为例，目前采用「免费+付费解锁高级功能」的模式：免费用户可以使用基础的日历视图，并创建有限数量的清单和任务；而成为高级会员后，才能解锁如持续提醒、时间段设置、高级数据统计、更大的任务和清单容量等功能。这样的定价策略，反映了传统的日程软件的电子工具属性——免费用户只能使用不那么好用的工具，而付费用户，则可以获得更强大的工具。而 Splitti 在这点上，设计理念是完全不同的。虽然 Splitti 的不同付费档位也存在一定的功能差异，但它的核心定价逻辑，并不在于「能用多少功能」，而在于「用的是哪种 AI」。免费用户几乎可以使用与付费用户相同的功能，但调用的是被称为「简单 AI 」的基础模型。中档付费用户则可以获得「更智能的 AI」，而最高档位的用户，使用的则是 Splitti 提供的「最先进的 AI」。在功能层面，最高档付费用户获得的也并不是更多的工具选项，而是更深度的 AI 交互权限——他们可以更频繁地与 AI 沟通，提出更复杂的请求，享受更个性化、更智能的任务规划体验。对 Splitti 来说，贵的不是功能多，而是你可以「更多地跟更聪明的大脑对话」。作为一个小众 app，这样的定价方式是不是能够获得接受还不明确，不过笔者在美区的 app 评论下，找到了一个有趣的评价：「我用了二十年的手机，这是我人生中第一次留下应用评论。我之所以写这条评论，是因为我觉得这个 App 对像我这样的人来说简直是救星。我有决策瘫痪、注意力缺陷障碍（ADHD），总是对生活感到极度压力大、难以招架。过去，我曾是个高效能人士，但自从有了孩子，加上每天被各种紧急事务压得喘不过气来，我的生活节奏彻底被打乱了。过去两年我几乎是在痛苦中熬过来的。我曾考虑过请一位生活教练，希望有人能帮助我找回动力、重新接触我热爱的事情，同时也帮我理清思路、保持条理。然而，当我得知报价在 6000 到 7000 美元之间时，我意识到这条路对我来说并不可行。我知道自己非常需要那种「有个人真正关心我、会问我怎么了、会追问细节、会提出前进建议」的帮助。所以我开始寻找带有 AI 辅助的任务管理工具，尝试了大概四款，最终选择了这一个。它真的非常棒，我目前还没有用完所有功能，但已经印象深刻。当然，它还有一些 bug 和小问题需要完善，毕竟这款应用还比较新。但我真的很认可他们的思路，也希望借由这条评论表达我的感谢，并为他们的成长和改进贡献一份力量。谢谢你们！」当用户真的能够将 app 与 life coach（生活教练）这样的服务开始对比的时候，或许 Splitti 已经成功了一半了。AI 时代的软件开发——或许从 Day One 就可以跨国相信读者或许注意到了，在本文的配图中，Splitti 的软件中，有时文字是中文，而有时文字是英文。这或许也是下一个时代的 AI 应用中，非常有趣的一点。在上一个时代中，如果想做出非常好的应用出海，翻译和本地化是非常重要的一点。而对于新时代的 AI 应用而言，却不一定完全如此。笔者在第一次使用 Splitti 的时候，使用的是 Splitti 的英文版本软件。然而从一开始，笔者输入的个人简介，就是全中文输入。而在 AI 时代，这并没有任何影响。软件背后的 AI，认识每一种语言，虽然前端使用了英文提示，但无论你输入的是哪种小众的语言，并不会影响 AI 的核心功能，AI 仍然能我把任务进行成功分解，进行规划。对于应用出海而言，现在或许是前所未有的好时机。不过同时，用 AI 开发应用，也仍然存在许多不稳定性。Splitti 的评论中，也有不少评论都在批评软件的 bug。这与软件本身由两位独立开发者开发有关。作为一项准日程工具，Splitti 在功能上极其全面。不仅具有 AI 分解任务，AI 规划日程，AI 陪伴提醒这样的创新功能，还具备了比如「重要 vs 紧急」四象限、番茄钟、任务分析、白噪音冥想等一系列传统日程软件可能要付费获得，或者不会全面实现的功能。显然两位独立开发者的野心过于庞大，导致软件仍有不少 bug 影响使用。而同时，部分原因也仍然根植于 AI 应用开发无法绕开的 AI 本身的局限性中。如前面所提到，AI 本身虽然能读懂中文，有时候 AI 会选择用英文帮我分解任务，有时 AI 会选择用中文帮我分解任务，这完全无法预料。而在一些评论中，还有用户提到，有时 AI 设置的截止时间不对，用户手动调整时间的时候，AI 会忽略用户调整的时间，按照自己生成的截止时间规划日程。经过精调后，这些问题并非不可解决，不过对于新时代的 AI 开发者而言，要不断面临 AI 带来的未知性，将是一项永久的功课。AI 应用从卖生成能力走向卖推理能力在 Splitti 身上，笔者也看见了 AI 应用的未来。过去我们所熟悉的 AI，多是依赖其生成能力：生成对话，提供情绪价值；或者用来进行文字总结、润色，提升一定程度的生产力。但这些应用的核心，仍然是「生成内容」。而随着 OpenAI 的 o 系列、DeepSeek R1 等推理模型的逐步成型，AI 的「智力」实现了真正意义上的飞跃。我们终于可以开始依赖 AI，去完成那些过去对人类来说既繁琐又困难的任务——需要进行多个维度的考量最后做出判断的任务。Splitti 的特别并不在于它重新定义了日程工具的呈现方式，而在于它将任务分解、长期规划、日程安排——这些对人类来说难度较高的工作，交由 AI 处理。它不是在用户规划之后，用更漂亮的方式「重写」内容，而是从根本上，使用了 AI 的「大脑」来代替人类进行逻辑思考和规划。表面上，Splitti 似乎只是优化了交互方式——用户可以用自然语言来安排日程，使用体验更舒适；但实质上，它真正改变的是交付的内容：用户需要做的越来越少，而 AI 能承担的越来越多。这样的变化，正在各个行业发生。比如在极客公园的采访中，猿辅导的硬件负责人提到：在推理模型出现之前，AI 主要被用来解题和扩充题库，依赖的仍是生成能力。而现在，小猿 AI 会将用户的数据直接交给 AI，由它来判断用户不理解的知识点，并安排接下来的学习任务——这正是推理能力的体现。旅游行业也有类似趋势。生成旅行规划在 2023 年就已成为 AI 应用的重点方向之一。但当时的产品更多是重新包装网络信息，充其量告诉用户某地有哪些景点、评分如何。而进入推理时代，我们有望看到 AI 真正「理解人类」，为用户制定出合理而个性化的行程规划。AI 时代就是如此。看似没有太多变化，但实际已经走过沧海桑田。前一年 AI 能力尚不足以完成的，今年或许就可以了。我们曾一度觉得 AI 像是个「情商高、但做事不太靠谱」的搭子——擅长聊天、擅长安慰，却难以真正承担任务。而从今年开始，随着推理模型的成熟，这种印象或许将被颠覆：AI 的面孔开始更像一个智商高、逻辑缜密、执行力强的勤勉高管，能独立完成任务，也能做出判断和规划。*头图来源 ：AI 生成本文为极客公园原创文章，转载请联系极客君微信 geekparkGO",
        "summary": "文章介绍了一款名为Splitti的AI日程管理软件，该软件通过AI技术帮助用户更高效地管理任务和日程，尤其对ADHD人群有帮助。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "DeepSeek 发布 Prover-V2 模型；小米首个推理大模型开源；饿了么宣布超百亿补贴加入外卖战局",
        "url": "http://www.geekpark.net/news/348950",
        "source": "极客公园",
        "hot": "",
        "time": "2025-05-01 01:09:56",
        "timestamp": 1746032996000,
        "published": "2025-05-01 01:09:56",
        "content": "DeepSeek 发布 Prover-V2 模型，参数量达 6710 亿\n4 月 30 日消息，DeepSeek 于 AI 开源社区 Hugging Face 上发布了一个名为 DeepSeek-Prover-V2-671B 的新模型。\n据悉，DeepSeek-Prover-V2-671B 使用了更高效的 safetensors 文件格式，并支持多种计算精度，方便模型更快、更省资源地训练和部署，参数达 6710 亿，或为去年发布的 Prover-V1.5 数学模型升级版本。在模型架构上，该模型使用了 DeepSeek-V3 架构，采用 MoE（混合专家）模式，具有 61 层 Transformer 层，7168 维隐藏层。同时支持超长上下文，最大位置嵌入达 16.38 万，使其能处理复杂的数学证明，并且采用了 FP8 量化，可通过量化技术减小模型大小，提高推理效率。（来源：新浪科技）\n小米开源「Xiaomi MiMo」大模型：为推理而生，以 7B 参数超越 OpenAI o1-mini\n4 月 30 日消息，小米大模型团队通过「Xiaomi MiMo」公众号宣布，小米开源首个「为推理而生」的大模型 Xiaomi MiMo，联动预训练到后训练，全面提升推理能力。据介绍，MiMo 是来自全新成立不久的「小米大模型 Core 团队」的初步尝试。\n在数学推理（AIME 24-25）和代码竞赛（LiveCodeBench v5）公开测评集上，MiMo 仅用 7B 的参数规模，超越了 OpenAI 的闭源推理模型 o1-mini 和阿里 Qwen 更大规模的开源推理模型 QwQ-32B-Preview。\n官方表示，MiMo 推理能力的提升，由预训练和后训练阶段中数据和算法等多层面的创新联合驱动，包括：\n预训练：核心是让模型见过更多推理模式\n数据：着重挖掘富推理语料，并合成约 200B tokens 推理数据。\n训练：进行了三阶段训练，逐步提升训练难度，总训练 25T tokens。\n后训练：核心是高效稳定的强化学习算法和框架\n算法：提出 Test Difficulty Driven Reward 来缓解困难算法问题中的奖励稀疏问题，并引入 Easy Data Re-Sampling 策略，以稳定 RL 训练。\n框架：设计了 Seamless Rollout 系统，使得 RL 训练加速 2.29 倍，验证加速 1.96 倍。（来源：IT 之家）\n可生成 AI 播客：谷歌 NotebookLM 音频概览功能新增 76 种语言支持，包含中文\n4 月 30 日消息，谷歌宣布其基于人工智能的笔记和研究助手工具 NotebookLM 的「音频概览（Audio Overviews）」功能新增 76 种语言支持。该功能于去年推出，旨在通过人工智能虚拟主持人根据用户上传到 NotebookLM 的文档（如课程阅读材料或法律摘要）生成播客，帮助用户以另一种方式理解和消化文档中的信息。\n谷歌表示，此前「音频概览」功能仅支持用户账户所设置的首选语言。如今，公司新增了「输出语言」选项，用户可以自由选择生成「音频概览」的语言。谷歌强调，用户可以随时更改语言设置，这样就能根据需要轻松创建多语言内容或学习材料。\n谷歌在一篇博客文章中举例说明了这一功能的实用性：「例如，一位准备关于亚马逊雨林课程的教师可以与学生共享多种语言的资源，比如葡萄牙语纪录片、西班牙语研究报告和英语学习报告。学生们可以将这些资料上传到 NotebookLM，并在他们偏好的语言中生成关键要点的音频概览。」（来源：IT 之家）\nMeta 公布 2025 财年第 1 财季财报：营收 423.14 美元，同比增长 16%\n5 月 1 日消息，Meta 公司4 月 30 日发布博文，公布了 2025 财年第 1 财季（截至 3 月 31 日）的财报业绩，营收达到 423.14 亿美元，同比增长 16%；净利润 166.44 亿美元，同比增长 35%。\nMeta 在 2025 财年第 1 财季交出了一份亮眼的成绩单。总营收达到 423.14 亿美元（IT 之家注：现汇率约合 3078.03 亿元人民币），较去年同期的 364.55 亿美元增长 16%，若按固定汇率计算，增长率更是高达 19%。\n净利润从去年的 123.69 亿美元跃升至 166.44 亿美元（现汇率约合 1210.73 亿元人民币），增幅达 35%；每股摊薄收益（EPS）从 4.71 美元提升至 6.43 美元，增长 37%；运营利润为 175.55 亿美元，同比增长 27%，运营利润率从 38% 提升至 41%。\nMeta 旗下应用家族（Family of Apps）的日活跃用户（DAP）平均达 34.3 亿，同比增长 6%；广告曝光量（Ad Impressions）同比增长 5%，每条广告平均价格上涨 10%，推动广告收入达到 413.92 亿美元，占总营收的绝大部分。\nMeta AI 的月活跃用户接近 10 亿，显示其在人工智能领域的快速布局。此外，公司现金流表现强劲，经营活动现金流为 240.26 亿美元，自由现金流为 103.34 亿美元，现金及有价证券总额达 702.3 亿美元。（来源：IT 之家）\n微软第三季度营收 700.7 亿美元，高于市场预期\n微软第三季度营收 700.7 亿美元，预估 684.8 亿美元；第三季度每股收益 3.46 美元；第三季度智能云业务营收 268 亿美元，预估 259.9 亿美元；第三财季云营收 424 亿美元，分析师预期 422.2 亿美元；第三财季 Azure 增长对人工智能（AI）业务贡献 16 个百分点，分析师预期公司 15.6 个百分点。美股盘后涨超 6%。（来源：新浪科技）\n苹果加速印度布局，塔塔 / 富士康新工厂被曝组装生产 iPhone 16e 等机型\n4 月 30 日消息，路透社 4 月 29 日发布博文，报道称苹果公司在印度南部的两家新工厂已启动生产。其中一家由塔塔电子（Tata Electronics）运营的工厂已开始生产老款 iPhone，而另一家由富士康（Foxconn）建设的工厂将在 5 月启动发货。\nIT 之家援引博文介绍，位于印度南部泰米尔纳德邦霍苏尔（Hosur）的塔塔电子新工厂已于近日投产，首批生产线专注于生产老款 iPhone 型号。\n而富士康在卡纳塔克邦班加罗尔投资 26 亿美元建设的新工厂，也将在数日内启动首条生产线。\n据悉，该工厂每小时可生产 300 至 500 台 iPhone，首批产品包括 iPhone 16 和 16e 型号。消息人士透露，该富士康工厂预计在 2027 年 12 月全面建成，届时将创造约 5 万个就业机会。（来源：IT 之家）\n消息称宁德时代拟下月在港上市，或成四年来最大规模新股发行\n4 月 30 日消息，据路透社援引两位知情人士消息称，电池制造巨头宁德时代计划于下月启动在香港的上市程序，预计将成为该市四年来规模最大的股票发行。\n消息人士称，此次交易的建簿过程——即邀请投资者对股权发行进行投标的过程，预计将于 5 月 12 日起始的一周开始。此前另有知情人士透露，此次发行可能筹集至少 50 亿美元（IT 之家注：现汇率约合 363.71 亿元人民币）。\n宁德时代未立即回应置评请求。\n其中一位消息人士补充说，宁德时代建簿的规模和时间可能会发生变化。\n报道称，宁德时代此次登陆港股将成为近 4 年香港规模最大的一次上市。2021 年，快手通过首次公开募股筹集了 62 亿美元（现汇率约合 451 亿元人民币）。\n宁德时代此前在一份监管文件中表示，筹集的部分资金将用于在匈牙利建设一座价值 73 亿欧元（现汇率约合 604.72 亿元人民币）的电池工厂。（来源：IT 之家）\n饿了么宣布超百亿补贴加入外卖战局\n外卖战场的热度再度加码。4 月 30 日，饿了么宣布进一步加大平台补贴力度，即日起开启平台「饿补超百亿」大促。针对补贴，饿了么表示不打竞争口水仗，「只发真福利」。目前，饿了么 App 已上线「超百亿」口令词入口。（来源：富途牛牛）\n英伟达新工具开放使用，可根据 3D 场景创建 AI 图像，配置要求 RTX 4080\n4 月 30 日消息，英伟达推出了一款新工具，允许开发者首先在 3D 中创建图像，然后生成 AI 图像。\n这个工具名为 Nvidia AI Blueprint for 3D-guided generative AI，4 月 30 日起即可下载，适用于配备 RTX 4080 GPU 或更高型号的计算机，它通过将 Blender 的 3D 建模软件与 Black Forest Lab 的 FLUX.1 图像生成器连接起来工作。\n用户可以使用 Blender 中的 3D 对象（如建筑物、植物、动物和车辆）绘制场景，然后将其用作创建 2D 图像的参考。用户可以手动调整观看位置或某些对象应放置的位置，与仅使用文本描述相比，这种方法在生成 2D 图像时可以提供更多细节控制。\n例如，如果你脑海中有一个非常具体的城市图像——建筑物的形状和高度，显示的树木或汽车数量，甚至你观看的角度，此时就可以使用该工具在 Blender 中手动创建一个大概的样子。（来源：IT 之家）\n消息称 Meta 第三代雷朋联名智能眼镜将于 10 月发售，配单色显示屏及手环控制器\n据彭博社报道，Meta 旗下第三代 Ray-Ban 雷朋联名智能眼镜将于今年 10 月发售，目前 Meta 已安排部分员工在周末加班，加班加点研发这款设备。\n该眼镜相比前两代最大的特色就是配备了一块单色（预计为绿色）显示面板，同时带有可以佩戴在手腕上的「手环」风格控制器，定价在 1000 至 1400 美元（IT 之家注：现汇率约合 7274 至 10184 元人民币）之间。\n据悉，第三代雷朋联名智能眼镜将内置相机、照片、地图等应用，同时还支持快速查看来自手机应用的通知。该眼镜内置安卓系统，但无法安装第三方 App，同时眼镜的各项功能将「严重依赖手机」。 Meta「内部人士」透露，第三代雷朋联名智能眼镜拍照质量将「媲美 iPhone 13」。（来源：IT 之家）\n荣耀手表全新系列官宣，两款新品将至\n在4 月 30 日下午的荣耀 MagicBook Pro 16 2025 新品发布会上，荣耀预告了荣耀手表全新系列。\n从预告海报可以看到，荣耀手表全新系列将包含两款产品，一款是硬朗风格，另一款是圆润风格。\n外观方面，新品提供棕色和黑色两款配色，手表屏幕覆盖蓝宝石玻璃，表壳则采用钛合金材质，这款新品的续航时间据称可以达到 15 天。\n功能上，新品支持自由潜水等 100 多种运动模式，支持快速健康扫描、健康早晨报告以及全天健康追踪等。（来源：IT 之家）\n纽约地铁探索引入 AI 技术：提前预警异常行为，预防犯罪发生\n美国纽约大都会运输署（MTA）表示，其正在探索使用人工智能系统对该市地铁站台上的犯罪和危险行为进行「预测性预防」。\nMTA 首席安全官迈克尔・肯珀（Michael Kemper）表示，该机构正在「研究并试点使用人工智能等技术，以感知地铁站台上可能出现的麻烦或不当行为」。他在周一的 MTA 安全委员会会议上解释说：「如果有人行为异常、失去理智，这可能会触发警报，从而促使安保人员或警方采取行动。」他强调，警方可能会「在事情发生前」就做出反应。\n肯珀补充道：「人工智能是未来。」他提到，MTA 目前正在与科技公司合作，研究「什么样的技术可以在地铁系统中发挥作用」。不过，他并未透露 MTA 正在与哪些公司合作，人工智能将如何实施，以及人工智能摄像头将被期望检测到的具体行为类型。（来源：IT 之家）",
        "desc": "DeepSeek 发布 Prover-V2 模型，参数量达 6710 亿4 月 30 日消息，DeepSeek 于 AI 开源社区 Hugging Face 上发布了一个名为 DeepSeek-Prover-V2-671B 的新模型。据悉，DeepSeek-Prover-V2-671B 使用了更高效的 safetensors 文件格式，并支持多种计算精度，方便模型更快、更省资源地训练和部署，参数达 6710 亿，或为去年发布的 Prover-V1.5 数学模型升级版本。在模型架构上，该模型使用了 DeepSeek-V3 架构，采用 MoE（混合专家）模式，具有 61 层 Transformer 层，7168 维隐藏层。同时支持超长上下文，最大位置嵌入达 16.38 万，使其能处理复杂的数学证明，并且采用了 FP8 量化，可通过量化技术减小模型大小，提高推理效率。（来源：新浪科技）小米开源「Xiaomi MiMo」大模型：为推理而生，以 7B 参数超越 OpenAI o1-mini4 月 30 日消息，小米大模型团队通过「Xiaomi MiMo」公众号宣布，小米开源首个「为推理而生」的大模型 Xiaomi MiMo，联动预训练到后训练，全面提升推理能力。据介绍，MiMo 是来自全新成立不久的「小米大模型 Core 团队」的初步尝试。在数学推理（AIME 24-25）和代码竞赛（LiveCodeBench v5）公开测评集上，MiMo 仅用 7B 的参数规模，超越了 OpenAI 的闭源推理模型 o1-mini 和阿里 Qwen 更大规模的开源推理模型 QwQ-32B-Preview。官方表示，MiMo 推理能力的提升，由预训练和后训练阶段中数据和算法等多层面的创新联合驱动，包括：预训练：核心是让模型见过更多推理模式数据：着重挖掘富推理语料，并合成约 200B tokens 推理数据。训练：进行了三阶段训练，逐步提升训练难度，总训练 25T tokens。后训练：核心是高效稳定的强化学习算法和框架算法：提出 Test Difficulty Driven Reward 来缓解困难算法问题中的奖励稀疏问题，并引入 Easy Data Re-Sampling 策略，以稳定 RL 训练。框架：设计了 Seamless Rollout 系统，使得 RL 训练加速 2.29 倍，验证加速 1.96 倍。（来源：IT 之家）可生成 AI 播客：谷歌 NotebookLM 音频概览功能新增 76 种语言支持，包含中文4 月 30 日消息，谷歌宣布其基于人工智能的笔记和研究助手工具 NotebookLM 的「音频概览（Audio Overviews）」功能新增 76 种语言支持。该功能于去年推出，旨在通过人工智能虚拟主持人根据用户上传到 NotebookLM 的文档（如课程阅读材料或法律摘要）生成播客，帮助用户以另一种方式理解和消化文档中的信息。谷歌表示，此前「音频概览」功能仅支持用户账户所设置的首选语言。如今，公司新增了「输出语言」选项，用户可以自由选择生成「音频概览」的语言。谷歌强调，用户可以随时更改语言设置，这样就能根据需要轻松创建多语言内容或学习材料。谷歌在一篇博客文章中举例说明了这一功能的实用性：「例如，一位准备关于亚马逊雨林课程的教师可以与学生共享多种语言的资源，比如葡萄牙语纪录片、西班牙语研究报告和英语学习报告。学生们可以将这些资料上传到 NotebookLM，并在他们偏好的语言中生成关键要点的音频概览。」（来源：IT 之家）Meta 公布 2025 财年第 1 财季财报：营收 423.14 美元，同比增长 16%5 月 1 日消息，Meta 公司4 月 30 日发布博文，公布了 2025 财年第 1 财季（截至 3 月 31 日）的财报业绩，营收达到 423.14 亿美元，同比增长 16%；净利润 166.44 亿美元，同比增长 35%。Meta 在 2025 财年第 1 财季交出了一份亮眼的成绩单。总营收达到 423.14 亿美元（IT 之家注：现汇率约合 3078.03 亿元人民币），较去年同期的 364.55 亿美元增长 16%，若按固定汇率计算，增长率更是高达 19%。净利润从去年的 123.69 亿美元跃升至 166.44 亿美元（现汇率约合 1210.73 亿元人民币），增幅达 35%；每股摊薄收益（EPS）从 4.71 美元提升至 6.43 美元，增长 37%；运营利润为 175.55 亿美元，同比增长 27%，运营利润率从 38% 提升至 41%。Meta 旗下应用家族（Family of Apps）的日活跃用户（DAP）平均达 34.3 亿，同比增长 6%；广告曝光量（Ad Impressions）同比增长 5%，每条广告平均价格上涨 10%，推动广告收入达到 413.92 亿美元，占总营收的绝大部分。Meta AI 的月活跃用户接近 10 亿，显示其在人工智能领域的快速布局。此外，公司现金流表现强劲，经营活动现金流为 240.26 亿美元，自由现金流为 103.34 亿美元，现金及有价证券总额达 702.3 亿美元。（来源：IT 之家）微软第三季度营收 700.7 亿美元，高于市场预期微软第三季度营收 700.7 亿美元，预估 684.8 亿美元；第三季度每股收益 3.46 美元；第三季度智能云业务营收 268 亿美元，预估 259.9 亿美元；第三财季云营收 424 亿美元，分析师预期 422.2 亿美元；第三财季 Azure 增长对人工智能（AI）业务贡献 16 个百分点，分析师预期公司 15.6 个百分点。美股盘后涨超 6%。（来源：新浪科技）苹果加速印度布局，塔塔 / 富士康新工厂被曝组装生产 iPhone 16e 等机型4 月 30 日消息，路透社 4 月 29 日发布博文，报道称苹果公司在印度南部的两家新工厂已启动生产。其中一家由塔塔电子（Tata Electronics）运营的工厂已开始生产老款 iPhone，而另一家由富士康（Foxconn）建设的工厂将在 5 月启动发货。IT 之家援引博文介绍，位于印度南部泰米尔纳德邦霍苏尔（Hosur）的塔塔电子新工厂已于近日投产，首批生产线专注于生产老款 iPhone 型号。而富士康在卡纳塔克邦班加罗尔投资 26 亿美元建设的新工厂，也将在数日内启动首条生产线。据悉，该工厂每小时可生产 300 至 500 台 iPhone，首批产品包括 iPhone 16 和 16e 型号。消息人士透露，该富士康工厂预计在 2027 年 12 月全面建成，届时将创造约 5 万个就业机会。（来源：IT 之家）消息称宁德时代拟下月在港上市，或成四年来最大规模新股发行4 月 30 日消息，据路透社援引两位知情人士消息称，电池制造巨头宁德时代计划于下月启动在香港的上市程序，预计将成为该市四年来规模最大的股票发行。消息人士称，此次交易的建簿过程——即邀请投资者对股权发行进行投标的过程，预计将于 5 月 12 日起始的一周开始。此前另有知情人士透露，此次发行可能筹集至少 50 亿美元（IT 之家注：现汇率约合 363.71 亿元人民币）。宁德时代未立即回应置评请求。其中一位消息人士补充说，宁德时代建簿的规模和时间可能会发生变化。报道称，宁德时代此次登陆港股将成为近 4 年香港规模最大的一次上市。2021 年，快手通过首次公开募股筹集了 62 亿美元（现汇率约合 451 亿元人民币）。宁德时代此前在一份监管文件中表示，筹集的部分资金将用于在匈牙利建设一座价值 73 亿欧元（现汇率约合 604.72 亿元人民币）的电池工厂。（来源：IT 之家）饿了么宣布超百亿补贴加入外卖战局外卖战场的热度再度加码。4 月 30 日，饿了么宣布进一步加大平台补贴力度，即日起开启平台「饿补超百亿」大促。针对补贴，饿了么表示不打竞争口水仗，「只发真福利」。目前，饿了么 App 已上线「超百亿」口令词入口。（来源：富途牛牛）英伟达新工具开放使用，可根据 3D 场景创建 AI 图像，配置要求 RTX 40804 月 30 日消息，英伟达推出了一款新工具，允许开发者首先在 3D 中创建图像，然后生成 AI 图像。这个工具名为 Nvidia AI Blueprint for 3D-guided generative AI，4 月 30 日起即可下载，适用于配备 RTX 4080 GPU 或更高型号的计算机，它通过将 Blender 的 3D 建模软件与 Black Forest Lab 的 FLUX.1 图像生成器连接起来工作。用户可以使用 Blender 中的 3D 对象（如建筑物、植物、动物和车辆）绘制场景，然后将其用作创建 2D 图像的参考。用户可以手动调整观看位置或某些对象应放置的位置，与仅使用文本描述相比，这种方法在生成 2D 图像时可以提供更多细节控制。例如，如果你脑海中有一个非常具体的城市图像——建筑物的形状和高度，显示的树木或汽车数量，甚至你观看的角度，此时就可以使用该工具在 Blender 中手动创建一个大概的样子。（来源：IT 之家）消息称 Meta 第三代雷朋联名智能眼镜将于 10 月发售，配单色显示屏及手环控制器据彭博社报道，Meta 旗下第三代 Ray-Ban 雷朋联名智能眼镜将于今年 10 月发售，目前 Meta 已安排部分员工在周末加班，加班加点研发这款设备。该眼镜相比前两代最大的特色就是配备了一块单色（预计为绿色）显示面板，同时带有可以佩戴在手腕上的「手环」风格控制器，定价在 1000 至 1400 美元（IT 之家注：现汇率约合 7274 至 10184 元人民币）之间。据悉，第三代雷朋联名智能眼镜将内置相机、照片、地图等应用，同时还支持快速查看来自手机应用的通知。该眼镜内置安卓系统，但无法安装第三方 App，同时眼镜的各项功能将「严重依赖手机」。 Meta「内部人士」透露，第三代雷朋联名智能眼镜拍照质量将「媲美 iPhone 13」。（来源：IT 之家）荣耀手表全新系列官宣，两款新品将至在4 月 30 日下午的荣耀 MagicBook Pro 16 2025 新品发布会上，荣耀预告了荣耀手表全新系列。从预告海报可以看到，荣耀手表全新系列将包含两款产品，一款是硬朗风格，另一款是圆润风格。外观方面，新品提供棕色和黑色两款配色，手表屏幕覆盖蓝宝石玻璃，表壳则采用钛合金材质，这款新品的续航时间据称可以达到 15 天。功能上，新品支持自由潜水等 100 多种运动模式，支持快速健康扫描、健康早晨报告以及全天健康追踪等。（来源：IT 之家）纽约地铁探索引入 AI 技术：提前预警异常行为，预防犯罪发生美国纽约大都会运输署（MTA）表示，其正在探索使用人工智能系统对该市地铁站台上的犯罪和危险行为进行「预测性预防」。MTA 首席安全官迈克尔・肯珀（Michael Kemper）表示，该机构正在「研究并试点使用人工智能等技术，以感知地铁站台上可能出现的麻烦或不当行为」。他在周一的 MTA 安全委员会会议上解释说：「如果有人行为异常、失去理智，这可能会触发警报，从而促使安保人员或警方采取行动。」他强调，警方可能会「在事情发生前」就做出反应。肯珀补充道：「人工智能是未来。」他提到，MTA 目前正在与科技公司合作，研究「什么样的技术可以在地铁系统中发挥作用」。不过，他并未透露 MTA 正在与哪些公司合作，人工智能将如何实施，以及人工智能摄像头将被期望检测到的具体行为类型。（来源：IT 之家）",
        "summary": "DeepSeek发布参数达6710亿的Prover-V2模型，小米开源首个推理大模型Xiaomi MiMo，饿了么宣布超百亿补贴加入外卖战局。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "宝可梦机场五月白嫖之猜猜我是谁",
        "url": "https://linux.do/t/topic/615047",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-05-01 05:30:36",
        "timestamp": 1746048636000,
        "published": "2025-05-01 05:30:36",
        "content": "专线已经更新为BGP线路 为了给大家更好的体验\n感谢大家支持\n官网\n官网 （点击了解更多详细信息）\n40 个帖子 - 37 位参与者\n阅读完整话题",
        "desc": "专线已经更新为BGP线路 为了给大家更好的体验感谢大家支持官网官网（点击了解更多详细信息）40 个帖子 - 37 位参与者阅读完整话题",
        "summary": "新闻内容涉及宝可梦机场五月活动，包含图片和链接，提到专线更新为BGP线路，并链接至相关论坛话题。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "5.1放假，无偿免费帮验证chatgpt student",
        "url": "https://linux.do/t/topic/614690",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-05-01 01:06:26",
        "timestamp": 1746032786000,
        "published": "2025-05-01 01:06:26",
        "content": "我的IP纯净的不能再纯净。\n验证前准备工作：\n你自己提供edu资料，要美国或者加拿大的，提示：asu我试了已经不行，要上传学生文件。\n哪些可以验证？\n你自己验证提示检测vpn的，白屏的，点进去转圈圈的，我可以帮你搞定。\n验证完以后你自己用教育邮箱登录chatgpt点升级套餐，去支付，就会显示是0美金，绑个虚拟卡就可以了。\n48 个帖子 - 28 位参与者\n阅读完整话题",
        "desc": "我的IP纯净的不能再纯净。验证前准备工作：你自己提供edu资料，要美国或者加拿大的，提示：asu我试了已经不行，要上传学生文件。哪些可以验证？你自己验证提示检测vpn的，白屏的，点进去转圈圈的，我可以帮你搞定。验证完以后你自己用教育邮箱登录chatgpt点升级套餐，去支付，就会显示是0美金，绑个虚拟卡就可以了。48 个帖子 - 28 位参与者阅读完整话题",
        "summary": "新闻内容讲述如何通过提供美国或加拿大教育资料验证ChatGPT Student账户，并利用虚拟卡实现免费升级套餐。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "咸🐟50块买的docker镜像源",
        "url": "https://linux.do/t/topic/614697",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-05-01 01:14:33",
        "timestamp": 1746033273000,
        "published": "2025-05-01 01:14:33",
        "content": "咸50块买的docker镜像源:\n{\n“registry-mirrors”: [\n“https://0c105db5188026850f80c001def654a0.mirror.swr.myhuaweicloud.com”,\n“https://5tqw56kt.mirror.aliyuncs.com”,\n“https://docker.1panel.live”,\n“http://mirrors.ustc.edu.cn/”,\n“http://mirror.azure.cn/”,\n“https://hub.rat.dev/”,\n“https://docker.ckyl.me/”,\n“https://docker.chenby.cn”,\n“https://docker.hpcloud.cloud”,\n“https://docker.m.daocloud.io”\n]\n}\n61 个帖子 - 55 位参与者\n阅读完整话题",
        "desc": "咸50块买的docker镜像源:{“registry-mirrors”: [“https://0c105db5188026850f80c001def654a0.mirror.swr.myhuaweicloud.com”,“https://5tqw56kt.mirror.aliyuncs.com”,“https://docker.1panel.live”,“http://mirrors.ustc.edu.cn/”,“http://mirror.azure.cn/”,“https://hub.rat.dev/”,“https://docker.ckyl.me/”,“https://docker.chenby.cn”,“https://docker.hpcloud.cloud”,“https://docker.m.daocloud.io”]}61 个帖子 - 55 位参与者阅读完整话题",
        "summary": "用户分享了购买的Docker镜像源列表，包含多个国内外镜像服务地址，用于加速Docker镜像的拉取过程。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "【Cloudflare系列教程】搭建临时邮箱教程 Ⅱ",
        "url": "https://linux.do/t/topic/615091",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-05-01 05:58:07",
        "timestamp": 1746050287000,
        "published": "2025-05-01 05:58:07",
        "content": "项目介绍\ngithub.com\nGitHub - dreamhunter2333/cloudflare_temp_email: CloudFlare free temp domain email 免费收发 临时域名邮箱 支持附件...\nCloudFlare free temp domain email 免费收发 临时域名邮箱 支持附件 IMAP SMTP TelegramBot\n请先 Fork 上面的仓库，然后继续\n创建数据库\n登录 Cloudflare，依次点击左侧菜单 存储和数据库 → D1 SQL 数据库 → 创建，名称输入 cloudflare_temp_email 后点击创建\n接着切换到 控制台 标签，右键打开 schema.sql 后复制所有内容粘贴到输入框，最后点击 执行 完成创建\n下载压缩包\n点击这里 打开页面找到第3项，在输入框输入后端地址（示例：https://api.example.com，注意不带 /），点击 生成 然后 点击 下载，如若输入有误，需刷新页面后重试\n创建 Pages\n依次点击左侧菜单 计算（Workers） → Workers and Pages → 创建，切换到 Pages 标签并点击 上传资产\n项目名称输入 cloudflare-temp-email 后点击 创建项目，接着点击上传上一步下载的 frontend.zip 后点击 部署站点 完成部署\n创建 Action\n进入 Fork 的仓库，切换到 Settings 标签，点击左侧 Secrets and variables - Actions → New repository secret，依次添加以下变量\n变量名\n示例值\n描述\nDEBUG_MODE\ntrue\n是否开启调试模式\nCLOUDFLARE_ACCOUNT_ID\nabcdefg\nCloudflare 账户的唯一标识\nCLOUDFLARE_API_TOKEN\nhijklmn\nEdit Cloudflare Worker 令牌\nFRONTEND_NAME\ncloudflare-temp-email\n前端 Pages 名称\nFRONTEND_ENV\n见下文\n前端配置文件\nBACKEND_TOML\n见下文\n后端配置文件\nFRONTEND_ENV\nVITE_API_BASE=https://api.example.com\nVITE_CF_WEB_ANALY_TOKEN=\nVITE_IS_TELEGRAM=false\nBACKEND_TOML\nname = \"cloudflare_temp_email\"\nmain = \"src/worker.ts\"\ncompatibility_date = \"2024-09-23\"\ncompatibility_flags = [ \"nodejs_compat\" ]\nroutes = [\n{ pattern = \"https://api.example.com\", custom_domain = true },\n]\n[vars]\nPREFIX = \"tmp\"\nDOMAINS = [\"temp1.com\" , \"temp2.com\"]\nJWT_SECRET = \"xxxxxxxxxxxxxxxxxxxx\"\nADMIN_PASSWORDS = [\"password1\", \"password2\"]\nENABLE_USER_CREATE_EMAIL = true\nENABLE_USER_DELETE_EMAIL = true\n[[d1_databases]]\nbinding = \"DB\"\ndatabase_name = \"cloudflare_temp_email\" # D1 数据库名称\ndatabase_id = \"xxxxxxxxx\" # D1 数据库 ID\n# kv config 用于用户注册发送邮件验证码，如果不启用用户注册或不启用注册验证，可以不配置\n# [[kv_namespaces]]\n# binding = \"KV\"\n# id = \"xxxx\"\n# 如果你想要部署带有前端资源的 worker, 你需要添加 assets 配置\n# [assets]\n# directory = \"../frontend/dist/\"\n# binding = \"ASSETS\"\n# run_worker_first = true\n# 如果你想要使用定时任务清理邮件，取消下面的注释，并修改 cron 表达式\n# [triggers]\n# crons = [ \"0 0 * * *\" ]\n# 通过 Cloudflare 发送邮件\n# send_email = [\n# { name = \"SEND_MAIL\" },\n# ]\n# 新建地址限流配置 /api/new_address\n# [[unsafe.bindings]]\n# name = \"RATE_LIMITER\"\n# type = \"ratelimit\"\n# namespace_id = \"1001\"\n# # 10 requests per minute\n# simple = { limit = 10, period = 60 }\n# 绑定其他 worker 处理邮件，例如通过 auth-inbox ai 能力解析验证码或激活链接\n# [[services]]\n# binding = \"AUTH_INBOX\"\n# service = \"auth-inbox\"\n然后切换到 Actions 标签，点击左侧 Deploy Backend，接着点击 Run workflow → Run workflow 部署后端，刷新页面就可以看到任务了，稍等片刻，等待任务执行，成功会显示，点击左侧 Deploy Frontend重复相同步骤即可\n参考链接\n【Cloudflare系列教程】搭建临时邮箱\n10 个帖子 - 10 位参与者\n阅读完整话题",
        "desc": "项目介绍github.comGitHub - dreamhunter2333/cloudflare_temp_email: CloudFlare free temp domain email 免费收发 临时域名邮箱 支持附件...CloudFlare free temp domain email 免费收发 临时域名邮箱 支持附件 IMAP SMTP TelegramBot请先 Fork 上面的仓库，然后继续创建数据库登录 Cloudflare，依次点击左侧菜单存储和数据库→D1 SQL 数据库→创建，名称输入cloudflare_temp_email后点击创建接着切换到控制台标签，右键打开schema.sql后复制所有内容粘贴到输入框，最后点击执行完成创建下载压缩包点击这里打开页面找到第3项，在输入框输入后端地址（示例：https://api.example.com，注意不带/），点击生成然后 点击下载，如若输入有误，需刷新页面后重试创建 Pages依次点击左侧菜单计算（Workers）→Workers and Pages→创建，切换到Pages标签并点击上传资产项目名称输入cloudflare-temp-email后点击创建项目，接着点击上传上一步下载的frontend.zip后点击部署站点完成部署创建 Action进入 Fork 的仓库，切换到Settings标签，点击左侧Secrets and variables-Actions→New repository secret，依次添加以下变量变量名示例值描述DEBUG_MODEtrue是否开启调试模式CLOUDFLARE_ACCOUNT_IDabcdefgCloudflare 账户的唯一标识CLOUDFLARE_API_TOKENhijklmnEdit Cloudflare Worker 令牌FRONTEND_NAMEcloudflare-temp-email前端 Pages 名称FRONTEND_ENV见下文前端配置文件BACKEND_TOML见下文后端配置文件FRONTEND_ENVVITE_API_BASE=https://api.example.com\nVITE_CF_WEB_ANALY_TOKEN=\nVITE_IS_TELEGRAM=falseBACKEND_TOMLname = \"cloudflare_temp_email\"\nmain = \"src/worker.ts\"\ncompatibility_date = \"2024-09-23\"\ncompatibility_flags = [ \"nodejs_compat\" ]\nroutes = [\n{ pattern = \"https://api.example.com\", custom_domain = true },\n]\n[vars]\nPREFIX = \"tmp\"\nDOMAINS = [\"temp1.com\" , \"temp2.com\"]\nJWT_SECRET = \"xxxxxxxxxxxxxxxxxxxx\"\nADMIN_PASSWORDS = [\"password1\", \"password2\"]\nENABLE_USER_CREATE_EMAIL = true\nENABLE_USER_DELETE_EMAIL = true\n[[d1_databases]]\nbinding = \"DB\"\ndatabase_name = \"cloudflare_temp_email\" # D1 数据库名称\ndatabase_id = \"xxxxxxxxx\" # D1 数据库 ID\n# kv config 用于用户注册发送邮件验证码，如果不启用用户注册或不启用注册验证，可以不配置\n# [[kv_namespaces]]\n# binding = \"KV\"\n# id = \"xxxx\"\n# 如果你想要部署带有前端资源的 worker, 你需要添加 assets 配置\n# [assets]\n# directory = \"../frontend/dist/\"\n# binding = \"ASSETS\"\n# run_worker_first = true\n# 如果你想要使用定时任务清理邮件，取消下面的注释，并修改 cron 表达式\n# [triggers]\n# crons = [ \"0 0 * * *\" ]\n# 通过 Cloudflare 发送邮件\n# send_email = [\n# { name = \"SEND_MAIL\" },\n# ]\n# 新建地址限流配置 /api/new_address\n# [[unsafe.bindings]]\n# name = \"RATE_LIMITER\"\n# type = \"ratelimit\"\n# namespace_id = \"1001\"\n# # 10 requests per minute\n# simple = { limit = 10, period = 60 }\n# 绑定其他 worker 处理邮件，例如通过 auth-inbox ai 能力解析验证码或激活链接\n# [[services]]\n# binding = \"AUTH_INBOX\"\n# service = \"auth-inbox\"然后切换到Actions标签，点击左侧Deploy Backend，接着点击Run workflow→Run workflow部署后端，刷新页面就可以看到任务了，稍等片刻，等待任务执行，成功会显示，点击左侧Deploy Frontend重复相同步骤即可参考链接【Cloudflare系列教程】搭建临时邮箱10 个帖子 - 10 位参与者阅读完整话题",
        "summary": "本文介绍了如何使用Cloudflare搭建临时邮箱，包括创建数据库、下载压缩包和配置Pages等步骤。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "ChatGPT官网对陌生链接弹提醒了⚠️",
        "url": "https://linux.do/t/topic/614589",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-04-30 21:09:32",
        "timestamp": 1746018572000,
        "published": "2025-04-30 21:09:32",
        "content": "github.com这种就可以直接点，点了直接跳转\n不安全或者垃圾网站，例如CSDN就会弹警告\n17 个帖子 - 13 位参与者\n阅读完整话题",
        "desc": "github.com这种就可以直接点，点了直接跳转不安全或者垃圾网站，例如CSDN就会弹警告17 个帖子 - 13 位参与者阅读完整话题",
        "summary": "ChatGPT官网在用户点击陌生链接时会弹出警告提醒，例如对CSDN等不安全网站进行提示，而像github.com这样的安全网站则可直接跳转。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "个人对 C# 中 async/await 的理解",
        "url": "https://linux.do/t/topic/614595",
        "source": "LINUX DO 今日热门",
        "hot": "",
        "time": "2025-04-30 21:48:26",
        "timestamp": 1746020906000,
        "published": "2025-04-30 21:48:26",
        "content": "如题，不一定对，欢迎佬友们一起交流（纯水文，进来的都给我点赞！！！）\n主要参考的下面两篇文章：\n.NET Blog – 16 Mar 23\nHow Async/Await Really Works in C# - .NET Blog\nAsync/await was added to the C# language over a decade ago and has transformed how we write scalable code for .NET. But how does it really work? In this post, we take a deep dive into its internals.\ncnblogs.com\n.NET Core 异步(Async)底层原理浅谈 - 叫我安不理 - 博客园\n简介 多线程与异步是两个完全不同的概念，常常有人混淆。 异步 异步适用于\"IO密集型\"的场景,它可以避免因为线程等待IO形成的线程饥饿，从而造成程序吞吐量的降低。 其本质是：让线程的cpu片不再浪费在等待上，期间可以去干其它的事情。 要注意的是：Async不能加速程序的执行，它只\n块引用中的内容是我觉得有意思（可以水）加上的，可能和主题无关，追求连贯的话（写完发现已经不连贯了）看的时候可以跳过\n讲讲我理解的 Task\nTask，在其他语言中可能叫 Future 或者 Promise，表示一个结果的代理（可以获取结果的操作，以及操作完成产生的结果）。这里的操作可能是 I/O 操作，也可能是 CPU 密集型操作。\n这里的操作需要一个线程来承载，对于 CPU 密集型操作，操作在某个线程上执行，对于 I/O 操作，操作在某个线程上等待操作系统的事件通知。\nasync/await 的语义和实现\n首先要知道，async/await 是编译时功能，编译器会将 async/await 代码转换为状态机。\n有一个将 async/await 变为运行时功能的实验\nawait 用于 Task，表示\n如果 Task 未完成，将 await 之后的代码作为回调，注册到这个未完成的 Task 上，然后返回（控制流回到调用者）\n如果 Task 已完成，获取结果（并且接着执行 await 之后的代码）（例如读文件，但要读的文件内容已经在内存中，不用等待磁盘 I/O。或者创建 Task 后执行了其他代码再 await，此时 Task 已经完成）\n关于异步方法的传染性，我的理解是方法中 await 了一个 Task，那么这个方法就可能在没有获取到结果（也就是没有执行完整个方法）的情况下返回，那么这个方法也就成为了一个结果的代理（可以获取结果的操作，也就是 Task）。\nasync 告诉编译器需要为这个方法生成一个状态机。因为 await 之后的代码执行可能需要用到方法的参数和方法中的局部变量，以及保存接下来从哪里继续执行。\n先看一个简单的方法：\ninternal class Program {\nprivate static async Task Main() {\nusing var client = new HttpClient();\nvar result = await client.GetStringAsync(\"https://www.bilibili.com\");\nConsole.WriteLine(result.Length);\n}\n}\nILSpy 反编译，选择语言版本 C# 1.0\n（简化部分错误处理和无关逻辑，改掉了编译器自动生成的命名）\ninternal class Program {\nprivate sealed class <Main>d__0 : IAsyncStateMachine {\npublic int state;\npublic AsyncTaskMethodBuilder builder;\nprivate HttpClient client = new HttpClient();\nprivate string result;\nprivate TaskAwaiter<string> awaiter;\nprivate void MoveNext() {\ntry {\nif (state != 0) {\nawaiter = client.GetStringAsync(\"https://www.bilibili.com\").GetAwaiter();\nif (!awaiter.IsCompleted) {\nstate = 0;\nbuilder.AwaitUnsafeOnCompleted(ref awaiter, ref this);\nreturn;\n}\n}\nresult = awaiter.GetResult();\nConsole.WriteLine(result.Length);\n} catch (Exception exception) {\nstate = -2;\nbuilder.SetException(exception);\nreturn;\n}\nstate = -2;\nbuilder.SetResult();\n}\n}\n[AsyncStateMachine(typeof(<Main>d__0))]\nprivate static Task Main() {\n<Main>d__0 stateMachine = new <Main>d__0();\nstateMachine.builder = AsyncTaskMethodBuilder.Create();\nstateMachine.state = -1;\nstateMachine.builder.Start(ref stateMachine);\nreturn stateMachine.builder.Task;\n}\nprivate static void <Main>() {\nMain().GetAwaiter().GetResult();\n}\n}\n可以看到，编译器为原来的 Main 方法生成了一个状态机类 <Main>d__0。执行现在的 Main 方法时，会调用 Start 方法。这个方法会调用状态机的 MoveNext 方法。\nawaiter = client.GetStringAsync(\"https://www.bilibili.com\").GetAwaiter(); 可以看作创建了一个返回 string 的 Task。\n如果这个 Task 未完成（awaiter.IsCompleted 为 false），那么就保存下一次从哪里开始执行（state = 0），并且注册自身作为回调（builder.AwaitUnsafeOnCompleted(ref awaiter, ref this)）。回调会在 Task 完成时被调用。\n如果已完成，就直接获取结果（result = awaiter.GetResult();），并且执行后续代码。\n上面的例子里，<Main> 方法中调用了 GetResult 方法等待 Task 完成，而不是注册回调。因为 <Main> 方法是主线程的入口方法，主线程结束时进程就结束了，所以必须等待 Main 方法的 Task 完成。\n这里的 GetAwaiter 是鸭子类型的一个应用，只要一个类型实现了 GetAwaiter 方法，并且返回的对象实现了 IsCompleted 属性以及 GetResult 和 OnCompleted/UnsafeOnCompleted 方法，就可以 await 这个类型的对象。 这里 Task 实现了 GetAwaiter 方法，返回 TaskAwaiter 类型的对象\n类似于一个类型如果实现了 GetEnumerator 方法，且返回的对象实现了 Current 属性以及 MoveNext 方法，就可以用 foreach 遍历这个类型的对象。\n实际上类似的不止这些，在返回 IEnumerable<T> 的方法中使用 yield return，编译器会为这个方法生成一个状态机类，实际上用状态机实现 async/await 就是由迭代器启发的，具体可以看 How Async/Await Really Works in C# - .NET Blog 这篇\npublic static IEnumerable<int> Fib() {\nint prev = 0, next = 1;\nyield return prev;\nyield return next;\nwhile (true) {\nint sum = prev + next;\nyield return sum;\nprev = next;\nnext = sum;\n}\n}\nILSpy 反编译，选择语言版本 C# 1.0，会生成类似下面的代码\nprivate sealed class <Fib>d__1 : IEnumerable<int>, IEnumerable, IEnumerator<int>, IEnumerator, IDisposable {\nprivate int state;\nprivate int current;\nprivate int initialThreadId;\nprivate int prev;\nprivate int next;\nprivate int sum;\nint IEnumerator<int>.Current => current\nobject IEnumerator.Current => current\npublic <Fib>d__1(int state) {\nthis.state = state;\ninitialThreadId = Environment.CurrentManagedThreadId;\n}\nvoid IDisposable.Dispose() {\nstate = -2;\n}\nprivate bool MoveNext() {\nswitch (state) {\ndefault:\nreturn false;\ncase 0:\nstate = -1;\nprev = 0;\nnext = 1;\ncurrent = prev;\nstate = 1;\nreturn true;\ncase 1:\nstate = -1;\ncurrent = next;\nstate = 2;\nreturn true;\ncase 2:\nstate = -1;\nbreak;\ncase 3:\nstate = -1;\nprev = next;\nnext = sum;\nbreak;\n}\nsum = prev + next;\ncurrent = sum;\nstate = 3;\nreturn true;\n}\nbool IEnumerator.MoveNext() {\nreturn this.MoveNext();\n}\nvoid IEnumerator.Reset() {\nthrow new NotSupportedException();\n}\nIEnumerator<int> IEnumerable<int>.GetEnumerator() {\nif (state == -2 && initialThreadId == Environment.CurrentManagedThreadId) {\nstate = 0;\nreturn this;\n}\nreturn new <Fib>d__1(0);\n}\nIEnumerator IEnumerable.GetEnumerator() {\nreturn ((IEnumerable<int>)this).GetEnumerator();\n}\n}\n[IteratorStateMachine(typeof(<Fib>d__1))]\npublic static IEnumerable<int> Fib() {\nreturn new <Fib>d__1(-2);\n}\n可以看到两种状态机同样可能会被多次调用，同样保存了执行状态和下次执行开始的位置\n更进一步，还可以使用 IAsyncEnumerable<T> 作为迭代器的返回类型。使用 await foreach 语句对迭代器的结果进行迭代\nasync IAsyncEnumerable<int> GenerateNumbersAsync(int count){\nfor (int i = 0; i < count; i++){\nyield return await ProduceNumberAsync(i);\n}\n}\nasync Task<int> ProduceNumberAsync(int seed){\nawait Task.Delay(1000);\nreturn 2 * seed;\n}\n有兴趣可以自己反编译看看\n两种用例\nCPU 密集型操作\nConsole.WriteLine(\"开始计算\");\nvar result = await Task.Run(() => {\n// 模拟计算\nThread.Sleep(TimeSpan.FromSeconds(1));\nreturn 0;\n});\nConsole.WriteLine(result);\n对于 CPU 密集型操作，我们会把耗时的方法放到 Task.Run 中执行。\nTask.Run 会创建一个 Task，并且将其放进线程池的工作队列。（线程池里的线程可以简单认为做的就是循环从工作队列中取任务执行）\n线程池线程被创建后执行的代码：\nSource Browser\n任务执行完后，会调用注册的回调（也就是 Console.WriteLine(result);）打印出结果。\nI/O 密集型操作\n下面是一个模拟读文件的例子：\nConsole.WriteLine(\"模拟读文件\");\nvar result = await EmulateReadAsync();\nConsole.WriteLine(result);\nTask<string> EmulateReadAsync() {\nvar source = new TaskCompletionSource<string>();\n_ = Task.Run(() => {\nvar result = EmulateRead();\nsource.SetResult(result);\n});\nreturn source.Task;\n}\n// 模拟 I/O 操作\nstring EmulateRead() {\n// 等待系统调用返回\nThread.Sleep(TimeSpan.FromSeconds(1));\nreturn \"content\";\n}\n前面说过 I/O 操作也需要一个线程来承载，等待操作系统的事件通知。I/O 操作完成后，再调用注册的回调。\n区别无非在于通知的方式（阻塞调用返回，epoll，IOCP…），回调执行的位置（当前线程，线程池的线程）\n贴一张偷的异步请求流程图(Windows)\n有兴趣的可以看看源码，FileStream.ReadAsync 最终会调用 RandomAccess.ReadAtOffsetAsync 方法，对应图中 2 的过程。\nasync/await 的优势\n代码可读性更好，避免了回调地狱，并且对于不用回调的情况（Task 已完成）做了优化\n对于一些特殊的 I/O 操作（epoll，IOCP），只需要阻塞一个线程（I/O 多路复用），提高性能\n对于 UI 线程，避免了阻塞 UI 线程，提高响应性能\n一点碎碎念\n想到哪就写到哪了，可能有些地方不太连贯，而且只是大概梳理了一下，很多细节都被我省略了，欢迎指正\n还有些想写的地方没写到，比如 ExecutionContext，ValueTask，SynchronizationContext，TaskScheduler， 等等，后面有机会再补充吧\n22 个帖子 - 9 位参与者\n阅读完整话题",
        "desc": "如题，不一定对，欢迎佬友们一起交流（纯水文，进来的都给我点赞！！！）主要参考的下面两篇文章：.NET Blog – 16 Mar 23How Async/Await Really Works in C# - .NET BlogAsync/await was added to the C# language over a decade ago and has transformed how we write scalable code for .NET. But how does it really work? In this post, we take a deep dive into its internals.cnblogs.com.NET Core 异步(Async)底层原理浅谈 - 叫我安不理 - 博客园简介 多线程与异步是两个完全不同的概念，常常有人混淆。 异步 异步适用于\"IO密集型\"的场景,它可以避免因为线程等待IO形成的线程饥饿，从而造成程序吞吐量的降低。 其本质是：让线程的cpu片不再浪费在等待上，期间可以去干其它的事情。 要注意的是：Async不能加速程序的执行，它只块引用中的内容是我觉得有意思（可以水）加上的，可能和主题无关，追求连贯的话（写完发现已经不连贯了）看的时候可以跳过讲讲我理解的TaskTask，在其他语言中可能叫Future或者Promise，表示一个结果的代理（可以获取结果的操作，以及操作完成产生的结果）。这里的操作可能是 I/O 操作，也可能是 CPU 密集型操作。这里的操作需要一个线程来承载，对于 CPU 密集型操作，操作在某个线程上执行，对于 I/O 操作，操作在某个线程上等待操作系统的事件通知。async/await的语义和实现首先要知道，async/await是编译时功能，编译器会将async/await代码转换为状态机。有一个将async/await变为运行时功能的实验await用于Task，表示如果Task未完成，将await之后的代码作为回调，注册到这个未完成的Task上，然后返回（控制流回到调用者）如果Task已完成，获取结果（并且接着执行await之后的代码）（例如读文件，但要读的文件内容已经在内存中，不用等待磁盘 I/O。或者创建Task后执行了其他代码再await，此时Task已经完成）关于异步方法的传染性，我的理解是方法中await了一个Task，那么这个方法就可能在没有获取到结果（也就是没有执行完整个方法）的情况下返回，那么这个方法也就成为了一个结果的代理（可以获取结果的操作，也就是Task）。async告诉编译器需要为这个方法生成一个状态机。因为await之后的代码执行可能需要用到方法的参数和方法中的局部变量，以及保存接下来从哪里继续执行。先看一个简单的方法：internal class Program {\nprivate static async Task Main() {\nusing var client = new HttpClient();\nvar result = await client.GetStringAsync(\"https://www.bilibili.com\");\nConsole.WriteLine(result.Length);\n}\n}ILSpy 反编译，选择语言版本 C# 1.0（简化部分错误处理和无关逻辑，改掉了编译器自动生成的命名）internal class Program {\nprivate sealed class d__0 : IAsyncStateMachine {\npublic int state;\npublic AsyncTaskMethodBuilder builder;\nprivate HttpClient client = new HttpClient();\nprivate string result;\nprivate TaskAwaiter awaiter;\nprivate void MoveNext() {\ntry {\nif (state != 0) {\nawaiter = client.GetStringAsync(\"https://www.bilibili.com\").GetAwaiter();\nif (!awaiter.IsCompleted) {\nstate = 0;\nbuilder.AwaitUnsafeOnCompleted(ref awaiter, ref this);\nreturn;\n}\n}\nresult = awaiter.GetResult();\nConsole.WriteLine(result.Length);\n} catch (Exception exception) {\nstate = -2;\nbuilder.SetException(exception);\nreturn;\n}\nstate = -2;\nbuilder.SetResult();\n}\n}\n[AsyncStateMachine(typeof(d__0))]\nprivate static Task Main() {\nd__0 stateMachine = new d__0();\nstateMachine.builder = AsyncTaskMethodBuilder.Create();\nstateMachine.state = -1;\nstateMachine.builder.Start(ref stateMachine);\nreturn stateMachine.builder.Task;\n}\nprivate static void () {\nMain().GetAwaiter().GetResult();\n}\n}可以看到，编译器为原来的Main方法生成了一个状态机类d__0。执行现在的Main方法时，会调用Start方法。这个方法会调用状态机的MoveNext方法。awaiter = client.GetStringAsync(\"https://www.bilibili.com\").GetAwaiter();可以看作创建了一个返回string的Task。如果这个Task未完成（awaiter.IsCompleted为false），那么就保存下一次从哪里开始执行（state = 0），并且注册自身作为回调（builder.AwaitUnsafeOnCompleted(ref awaiter, ref this)）。回调会在Task完成时被调用。如果已完成，就直接获取结果（result = awaiter.GetResult();），并且执行后续代码。上面的例子里，方法中调用了GetResult方法等待Task完成，而不是注册回调。因为方法是主线程的入口方法，主线程结束时进程就结束了，所以必须等待Main方法的Task完成。这里的GetAwaiter是鸭子类型的一个应用，只要一个类型实现了GetAwaiter方法，并且返回的对象实现了IsCompleted属性以及GetResult和OnCompleted/UnsafeOnCompleted方法，就可以await这个类型的对象。 这里Task实现了GetAwaiter方法，返回TaskAwaiter类型的对象类似于一个类型如果实现了GetEnumerator方法，且返回的对象实现了Current属性以及MoveNext方法，就可以用foreach遍历这个类型的对象。实际上类似的不止这些，在返回IEnumerable的方法中使用yield return，编译器会为这个方法生成一个状态机类，实际上用状态机实现async/await就是由迭代器启发的，具体可以看How Async/Await Really Works in C# - .NET Blog这篇public static IEnumerable Fib() {\nint prev = 0, next = 1;\nyield return prev;\nyield return next;\nwhile (true) {\nint sum = prev + next;\nyield return sum;\nprev = next;\nnext = sum;\n}\n}ILSpy 反编译，选择语言版本 C# 1.0，会生成类似下面的代码private sealed class d__1 : IEnumerable, IEnumerable, IEnumerator, IEnumerator, IDisposable {\nprivate int state;\nprivate int current;\nprivate int initialThreadId;\nprivate int prev;\nprivate int next;\nprivate int sum;\nint IEnumerator.Current => current\nobject IEnumerator.Current => current\npublic d__1(int state) {\nthis.state = state;\ninitialThreadId = Environment.CurrentManagedThreadId;\n}\nvoid IDisposable.Dispose() {\nstate = -2;\n}\nprivate bool MoveNext() {\nswitch (state) {\ndefault:\nreturn false;\ncase 0:\nstate = -1;\nprev = 0;\nnext = 1;\ncurrent = prev;\nstate = 1;\nreturn true;\ncase 1:\nstate = -1;\ncurrent = next;\nstate = 2;\nreturn true;\ncase 2:\nstate = -1;\nbreak;\ncase 3:\nstate = -1;\nprev = next;\nnext = sum;\nbreak;\n}\nsum = prev + next;\ncurrent = sum;\nstate = 3;\nreturn true;\n}\nbool IEnumerator.MoveNext() {\nreturn this.MoveNext();\n}\nvoid IEnumerator.Reset() {\nthrow new NotSupportedException();\n}\nIEnumerator IEnumerable.GetEnumerator() {\nif (state == -2 && initialThreadId == Environment.CurrentManagedThreadId) {\nstate = 0;\nreturn this;\n}\nreturn new d__1(0);\n}\nIEnumerator IEnumerable.GetEnumerator() {\nreturn ((IEnumerable)this).GetEnumerator();\n}\n}\n[IteratorStateMachine(typeof(d__1))]\npublic static IEnumerable Fib() {\nreturn new d__1(-2);\n}可以看到两种状态机同样可能会被多次调用，同样保存了执行状态和下次执行开始的位置更进一步，还可以使用IAsyncEnumerable作为迭代器的返回类型。使用await foreach语句对迭代器的结果进行迭代async IAsyncEnumerable GenerateNumbersAsync(int count){\nfor (int i = 0; i < count; i++){\nyield return await ProduceNumberAsync(i);\n}\n}\nasync Task ProduceNumberAsync(int seed){\nawait Task.Delay(1000);\nreturn 2 * seed;\n}有兴趣可以自己反编译看看两种用例CPU 密集型操作Console.WriteLine(\"开始计算\");\nvar result = await Task.Run(() => {\n// 模拟计算\nThread.Sleep(TimeSpan.FromSeconds(1));\nreturn 0;\n});\nConsole.WriteLine(result);对于 CPU 密集型操作，我们会把耗时的方法放到Task.Run中执行。Task.Run会创建一个Task，并且将其放进线程池的工作队列。（线程池里的线程可以简单认为做的就是循环从工作队列中取任务执行）线程池线程被创建后执行的代码：Source Browser任务执行完后，会调用注册的回调（也就是Console.WriteLine(result);）打印出结果。I/O 密集型操作下面是一个模拟读文件的例子：Console.WriteLine(\"模拟读文件\");\nvar result = await EmulateReadAsync();\nConsole.WriteLine(result);\nTask EmulateReadAsync() {\nvar source = new TaskCompletionSource();\n_ = Task.Run(() => {\nvar result = EmulateRead();\nsource.SetResult(result);\n});\nreturn source.Task;\n}\n// 模拟 I/O 操作\nstring EmulateRead() {\n// 等待系统调用返回\nThread.Sleep(TimeSpan.FromSeconds(1));\nreturn \"content\";\n}前面说过 I/O 操作也需要一个线程来承载，等待操作系统的事件通知。I/O 操作完成后，再调用注册的回调。区别无非在于通知的方式（阻塞调用返回，epoll，IOCP…），回调执行的位置（当前线程，线程池的线程）贴一张偷的异步请求流程图(Windows)有兴趣的可以看看源码，FileStream.ReadAsync最终会调用RandomAccess.ReadAtOffsetAsync方法，对应图中 2 的过程。async/await的优势代码可读性更好，避免了回调地狱，并且对于不用回调的情况（Task已完成）做了优化对于一些特殊的 I/O 操作（epoll，IOCP），只需要阻塞一个线程（I/O 多路复用），提高性能对于 UI 线程，避免了阻塞 UI 线程，提高响应性能一点碎碎念想到哪就写到哪了，可能有些地方不太连贯，而且只是大概梳理了一下，很多细节都被我省略了，欢迎指正还有些想写的地方没写到，比如ExecutionContext，ValueTask，SynchronizationContext，TaskScheduler， 等等，后面有机会再补充吧22 个帖子 - 9 位参与者阅读完整话题",
        "summary": "文章讨论了C#中async/await的工作原理，并参考了两篇相关技术博客，介绍了异步编程在.NET中的应用及其底层机制。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "藏师傅做了 DeepSeek-Prover-V2 一图流帮你了解这个模型 网页生成这东西太方便了，把PDF扔进去直接就出来了",
        "url": "https://x.com/op7418/status/1917784643459506380",
        "source": "Twitter-歸藏",
        "hot": "",
        "time": "2025-05-01 03:34:24",
        "timestamp": 1746041664000,
        "published": "2025-05-01 03:34:24",
        "content": "藏师傅做了 DeepSeek-Prover-V2 一图流帮你了解这个模型\n网页生成这东西太方便了，把PDF扔进去直接就出来了\n歸藏(guizang.ai): Deepseek 放出了 DeepSeek-Prover-V2 的详细论文\n详细总结分析一下：\nProver-V2 是一个专为 Lean 4 形式化定理证明设计的开源大型语言模型。\n其核心目标是利用强化学习进行子目标分解，从而提升形式化数学推理能力。\n🌟核心方法与创新：\n1️⃣递归定理证明流水线 (Recursive Theorem Proving",
        "desc": "藏师傅做了 DeepSeek-Prover-V2 一图流帮你了解这个模型网页生成这东西太方便了，把PDF扔进去直接就出来了歸藏(guizang.ai): Deepseek 放出了 DeepSeek-Prover-V2 的详细论文详细总结分析一下：Prover-V2 是一个专为 Lean 4 形式化定理证明设计的开源大型语言模型。其核心目标是利用强化学习进行子目标分解，从而提升形式化数学推理能力。🌟核心方法与创新：1️⃣递归定理证明流水线 (Recursive Theorem Proving",
        "summary": "藏师傅介绍了DeepSeek-Prover-V2模型，该模型专为Lean 4形式化定理证明设计，利用强化学习提升数学推理能力，支持通过PDF生成内容。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "很多有趣的案例👍",
        "url": "https://x.com/dotey/status/1917812974959616051",
        "source": "Twitter-宝玉",
        "hot": "",
        "time": "2025-05-01 05:26:59",
        "timestamp": 1746048419000,
        "published": "2025-05-01 05:26:59",
        "content": "很多有趣的案例👍\nJamez Bondos: 💡 Awesome GPT-4o Images 项目地址：\nhttps://github.com/jamez-bondos/awesome-gpt4o-images\n💡 案例 77 使用的提示词： \"一枚精致的水晶球静静摆放在窗户旁温暖柔和的桌面上...内部自然地呈现出一个以【嫦娥奔月】为主题的迷你立体世界...\"",
        "desc": "很多有趣的案例👍Jamez Bondos: 💡 Awesome GPT-4o Images 项目地址：https://github.com/jamez-bondos/awesome-gpt4o-images💡 案例 77 使用的提示词： \"一枚精致的水晶球静静摆放在窗户旁温暖柔和的桌面上...内部自然地呈现出一个以【嫦娥奔月】为主题的迷你立体世界...\"",
        "summary": "新闻提到了一个使用GPT-4o生成图像的项目，并提供了一个具体的提示词案例。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "RT yang fei: 像素化 + 分段点亮 + 模拟LCD视觉效果和俄式掌机，有种反未来复古感😍，大家不妨尝试一下(参数在评论) @dotey",
        "url": "https://x.com/dotey/status/1917757873590854003",
        "source": "Twitter-宝玉",
        "hot": "",
        "time": "2025-05-01 01:34:40",
        "timestamp": 1746034480000,
        "published": "2025-05-01 01:34:40",
        "content": "RT yang fei\n像素化 + 分段点亮 + 模拟LCD视觉效果和俄式掌机，有种反未来复古感😍，大家不妨尝试一下(参数在评论) @dotey",
        "desc": "RT yang fei像素化 + 分段点亮 + 模拟LCD视觉效果和俄式掌机，有种反未来复古感😍，大家不妨尝试一下(参数在评论) @dotey",
        "summary": "新闻内容提到通过像素化、分段点亮和模拟LCD视觉效果，结合俄式掌机风格，呈现出一种复古的视觉体验，并邀请读者尝试。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "RT virushuo: epic赢了在加州对苹果的官司，细节很有趣。上次法院判决允许外链引导支付之后，Philip Schiller建议按照法院要求执行。但是CFO建议搞花招增加难度...",
        "url": "https://x.com/dotey/status/1917746831724839315",
        "source": "Twitter-宝玉",
        "hot": "",
        "time": "2025-05-01 00:50:20",
        "timestamp": 1746031820000,
        "published": "2025-05-01 00:50:20",
        "content": "RT virushuo\nepic赢了在加州对苹果的官司，细节很有趣。上次法院判决允许外链引导支付之后，Philip Schiller建议按照法院要求执行。但是CFO建议搞花招增加难度，Cook采用了这个建议，最终被认为是藐视法庭。想起苹果ai团队建议采购GPU，被CFO否决，最后ai全面落后。公司到CFO影响业务的状态，大概是不会有创新了。\n9to5Mac: Apple’s consequential App Store setback comes on the eve of a key event https://9to5mac.com/2025/04/30/apples-consequential-app-store-setback-comes-on-the-eve-of-a-key-event/ by @apollozac",
        "desc": "RT virushuoepic赢了在加州对苹果的官司，细节很有趣。上次法院判决允许外链引导支付之后，Philip Schiller建议按照法院要求执行。但是CFO建议搞花招增加难度，Cook采用了这个建议，最终被认为是藐视法庭。想起苹果ai团队建议采购GPU，被CFO否决，最后ai全面落后。公司到CFO影响业务的状态，大概是不会有创新了。9to5Mac: Apple’s consequential App Store setback comes on the eve of a key event https://9to5mac.com/2025/04/30/apples-consequential-app-store-setback-comes-on-the-eve-of-a-key-event/ by @apollozac",
        "summary": "Epic在加州对苹果的官司中获胜，法院允许外链引导支付。苹果高管曾建议规避执行，导致被认定藐视法庭。新闻还提到苹果CFO对AI团队采购GPU的否决影响了AI发展。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "用 AI 画乐高搭建的城市 注： - 可以用 AI 参考提示词示例帮你生成更多 - 本图用 sora 生成 提示词1: 创建一幅充满细节且色彩鲜艳的乐高风格西安钟楼广场场景。...",
        "url": "https://x.com/dotey/status/1917713810346872902",
        "source": "Twitter-宝玉",
        "hot": "",
        "time": "2025-04-30 22:52:56",
        "timestamp": 1746024776000,
        "published": "2025-04-30 22:52:56",
        "content": "用 AI 画乐高搭建的城市\n注：\n- 可以用 AI 参考提示词示例帮你生成更多\n- 本图用 sora 生成\n提示词1:\n创建一幅充满细节且色彩鲜艳的乐高风格西安钟楼广场场景。钟楼以典雅的传统中式乐高建筑呈现，顶部覆以金色和墨绿色乐高瓦片，周围环绕着繁忙的圆形街道，上面有众多造型逼真的乐高小汽车、公交车和自行车。街道两旁密集排列着以乐高搭建的商铺和商场，招牌色彩明亮，汉字标识清晰可见。乐高小人们正在街头行走、拍照、购物或休息聊天，充满活力。背景以晴朗的乐高蓝天、少量漂浮的乐高云朵和远处淡雅的乐高秦岭山脉烘托，整体呈现出欢乐且富有历史感的氛围。\n提示词2:\n创建一幅高度精细且色彩鲜艳的乐高版上海外滩景象。前景呈现经典的外滩历史建筑群，用乐高砖块精致还原西式与新古典主义风格的建筑立面，包括钟楼、穹顶、柱廊等细节。乐高小人们正在沿江漫步、拍照、观光，街道两旁停靠着经典样式的乐高汽车。背景是壮观的黄浦江，以蓝色半透明乐高砖拼接，江面上有乐高渡轮和游览船。对岸的浦东陆家嘴高楼林立，包括东方明珠塔、上海中心、金茂大厦和环球金融中心，这些超现代乐高摩天大楼色彩丰富、造型逼真。天空为乐高明亮蓝色，点缀少量白色乐高积木云朵，整体呈现充满活力与现代感的视觉效果。\n提示词3:\n以真实乐高积木精心搭建的西安小吃街场景，采用逼真的等距视角拍摄，凸显微缩景深效果。街道两旁密集排列着各种美食摊位与店铺，招牌上写着“羊肉泡馍”、“肉夹馍”、“凉皮”等经典小吃名称，鲜艳明亮，富有生活气息。街景中乐高小人动作生动逼真：摊主在热情招呼顾客，食客手持美食边走边吃，乐高车辆如送货的三轮车穿行其中。前景的摊位和美食细节清晰锐利，背景的摊位和人群逐渐虚化，强化真实而微观的视觉体验。柔和的自然光线营造出塑料材质细腻的反光与柔和阴影，小的刮擦痕迹和指纹增加触觉真实感。整体以电影感的构图捕捉街头烟火气的微缩乐高场景。\n提示词4:\n打造一幅充满传统韵味的上海豫园老街乐高场景。画面中心是以黑色与红色乐高砖精心搭建的传统中式乐高建筑，如湖心亭和九曲桥，屋檐与屋脊线条清晰优美。桥下湖水以透明浅蓝色乐高积木拼砌，乐高小人正沿桥观赏或拍照。周围的老街以红色和棕色乐高砖铺就，两旁排列着细致逼真的传统店铺，售卖乐高版的糖画、汤包、小笼包和特色纪念品。街道上方悬挂着红色与黄色的乐高灯笼，乐高游客与居民络绎不绝，表现热闹繁华的景象。背景配以明朗的乐高蓝天与柔和的阳光，整体画面温暖而富有人情味。",
        "desc": "用 AI 画乐高搭建的城市注：- 可以用 AI 参考提示词示例帮你生成更多- 本图用 sora 生成提示词1:创建一幅充满细节且色彩鲜艳的乐高风格西安钟楼广场场景。钟楼以典雅的传统中式乐高建筑呈现，顶部覆以金色和墨绿色乐高瓦片，周围环绕着繁忙的圆形街道，上面有众多造型逼真的乐高小汽车、公交车和自行车。街道两旁密集排列着以乐高搭建的商铺和商场，招牌色彩明亮，汉字标识清晰可见。乐高小人们正在街头行走、拍照、购物或休息聊天，充满活力。背景以晴朗的乐高蓝天、少量漂浮的乐高云朵和远处淡雅的乐高秦岭山脉烘托，整体呈现出欢乐且富有历史感的氛围。提示词2:创建一幅高度精细且色彩鲜艳的乐高版上海外滩景象。前景呈现经典的外滩历史建筑群，用乐高砖块精致还原西式与新古典主义风格的建筑立面，包括钟楼、穹顶、柱廊等细节。乐高小人们正在沿江漫步、拍照、观光，街道两旁停靠着经典样式的乐高汽车。背景是壮观的黄浦江，以蓝色半透明乐高砖拼接，江面上有乐高渡轮和游览船。对岸的浦东陆家嘴高楼林立，包括东方明珠塔、上海中心、金茂大厦和环球金融中心，这些超现代乐高摩天大楼色彩丰富、造型逼真。天空为乐高明亮蓝色，点缀少量白色乐高积木云朵，整体呈现充满活力与现代感的视觉效果。提示词3:以真实乐高积木精心搭建的西安小吃街场景，采用逼真的等距视角拍摄，凸显微缩景深效果。街道两旁密集排列着各种美食摊位与店铺，招牌上写着“羊肉泡馍”、“肉夹馍”、“凉皮”等经典小吃名称，鲜艳明亮，富有生活气息。街景中乐高小人动作生动逼真：摊主在热情招呼顾客，食客手持美食边走边吃，乐高车辆如送货的三轮车穿行其中。前景的摊位和美食细节清晰锐利，背景的摊位和人群逐渐虚化，强化真实而微观的视觉体验。柔和的自然光线营造出塑料材质细腻的反光与柔和阴影，小的刮擦痕迹和指纹增加触觉真实感。整体以电影感的构图捕捉街头烟火气的微缩乐高场景。提示词4:打造一幅充满传统韵味的上海豫园老街乐高场景。画面中心是以黑色与红色乐高砖精心搭建的传统中式乐高建筑，如湖心亭和九曲桥，屋檐与屋脊线条清晰优美。桥下湖水以透明浅蓝色乐高积木拼砌，乐高小人正沿桥观赏或拍照。周围的老街以红色和棕色乐高砖铺就，两旁排列着细致逼真的传统店铺，售卖乐高版的糖画、汤包、小笼包和特色纪念品。街道上方悬挂着红色与黄色的乐高灯笼，乐高游客与居民络绎不绝，表现热闹繁华的景象。背景配以明朗的乐高蓝天与柔和的阳光，整体画面温暖而富有人情味。",
        "summary": "新闻介绍了使用AI工具Sora生成乐高风格的城市场景，包括西安钟楼广场、上海外滩、西安小吃街和上海豫园老街等，展示了AI在创意设计和视觉呈现中的应用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "RT 马东锡 NLP 🇸🇪: 「DeepSeek, Reasoning」论文 DeepSeek-Prover-V2: Advancing Formal Mathematical Reasoning via Reinforcement Learning for Subgoal...",
        "url": "https://x.com/dotey/status/1917675204932780069",
        "source": "Twitter-宝玉",
        "hot": "",
        "time": "2025-04-30 19:38:52",
        "timestamp": 1746013132000,
        "published": "2025-04-30 19:38:52",
        "content": "RT 马东锡 NLP 🇸🇪\n「DeepSeek, Reasoning」论文\nDeepSeek-Prover-V2: Advancing Formal Mathematical Reasoning via Reinforcement Learning for Subgoal Decomposition\n用\"sorry\"做占位符，sorry，除了硬核，无法可说。\nDeepSeek这篇在reasoning的追求上，到了一个让普通老百姓不能理解的程度。\nDeepSeek 的一系列推理模型，已经用test time scaling的方法，证明它有做奥赛数学题的reasoning能力。\n但这不够，这篇论文不要已经work的非正式性自然语言推理过程，一定要formal theorem proving，要用数学正式表达的形式化推理，。怎么评价呢，“挺卷的反正就” 。\n方法上，DeepSeek把“非正式分解 + 递归求解 + 强化学习”整合为一条pipeline：\n- DeepSeek-V3 先用自然语言写出解题思路，同时把每一步翻译成 Lean 子目标（以 sorry 结尾）。\n- 一个 7B 参数的 prover 模型递归地填补这些 sorry，得到完整 Lean 证明。\n- 拼接后的“CoT + 正式证明”作为冷启动数据，再用 RL 微调，显式奖励\"证明结构与分解保持一致\"。\n看完论文，一头雾水，为啥用sorry做占字符？\n问了一下专门做数学研究的朋友，才知道，微软的Lean是专门用来做交互式地构造严谨证明，sorry就是Lean的本身对数学推导的占字符。😱\n读完其他优秀的论文，我总会感叹exciting，amazing。\n这篇只有，无法可说，sorry....",
        "desc": "RT 马东锡 NLP 🇸🇪「DeepSeek, Reasoning」论文DeepSeek-Prover-V2: Advancing Formal Mathematical Reasoning via Reinforcement Learning for Subgoal Decomposition用\"sorry\"做占位符，sorry，除了硬核，无法可说。DeepSeek这篇在reasoning的追求上，到了一个让普通老百姓不能理解的程度。DeepSeek 的一系列推理模型，已经用test time scaling的方法，证明它有做奥赛数学题的reasoning能力。但这不够，这篇论文不要已经work的非正式性自然语言推理过程，一定要formal theorem proving，要用数学正式表达的形式化推理，。怎么评价呢，“挺卷的反正就” 。方法上，DeepSeek把“非正式分解 + 递归求解 + 强化学习”整合为一条pipeline：- DeepSeek-V3 先用自然语言写出解题思路，同时把每一步翻译成 Lean 子目标（以 sorry 结尾）。- 一个 7B 参数的 prover 模型递归地填补这些 sorry，得到完整 Lean 证明。- 拼接后的“CoT + 正式证明”作为冷启动数据，再用 RL 微调，显式奖励\"证明结构与分解保持一致\"。看完论文，一头雾水，为啥用sorry做占字符？问了一下专门做数学研究的朋友，才知道，微软的Lean是专门用来做交互式地构造严谨证明，sorry就是Lean的本身对数学推导的占字符。😱读完其他优秀的论文，我总会感叹exciting，amazing。这篇只有，无法可说，sorry....",
        "summary": "DeepSeek-Prover-V2论文提出了一种结合自然语言推理、形式化证明和强化学习的方法，用于提升数学推理能力。该方法使用Lean语言进行形式化证明，并通过递归填补子目标来完成严谨的数学证明。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "睡不着继续翻了翻 Reddit, 博主 matteogeniaccio 使用推测性解码能让 Qwen3-32B 的速度提升2倍, 感兴趣的同学可以照着他的命令试试 -c 32768 -md Qwen_Qwen3-0.6...",
        "url": "https://x.com/karminski3/status/1917809170235208066",
        "source": "Twitter-karminski-牙医",
        "hot": "",
        "time": "2025-05-01 05:11:52",
        "timestamp": 1746047512000,
        "published": "2025-05-01 05:11:52",
        "content": "睡不着继续翻了翻 Reddit, 博主 matteogeniaccio 使用推测性解码能让 Qwen3-32B 的速度提升2倍, 感兴趣的同学可以照着他的命令试试\n-c 32768 -md Qwen_Qwen3-0.6B-Q6_K.gguf -ngld 99 -cd 8192 -devd CUDA0 -fa -ctk q8_0 -ctv q8_0\n原帖地址：http://www.reddit.com/r/LocalLLaMA/comments/1kbg2rl/waiting_for_qwen3_32b_coder_speculative_decoding/",
        "desc": "睡不着继续翻了翻 Reddit, 博主 matteogeniaccio 使用推测性解码能让 Qwen3-32B 的速度提升2倍, 感兴趣的同学可以照着他的命令试试-c 32768 -md Qwen_Qwen3-0.6B-Q6_K.gguf -ngld 99 -cd 8192 -devd CUDA0 -fa -ctk q8_0 -ctv q8_0原帖地址：http://www.reddit.com/r/LocalLLaMA/comments/1kbg2rl/waiting_for_qwen3_32b_coder_speculative_decoding/",
        "summary": "Reddit博主matteogeniaccio分享了使用推测性解码技术使Qwen3-32B模型速度提升两倍的方法，并提供了相关命令参数。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "极限测试！Qwen3 写代码+画画！究竟是不是开源最强模型？ 本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外...",
        "url": "https://x.com/karminski3/status/1917785603976094000",
        "source": "Twitter-karminski-牙医",
        "hot": "",
        "time": "2025-05-01 03:38:13",
        "timestamp": 1746041893000,
        "published": "2025-05-01 03:38:13",
        "content": "极限测试！Qwen3 写代码+画画！究竟是不是开源最强模型？\n本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外本次还包括了 Qwen3 的幻觉和文本召回率测试解读~\n给大家做到一个视频全面了解 Qwen3 性能!\nhttps://youtu.be/kph_c6LovQA",
        "desc": "极限测试！Qwen3 写代码+画画！究竟是不是开源最强模型？本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外本次还包括了 Qwen3 的幻觉和文本召回率测试解读~给大家做到一个视频全面了解 Qwen3 性能!https://youtu.be/kph_c6LovQA",
        "summary": "新闻介绍了Qwen3模型在代码编写和绘画方面的性能测试，包括KCORES-LLM-Arena和morden-art测试集，并提供视频展示其表现。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Qwen3 测试视频来啦！👏 本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外本次还包括了 Qwen3 的幻觉和文...",
        "url": "https://x.com/karminski3/status/1917779143032463751",
        "source": "Twitter-karminski-牙医",
        "hot": "",
        "time": "2025-05-01 03:12:32",
        "timestamp": 1746040352000,
        "published": "2025-05-01 03:12:32",
        "content": "Qwen3 测试视频来啦！👏\n本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外本次还包括了 Qwen3 的幻觉和文本召回率测试解读~\n给大家做到一个视频全面了解 Qwen3 性能!\n( 好了，我终于可以去睡了, 祝各位假期愉快! )\n#大模型竞技场 #Qwen3 #qwen",
        "desc": "Qwen3 测试视频来啦！👏本次不但有大家喜闻乐见的 KCORES-LLM-Arena 测试，而且还增加了新测试集 morden-art 供大家预览！另外本次还包括了 Qwen3 的幻觉和文本召回率测试解读~给大家做到一个视频全面了解 Qwen3 性能!( 好了，我终于可以去睡了, 祝各位假期愉快! )#大模型竞技场 #Qwen3 #qwen",
        "summary": "Qwen3 发布测试视频，包含 KCORES-LLM-Arena 和新测试集 morden-art 的测试内容，并对幻觉和文本召回率进行了分析，全面展示 Qwen3 的性能。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "来看看昨天发布的 DeepSeek-Prover-V2-671B 有哪些新鲜内容： 先用 DeepSeek-V3 开发了一个简单而有效的递归定理证明管道，用来构建冷启动数据集。 然后使用冷启...",
        "url": "https://x.com/karminski3/status/1917746039186223330",
        "source": "Twitter-karminski-牙医",
        "hot": "",
        "time": "2025-05-01 01:01:00",
        "timestamp": 1746032460000,
        "published": "2025-05-01 01:01:00",
        "content": "来看看昨天发布的 DeepSeek-Prover-V2-671B 有哪些新鲜内容：\n先用 DeepSeek-V3 开发了一个简单而有效的递归定理证明管道，用来构建冷启动数据集。\n然后使用冷启动数据集先微调，然后强化学习，测了之后发现在 MiniF2F-test 测试中完成了 88.9% 的问题，直接第一名\n想要这个数据集吗？让然可以送给你，直接开源，叫做 ProverBench 数据集， 5 个问题来自 AIME (美国奥数的前置选拔赛之一)，其余 310 个问题来自精选的教材示例和教育教程\n不相信 MiniF2F-test 测试中完成了 88.9% 的问题？给你们下载 Prover 写的答案自己看\n心动了吗? 想玩一玩吗? 运行教程也给你！\n给跪了..........\n(本人菜鸡，如果解读有误恳请指正)",
        "desc": "来看看昨天发布的 DeepSeek-Prover-V2-671B 有哪些新鲜内容：先用 DeepSeek-V3 开发了一个简单而有效的递归定理证明管道，用来构建冷启动数据集。然后使用冷启动数据集先微调，然后强化学习，测了之后发现在 MiniF2F-test 测试中完成了 88.9% 的问题，直接第一名想要这个数据集吗？让然可以送给你，直接开源，叫做 ProverBench 数据集， 5 个问题来自 AIME (美国奥数的前置选拔赛之一)，其余 310 个问题来自精选的教材示例和教育教程不相信 MiniF2F-test 测试中完成了 88.9% 的问题？给你们下载 Prover 写的答案自己看心动了吗? 想玩一玩吗? 运行教程也给你！给跪了..........(本人菜鸡，如果解读有误恳请指正)",
        "summary": "DeepSeek-Prover-V2-671B 发布，使用 DeepSeek-V3 构建冷启动数据集，并在 MiniF2F-test 测试中取得 88.9% 的成绩，开源 ProverBench 数据集。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "牛逼👍",
        "url": "https://x.com/karminski3/status/1917660840301334934",
        "source": "Twitter-karminski-牙医",
        "hot": "",
        "time": "2025-04-30 19:22:27",
        "timestamp": 1746012147000,
        "published": "2025-04-30 19:22:27",
        "content": "牛逼👍\nyihong0618: 开源了\nhttps://github.com/yihong0618/running_page/pull/829",
        "desc": "牛逼👍yihong0618: 开源了https://github.com/yihong0618/running_page/pull/829",
        "summary": "新闻标题为'牛逼👍'，内容中包含一个GitHub链接和一张图片，可能与开源项目相关。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "好看的 VS Code 主题 Github https://github.com/nabinkhair42/vtheme 它的主页也是 VS Code 主题风格，有点意思。 https://vthemes.nabinkhair.com.np/",
        "url": "https://x.com/geekbb/status/1917817371068359132",
        "source": "Twitter-Geek",
        "hot": "",
        "time": "2025-05-01 05:44:27",
        "timestamp": 1746049467000,
        "published": "2025-05-01 05:44:27",
        "content": "好看的 VS Code 主题\nGithub https://github.com/nabinkhair42/vtheme\n它的主页也是 VS Code 主题风格，有点意思。\nhttps://vthemes.nabinkhair.com.np/",
        "desc": "好看的 VS Code 主题Github https://github.com/nabinkhair42/vtheme它的主页也是 VS Code 主题风格，有点意思。https://vthemes.nabinkhair.com.np/",
        "summary": "新闻介绍了名为vtheme的VS Code主题，其主页设计也采用了VS Code主题风格，并提供了GitHub链接和主页链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "这个好~ 轻量级信息聚合(RSS)工具，一站式了解各个信息源的新鲜事。自动整理多个来源的新闻资讯，用 AI 生成简明摘要帮你快速抓重点，支持自由添加订阅源、选择A...",
        "url": "https://x.com/geekbb/status/1917743951999819898",
        "source": "Twitter-Geek",
        "hot": "",
        "time": "2025-05-01 00:52:42",
        "timestamp": 1746031962000,
        "published": "2025-05-01 00:52:42",
        "content": "这个好~ 轻量级信息聚合(RSS)工具，一站式了解各个信息源的新鲜事。自动整理多个来源的新闻资讯，用 AI 生成简明摘要帮你快速抓重点，支持自由添加订阅源、选择AI模型和设置更新频率。可轻松部署到 GitHub Pages / Vercel / Docker。\nFeedMe https://github.com/Seanium/feedme\n🌐 https://feedme.icu/",
        "desc": "这个好~ 轻量级信息聚合(RSS)工具，一站式了解各个信息源的新鲜事。自动整理多个来源的新闻资讯，用 AI 生成简明摘要帮你快速抓重点，支持自由添加订阅源、选择AI模型和设置更新频率。可轻松部署到 GitHub Pages / Vercel / Docker。FeedMe https://github.com/Seanium/feedme🌐 https://feedme.icu/",
        "summary": "FeedMe是一款轻量级RSS信息聚合工具，支持自动整理新闻资讯并用AI生成摘要，用户可自由添加订阅源并部署到GitHub Pages等平台。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Re 晒一下我 AI 4月用量",
        "url": "https://x.com/geekbb/status/1917741289753436407",
        "source": "Twitter-Geek",
        "hot": "",
        "time": "2025-05-01 00:42:08",
        "timestamp": 1746031328000,
        "published": "2025-05-01 00:42:08",
        "content": "Re 晒一下我 AI 4月用量",
        "desc": "Re 晒一下我 AI 4月用量",
        "summary": "用户分享了自己在4月份使用AI的情况，并附上了一张图片。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Grok3 一个月才用 $5 不到，两个帐号 $10 ……我还是用得少",
        "url": "https://x.com/geekbb/status/1917740552126357722",
        "source": "Twitter-Geek",
        "hot": "",
        "time": "2025-05-01 00:39:12",
        "timestamp": 1746031152000,
        "published": "2025-05-01 00:39:12",
        "content": "Grok3 一个月才用 $5 不到，两个帐号 $10 ……我还是用得少",
        "desc": "Grok3 一个月才用 $5 不到，两个帐号 $10 ……我还是用得少",
        "summary": "用户分享使用Grok3的费用情况，表示一个月使用费用不到5美元，两个账号共10美元，并认为自己使用量较少。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "RT xiaoheijw: 受到https://github.com/reorx/mistral_ocr_pdf的启发，糊了一个Dify plugin https://github.com/kenwoodjw/gpt4o_ocr_pdf",
        "url": "https://x.com/yihong0618/status/1917750627763118174",
        "source": "Twitter-yihong0618",
        "hot": "",
        "time": "2025-05-01 01:15:21",
        "timestamp": 1746033321000,
        "published": "2025-05-01 01:15:21",
        "content": "RT xiaoheijw\n受到https://github.com/reorx/mistral_ocr_pdf的启发，糊了一个Dify plugin https://github.com/kenwoodjw/gpt4o_ocr_pdf",
        "desc": "RT xiaoheijw受到https://github.com/reorx/mistral_ocr_pdf的启发，糊了一个Dify plugin https://github.com/kenwoodjw/gpt4o_ocr_pdf",
        "summary": "受到GitHub上一个OCR PDF项目启发，用户开发了一个Dify插件，并将其发布在GitHub上。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "大家看下我设计的这个T恤怎么样？ 灵感来自于很多年前的一个博客“不许联想”和刚刚发布的 Qwen3 @alibaba_qwen",
        "url": "https://x.com/miantiao_me/status/1917788545365721523",
        "source": "Twitter-面条",
        "hot": "",
        "time": "2025-05-01 03:49:54",
        "timestamp": 1746042594000,
        "published": "2025-05-01 03:49:54",
        "content": "大家看下我设计的这个T恤怎么样？\n灵感来自于很多年前的一个博客“不许联想”和刚刚发布的 Qwen3\n@alibaba_qwen",
        "desc": "大家看下我设计的这个T恤怎么样？灵感来自于很多年前的一个博客“不许联想”和刚刚发布的 Qwen3@alibaba_qwen",
        "summary": "用户分享了自己设计的T恤，灵感来源于多年前的博客“不许联想”和刚刚发布的Qwen3。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🌟 Introducing new effects:\n❤️ Kiss, Hug, Hand H...",
        "url": "https://x.com/Kling_ai/status/1917873972429111341",
        "source": "Twitter-Kling AI",
        "content": "🌟 Introducing new effects:\n❤️ Kiss, Hug, Hand Heart, or… playfully Fight it out! 💥\n📸 Upload a photo with your favorite person—\nWhether it’s your BFF, your crush, or your idol—get closer, get weirder, get real.\n#KlingAI #KlingEffects https://t.co/hXTiJp6tcQ",
        "hot": "",
        "time": "2025-05-01 09:29:22",
        "timestamp": 1746091762000,
        "published": "2025-05-01 09:29:22",
        "desc": "🌟 Introducing new effects:\n❤️ Kiss, Hug, Hand Heart, or… playfully Fight it out! 💥\n📸 Upload a photo with your favorite person—\nWhether it’s your BFF, your crush, or your idol—get closer, get weirder, get real.\n#KlingAI #KlingEffects https://t.co/hXTiJp6tcQ",
        "summary": "KlingAI推出新的特效功能，用户可上传照片并添加如亲吻、拥抱、手心爱心等互动效果，增强照片的趣味性和表达力。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/nknop3Mr7J",
        "url": "https://x.com/elonmusk/status/1917836240776241502",
        "source": "Twitter-Elon Musk",
        "content": "https://t.co/nknop3Mr7J",
        "hot": "",
        "time": "2025-05-01 06:59:26",
        "timestamp": 1746082766000,
        "published": "2025-05-01 06:59:26",
        "desc": "https://t.co/nknop3Mr7J",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "It’s official: @SAP Databricks is now GA!\nSAP c...",
        "url": "https://x.com/databricks/status/1917806507590103515",
        "source": "Twitter-Databricks",
        "content": "It’s official: @SAP Databricks is now GA!\nSAP customers can now unlock data intelligence across their SAP data and external sources—enabling improved governance, advanced analytics, and AI use cases. Learn more: https://t.co/p0CpfY0VmG https://t.co/ZieswV7evH",
        "hot": "",
        "time": "2025-05-01 05:01:17",
        "timestamp": 1746075677000,
        "published": "2025-05-01 05:01:17",
        "desc": "It’s official: @SAP Databricks is now GA!\nSAP customers can now unlock data intelligence across their SAP data and external sources—enabling improved governance, advanced analytics, and AI use cases. Learn more: https://t.co/p0CpfY0VmG https://t.co/ZieswV7evH",
        "summary": "SAP Databricks现已正式发布，使客户能够利用SAP数据和外部数据源进行数据分析、治理和AI应用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/r0qpwRlYQr",
        "url": "https://x.com/garrytan/status/1917790562838798769",
        "source": "Twitter-Garry Tan",
        "content": "https://t.co/r0qpwRlYQr",
        "hot": "",
        "time": "2025-05-01 03:57:55",
        "timestamp": 1746071875000,
        "published": "2025-05-01 03:57:55",
        "desc": "https://t.co/r0qpwRlYQr",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Microsoft’s most capable new Phi 4 AI model riv...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917787086440063067",
        "source": "Twitter-Kyle Wiggers",
        "content": "Microsoft’s most capable new Phi 4 AI model rivals the performance of far larger systems https://t.co/SMmHAy3amN",
        "hot": "",
        "time": "2025-05-01 03:44:06",
        "timestamp": 1746071046000,
        "published": "2025-05-01 03:44:06",
        "desc": "Microsoft’s most capable new Phi 4 AI model rivals the performance of far larger systems https://t.co/SMmHAy3amN",
        "summary": "Microsoft发布了新的Phi 4 AI模型，其性能可与更大规模的系统相媲美。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "In 18 mo or so, 30% of design will also be done...",
        "url": "https://x.com/Suhail/status/1917786590887436392",
        "source": "Twitter-Suhail",
        "content": "In 18 mo or so, 30% of design will also be done by AI. It is inevitable. Taste will matter more than ever.",
        "hot": "",
        "time": "2025-05-01 03:42:08",
        "timestamp": 1746070928000,
        "published": "2025-05-01 03:42:08",
        "desc": "In 18 mo or so, 30% of design will also be done by AI. It is inevitable. Taste will matter more than ever.",
        "summary": "新闻提到，在大约18个月内，30%的设计工作将由AI完成，强调品味将变得比以往更加重要。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "直接在代码编辑器里查看Deepwiki内容的MCP：deepwiki-mcp，相当于内置了个文...",
        "url": "https://x.com/aigclink/status/1917780163435323674",
        "source": "Twitter-AIGCLINK",
        "content": "直接在代码编辑器里查看Deepwiki内容的MCP：deepwiki-mcp，相当于内置了个文档浏览器，非官方的但比较实用\n它通过MCP获取Deepwiki的URL，抓取相关页面，转换为Markdown格式，并把结果返回给代码编辑器\n那你就可以直接在Cursor等中查看，不用再打开浏览器，即可实时获取最新文档了 https://t.co/gkL4v7GH0y",
        "hot": "",
        "time": "2025-05-01 03:16:36",
        "timestamp": 1746069396000,
        "published": "2025-05-01 03:16:36",
        "desc": "直接在代码编辑器里查看Deepwiki内容的MCP：deepwiki-mcp，相当于内置了个文档浏览器，非官方的但比较实用\n它通过MCP获取Deepwiki的URL，抓取相关页面，转换为Markdown格式，并把结果返回给代码编辑器\n那你就可以直接在Cursor等中查看，不用再打开浏览器，即可实时获取最新文档了 https://t.co/gkL4v7GH0y",
        "summary": "新闻介绍了一个名为deepwiki-mcp的工具，可在代码编辑器中直接查看Deepwiki内容，无需打开浏览器，支持实时获取最新文档。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "OH (in sf): \"the thing about these tech people ...",
        "url": "https://x.com/bentossell/status/1917779740985065854",
        "source": "Twitter-Ben Tossell",
        "content": "OH (in sf): \"the thing about these tech people is they dont quite get it\"",
        "hot": "",
        "time": "2025-05-01 03:14:55",
        "timestamp": 1746069295000,
        "published": "2025-05-01 03:14:55",
        "desc": "OH (in sf): \"the thing about these tech people is they dont quite get it\"",
        "summary": "新闻内容为一条简短的评论，提到‘这些科技人士似乎没有真正理解事情’，但未提供更多具体信息。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🤔 https://t.co/6d0ZfImp10",
        "url": "https://x.com/Austen/status/1917777979712680372",
        "source": "Twitter-Austen Allred",
        "content": "🤔 https://t.co/6d0ZfImp10",
        "hot": "",
        "time": "2025-05-01 03:07:55",
        "timestamp": 1746068875000,
        "published": "2025-05-01 03:07:55",
        "desc": "🤔 https://t.co/6d0ZfImp10",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "SMBs don't have time for hype—they need REAL AI...",
        "url": "https://x.com/TheSixFiveMedia/status/1917772017442644186",
        "source": "Twitter-Six Five Media",
        "content": "SMBs don't have time for hype—they need REAL AI solutions. 📊 @Tiffani_Bova & @Erik_M_Day from @DellTech break down how they're making AI work for small businesses. $DELL #AI #SMB #Tech https://t.co/H8N5e6eCgx",
        "hot": "",
        "time": "2025-05-01 02:44:14",
        "timestamp": 1746067454000,
        "published": "2025-05-01 02:44:14",
        "desc": "SMBs don't have time for hype—they need REAL AI solutions. 📊 @Tiffani_Bova & @Erik_M_Day from @DellTech break down how they're making AI work for small businesses. $DELL #AI #SMB #Tech https://t.co/H8N5e6eCgx",
        "summary": "该新闻讨论了中小企业（SMBs）对实际AI解决方案的需求，而非炒作。Dell的专家Tiffani Bova和Erik M. Day分享了如何为小企业实现AI应用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "World partners with Tinder, Visa to bring its I...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917769659371094503",
        "source": "Twitter-Kyle Wiggers",
        "content": "World partners with Tinder, Visa to bring its ID-verifying tech to more places https://t.co/aHJDhh8Lpf",
        "hot": "",
        "time": "2025-05-01 02:34:51",
        "timestamp": 1746066891000,
        "published": "2025-05-01 02:34:51",
        "desc": "World partners with Tinder, Visa to bring its ID-verifying tech to more places https://t.co/aHJDhh8Lpf",
        "summary": "World与Tinder和Visa合作，将其实名认证技术推广到更多地方。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "goodbye, GPT-4. you kicked off a revolution.\nw...",
        "url": "https://x.com/sama/status/1917766910911078571",
        "source": "Twitter-Sam Altman",
        "content": "goodbye, GPT-4. you kicked off a revolution.\nwe will proudly keep your weights on a special hard drive to give to some historians in the future.",
        "hot": "",
        "time": "2025-05-01 02:23:56",
        "timestamp": 1746066236000,
        "published": "2025-05-01 02:23:56",
        "desc": "goodbye, GPT-4. you kicked off a revolution.\nwe will proudly keep your weights on a special hard drive to give to some historians in the future.",
        "summary": "新闻标题和内容表达了对GPT-4的告别，并提到将保留其权重数据供未来历史学家研究。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "I just want to know how much Epic spent on liti...",
        "url": "https://x.com/Austen/status/1917766149162279419",
        "source": "Twitter-Austen Allred",
        "content": "I just want to know how much Epic spent on litigation against Apple.\nCan’t even imagine how much it all cost them.",
        "hot": "",
        "time": "2025-05-01 02:20:54",
        "timestamp": 1746066054000,
        "published": "2025-05-01 02:20:54",
        "desc": "I just want to know how much Epic spent on litigation against Apple.\nCan’t even imagine how much it all cost them.",
        "summary": "新闻内容表达了对Epic Games在与苹果公司诉讼中所花费金额的疑问，认为诉讼成本可能非常高。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Our team had been working hard for this release...",
        "url": "https://x.com/sytelus/status/1917762872182202494",
        "source": "Twitter-Shital Shah",
        "content": "Our team had been working hard for this release and that day is here!\n🚀 Phi-4-Reasoning (14 B params) + its RL-boosted sibling Phi-4-Reasoning-Plus punch way above their weight.\nThink “small-model swagger” that beats or ties 70B-671B giants on tough reasoning tasks! https://t.co/ryFAILzRsC",
        "hot": "",
        "time": "2025-05-01 02:07:53",
        "timestamp": 1746065273000,
        "published": "2025-05-01 02:07:53",
        "desc": "Our team had been working hard for this release and that day is here!\n🚀 Phi-4-Reasoning (14 B params) + its RL-boosted sibling Phi-4-Reasoning-Plus punch way above their weight.\nThink “small-model swagger” that beats or ties 70B-671B giants on tough reasoning tasks! https://t.co/ryFAILzRsC",
        "summary": "团队发布了Phi-4-Reasoning和Phi-4-Reasoning-Plus两款模型，它们在参数量较少的情况下，在复杂推理任务上表现优异，甚至可与更大参数量的模型媲美。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Meta forecasted it would make $1.4T in revenue ...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917762144092725685",
        "source": "Twitter-Kyle Wiggers",
        "content": "Meta forecasted it would make $1.4T in revenue from generative AI by 2035 https://t.co/YfvetTZwEY",
        "hot": "",
        "time": "2025-05-01 02:05:00",
        "timestamp": 1746065100000,
        "published": "2025-05-01 02:05:00",
        "desc": "Meta forecasted it would make $1.4T in revenue from generative AI by 2035 https://t.co/YfvetTZwEY",
        "summary": "Meta预测到2035年，其通过生成式AI技术将实现1.4万亿美元的收入。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Phi-4-Mini-Reasoning\nExploring the Limits of S...",
        "url": "https://x.com/_akhaliq/status/1917761687723147707",
        "source": "Twitter-AK",
        "content": "Phi-4-Mini-Reasoning\nExploring the Limits of Small Reasoning Language Models in Math https://t.co/L9jm45tLmN",
        "hot": "",
        "time": "2025-05-01 02:03:11",
        "timestamp": 1746064991000,
        "published": "2025-05-01 02:03:11",
        "desc": "Phi-4-Mini-Reasoning\nExploring the Limits of Small Reasoning Language Models in Math https://t.co/L9jm45tLmN",
        "summary": "新闻标题为Phi-4-Mini-Reasoning，内容涉及探索小型推理语言模型在数学领域的极限。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "小米已入局大模型行列，昨天放出了MiMo-7B，其核心是能解决数学以及代码等复杂的推理问题，说...",
        "url": "https://x.com/aigclink/status/1917760723016638506",
        "source": "Twitter-AIGCLINK",
        "content": "小米已入局大模型行列，昨天放出了MiMo-7B，其核心是能解决数学以及代码等复杂的推理问题，说是性能超32B，MiMo-7B-RL媲美OpenAI o1-mini\n在数学AIME24/25上分别是68.2分和55.4分，超过了OpenAI o1-mini、QwQ-32B-preview\n在代码LiveCodeBench v5上达到了57.8分\n提供了四个版本： https://t.co/siddrZLv0a",
        "hot": "",
        "time": "2025-05-01 01:59:21",
        "timestamp": 1746064761000,
        "published": "2025-05-01 01:59:21",
        "desc": "小米已入局大模型行列，昨天放出了MiMo-7B，其核心是能解决数学以及代码等复杂的推理问题，说是性能超32B，MiMo-7B-RL媲美OpenAI o1-mini\n在数学AIME24/25上分别是68.2分和55.4分，超过了OpenAI o1-mini、QwQ-32B-preview\n在代码LiveCodeBench v5上达到了57.8分\n提供了四个版本： https://t.co/siddrZLv0a",
        "summary": "小米发布了大模型MiMo-7B，专注于解决数学和代码等复杂推理问题，性能超过多个知名模型，并提供了多个版本供使用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Phi-4-reasoning Technical Report https://t.co/B...",
        "url": "https://x.com/_akhaliq/status/1917759111841673444",
        "source": "Twitter-AK",
        "content": "Phi-4-reasoning Technical Report https://t.co/BI6A9aHC3B",
        "hot": "",
        "time": "2025-05-01 01:52:57",
        "timestamp": 1746064377000,
        "published": "2025-05-01 01:52:57",
        "desc": "Phi-4-reasoning Technical Report https://t.co/BI6A9aHC3B",
        "summary": "新闻标题为Phi-4-reasoning Technical Report，并附有链接。新闻内容仅包含标题和链接，未提供更多细节。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Yes",
        "url": "https://x.com/tunguz/status/1917756215918223377",
        "source": "Twitter-Bojan Tunguz",
        "content": "Yes",
        "hot": "",
        "time": "2025-05-01 01:41:26",
        "timestamp": 1746063686000,
        "published": "2025-05-01 01:41:26",
        "desc": "Yes",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "If we want maximum American innovation, Apple w...",
        "url": "https://x.com/garrytan/status/1917745160664015197",
        "source": "Twitter-Garry Tan",
        "content": "If we want maximum American innovation, Apple would give free choice to consumers to choose OpenAI, Anthropic or Perplexity as their AI providers\nRemember how your OS has to let you choose your browser? That protected Google from Microsoft running the table. How about now? https://t.co/IG0QQbOeL0",
        "hot": "",
        "time": "2025-05-01 00:57:30",
        "timestamp": 1746061050000,
        "published": "2025-05-01 00:57:30",
        "desc": "If we want maximum American innovation, Apple would give free choice to consumers to choose OpenAI, Anthropic or Perplexity as their AI providers\nRemember how your OS has to let you choose your browser? That protected Google from Microsoft running the table. How about now? https://t.co/IG0QQbOeL0",
        "summary": "新闻讨论了如果希望实现最大化的美国创新，苹果应允许消费者自由选择OpenAI、Anthropic或Perplexity作为AI服务提供商，类比操作系统允许用户选择浏览器的做法。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Amazon launches Nova Premier, its most capable ...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917743075142652257",
        "source": "Twitter-Kyle Wiggers",
        "content": "Amazon launches Nova Premier, its most capable AI model yet https://t.co/1PPcaqIHa7",
        "hot": "",
        "time": "2025-05-01 00:49:13",
        "timestamp": 1746060553000,
        "published": "2025-05-01 00:49:13",
        "desc": "Amazon launches Nova Premier, its most capable AI model yet https://t.co/1PPcaqIHa7",
        "summary": "Amazon推出了其最强大的AI模型Nova Premier。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "What do you mean these coins are tied to real p...",
        "url": "https://x.com/nikitabier/status/1917742710028410962",
        "source": "Twitter-Nikita Bier",
        "content": "What do you mean these coins are tied to real products made by real people? We only know how to trade fleeting memes created by anonymous people",
        "hot": "",
        "time": "2025-05-01 00:47:46",
        "timestamp": 1746060466000,
        "published": "2025-05-01 00:47:46",
        "desc": "What do you mean these coins are tied to real products made by real people? We only know how to trade fleeting memes created by anonymous people",
        "summary": "新闻内容质疑加密货币与实际产品和真实人的关联，认为目前的交易更多是基于匿名人士创造的短暂网络迷因。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Excited for @alistairmbarr’s new BI newsletter!...",
        "url": "https://x.com/RamaswmySridhar/status/1917739624925127093",
        "source": "Twitter-sridhar",
        "content": "Excited for @alistairmbarr’s new BI newsletter!\nhttps://t.co/2G1g7qR3xo",
        "hot": "",
        "time": "2025-05-01 00:35:31",
        "timestamp": 1746059731000,
        "published": "2025-05-01 00:35:31",
        "desc": "Excited for @alistairmbarr’s new BI newsletter!\nhttps://t.co/2G1g7qR3xo",
        "summary": "新闻内容表达了对AlistairMBarr新推出的BI（商业智能）通讯的期待，并附有链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Now I am become Prompt Engineer, the destroyer ...",
        "url": "https://x.com/oh_that_hat/status/1917730336693444979",
        "source": "Twitter-Hattie Zhou",
        "content": "Now I am become Prompt Engineer, the destroyer of worlds 💥",
        "hot": "",
        "time": "2025-04-30 23:58:36",
        "timestamp": 1746057516000,
        "published": "2025-04-30 23:58:36",
        "desc": "Now I am become Prompt Engineer, the destroyer of worlds 💥",
        "summary": "新闻标题宣称成为Prompt Engineer，暗示在人工智能或相关技术领域有所作为。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Meet Solo Tech, one of the 10 international rec...",
        "url": "https://x.com/AIatMeta/status/1917727629601616030",
        "source": "Twitter-AI at Meta",
        "content": "Meet Solo Tech, one of the 10 international recipients of the second Llama Impact Grants.\nSolo Tech uses Llama to offer offline, multilingual AI support for underserved rural communities with limited internet access. This grant will help them to equip 50 rural centers with AI https://t.co/6YflcOlE7j",
        "hot": "",
        "time": "2025-04-30 23:47:51",
        "timestamp": 1746056871000,
        "published": "2025-04-30 23:47:51",
        "desc": "Meet Solo Tech, one of the 10 international recipients of the second Llama Impact Grants.\nSolo Tech uses Llama to offer offline, multilingual AI support for underserved rural communities with limited internet access. This grant will help them to equip 50 rural centers with AI https://t.co/6YflcOlE7j",
        "summary": "Solo Tech 获得了第二轮 Llama Impact Grants，他们利用 Llama 技术为缺乏互联网接入的农村社区提供离线、多语言的 AI 支持。该资助将帮助他们为 50 个农村中心配备 AI。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/U6tI9pdin6",
        "url": "https://x.com/elonmusk/status/1917726279195058338",
        "source": "Twitter-Elon Musk",
        "content": "https://t.co/U6tI9pdin6",
        "hot": "",
        "time": "2025-04-30 23:42:29",
        "timestamp": 1746056549000,
        "published": "2025-04-30 23:42:29",
        "desc": "https://t.co/U6tI9pdin6",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Starting today, we're testing new image editing...",
        "url": "https://x.com/GeminiApp/status/1917723571042017346",
        "source": "Twitter-Google Gemini App",
        "content": "Starting today, we're testing new image editing features in Gemini like changing backgrounds, swapping objects, and more. They’re rolling out gradually to all users. We're continuing to improve image generation, so stay tuned. https://t.co/JsurD7LRck",
        "hot": "",
        "time": "2025-04-30 23:31:43",
        "timestamp": 1746055903000,
        "published": "2025-04-30 23:31:43",
        "desc": "Starting today, we're testing new image editing features in Gemini like changing backgrounds, swapping objects, and more. They’re rolling out gradually to all users. We're continuing to improve image generation, so stay tuned. https://t.co/JsurD7LRck",
        "summary": "今日起，Gemini将测试新的图像编辑功能，包括更换背景、交换物体等，功能将逐步向所有用户推出。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Google’s Gemini chatbot gets upgraded image cre...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917720549519663229",
        "source": "Twitter-Kyle Wiggers",
        "content": "Google’s Gemini chatbot gets upgraded image creation tools https://t.co/vwbGgqHyI2",
        "hot": "",
        "time": "2025-04-30 23:19:43",
        "timestamp": 1746055183000,
        "published": "2025-04-30 23:19:43",
        "desc": "Google’s Gemini chatbot gets upgraded image creation tools https://t.co/vwbGgqHyI2",
        "summary": "Google的Gemini聊天机器人获得了升级的图像创作工具。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "3 quick updates! We've updated the V7 model wit...",
        "url": "https://x.com/midjourney/status/1917715712854089978",
        "source": "Twitter-Midjourney",
        "content": "3 quick updates! We've updated the V7 model with improved image quality and coherence. There's a new lightbox editor that's easier to use. Last we've added a new experimental aesthetics parameter --exp (goes 0 to 100, 0 is default) that pumps up details and creativity. Have fun!",
        "hot": "",
        "time": "2025-04-30 23:00:30",
        "timestamp": 1746054030000,
        "published": "2025-04-30 23:00:30",
        "desc": "3 quick updates! We've updated the V7 model with improved image quality and coherence. There's a new lightbox editor that's easier to use. Last we've added a new experimental aesthetics parameter --exp (goes 0 to 100, 0 is default) that pumps up details and creativity. Have fun!",
        "summary": "新闻介绍了V7模型的三个更新：图像质量与连贯性提升、新增易于使用的lightbox编辑器以及一个实验性美学参数--exp，用于增强细节和创意。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Join us at #Knowledge25 to explore how enterpri...",
        "url": "https://x.com/NVIDIAAI/status/1917715591588155585",
        "source": "Twitter-NVIDIA AI",
        "content": "Join us at #Knowledge25 to explore how enterprises are leveraging #agenticAI to boost productivity, personalize services, and unlock enterprise-wide efficiency.\nRegister now for NVIDIA expert sessions ➡️ https://t.co/kxOmE4QHPv https://t.co/quUcyLQQSv",
        "hot": "",
        "time": "2025-04-30 23:00:01",
        "timestamp": 1746054001000,
        "published": "2025-04-30 23:00:01",
        "desc": "Join us at #Knowledge25 to explore how enterprises are leveraging #agenticAI to boost productivity, personalize services, and unlock enterprise-wide efficiency.\nRegister now for NVIDIA expert sessions ➡️ https://t.co/kxOmE4QHPv https://t.co/quUcyLQQSv",
        "summary": "新闻邀请参加#Knowledge25活动，探讨企业如何利用#agenticAI提高生产力、个性化服务和实现企业整体效率。注册链接已提供。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Sf right now https://t.co/kcPYpER7S0",
        "url": "https://x.com/bentossell/status/1917714682787553336",
        "source": "Twitter-Ben Tossell",
        "content": "Sf right now https://t.co/kcPYpER7S0",
        "hot": "",
        "time": "2025-04-30 22:56:24",
        "timestamp": 1746053784000,
        "published": "2025-04-30 22:56:24",
        "desc": "Sf right now https://t.co/kcPYpER7S0",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "用 AI 画乐高搭建的城市\n注：\n- 可以用 AI 参考提示词示例帮你生成更多\n- 本图用 ...",
        "url": "https://x.com/dotey/status/1917713810346872902",
        "source": "Twitter-宝玉",
        "content": "用 AI 画乐高搭建的城市\n注：\n- 可以用 AI 参考提示词示例帮你生成更多\n- 本图用 sora 生成\n提示词1: https://t.co/ZFUIYJ0vld",
        "hot": "",
        "time": "2025-04-30 22:52:56",
        "timestamp": 1746053576000,
        "published": "2025-04-30 22:52:56",
        "desc": "用 AI 画乐高搭建的城市\n注：\n- 可以用 AI 参考提示词示例帮你生成更多\n- 本图用 sora 生成\n提示词1: https://t.co/ZFUIYJ0vld",
        "summary": "新闻介绍了使用AI工具生成乐高搭建城市图像的过程，并提到了使用Sora生成图像。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Attendees from past AI Conferences speak highly...",
        "url": "https://x.com/AIconference/status/1917711438724096455",
        "source": "Twitter-The AI Conference",
        "content": "Attendees from past AI Conferences speak highly of the insights, connections, and forward-thinking conversations. If you're serious about the future of AI, this is where it all comes together. Don’t miss your chance to be part of it.",
        "hot": "",
        "time": "2025-04-30 22:43:31",
        "timestamp": 1746053011000,
        "published": "2025-04-30 22:43:31",
        "desc": "Attendees from past AI Conferences speak highly of the insights, connections, and forward-thinking conversations. If you're serious about the future of AI, this is where it all comes together. Don’t miss your chance to be part of it.",
        "summary": "过去参加AI会议的与会者对会议的见解、联系和前瞻性讨论给予高度评价。如果你认真关注AI的未来，这里是汇聚一切的地方。不要错过参与的机会。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "AvatarFX has officially rolled out to all c.ai+...",
        "url": "https://x.com/character_ai/status/1917710884924973274",
        "source": "Twitter-Character.AI",
        "content": "AvatarFX has officially rolled out to all c.ai+ users — and the creations you’re sharing? Nothing short of masterpieces. #avatarfx #characterai\n🦞 Mob Boss Lobster\nProps to Character.‌AI user WeeklyBots for this underworld undersea icon.\n1/3 https://t.co/pNaM4diQ2w",
        "hot": "",
        "time": "2025-04-30 22:41:18",
        "timestamp": 1746052878000,
        "published": "2025-04-30 22:41:18",
        "desc": "AvatarFX has officially rolled out to all c.ai+ users — and the creations you’re sharing? Nothing short of masterpieces. #avatarfx #characterai\n🦞 Mob Boss Lobster\nProps to Character.‌AI user WeeklyBots for this underworld undersea icon.\n1/3 https://t.co/pNaM4diQ2w",
        "summary": "AvatarFX 已正式向所有 c.ai+ 用户推出，用户分享的创作被描述为杰作。新闻提到了 Character.AI 用户 WeeklyBots 的一个作品。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Vibe check is all you need https://t.co/0Vyf2fEMas",
        "url": "https://x.com/tunguz/status/1917709866619019334",
        "source": "Twitter-Bojan Tunguz",
        "content": "Vibe check is all you need https://t.co/0Vyf2fEMas",
        "hot": "",
        "time": "2025-04-30 22:37:16",
        "timestamp": 1746052636000,
        "published": "2025-04-30 22:37:16",
        "desc": "Vibe check is all you need https://t.co/0Vyf2fEMas",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "[ Alpha‑Factory v1 👁️✨ ]\nGlobal markets seep t...",
        "url": "https://x.com/ceobillionaire/status/1917708680432136427",
        "source": "Twitter-AGI.Eth",
        "content": "[ Alpha‑Factory v1 👁️✨ ]\nGlobal markets seep trillions in latent “alpha” opportunity:\n• Pricing dislocations\n• Supply‑chain inefficiencies\n• Policy loopholes\n• Etc!\nMulti‑Agent AGENTIC α‑AGI: https://t.co/WUfcDL5hjo\n#AGI #AIAgent #AGIALPHA https://t.co/EI0H30XzVx",
        "hot": "",
        "time": "2025-04-30 22:32:33",
        "timestamp": 1746052353000,
        "published": "2025-04-30 22:32:33",
        "desc": "[ Alpha‑Factory v1 👁️✨ ]\nGlobal markets seep trillions in latent “alpha” opportunity:\n• Pricing dislocations\n• Supply‑chain inefficiencies\n• Policy loopholes\n• Etc!\nMulti‑Agent AGENTIC α‑AGI: https://t.co/WUfcDL5hjo\n#AGI #AIAgent #AGIALPHA https://t.co/EI0H30XzVx",
        "summary": "新闻标题为[ Alpha‑Factory v1 👁️✨ ]，内容提到全球市场存在大量未被挖掘的‘alpha’机会，包括定价错位、供应链低效、政策漏洞等，并提及‘Multi‑Agent AGENTIC α‑AGI’相关链接，涉及AGI和AI代理技术。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "So much winning?! https://t.co/TSbWJ1xfDB",
        "url": "https://x.com/GaryMarcus/status/1917698201424990703",
        "source": "Twitter-Gary Marcus",
        "content": "So much winning?! https://t.co/TSbWJ1xfDB",
        "hot": "",
        "time": "2025-04-30 21:50:54",
        "timestamp": 1746049854000,
        "published": "2025-04-30 21:50:54",
        "desc": "So much winning?! https://t.co/TSbWJ1xfDB",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "https://t.co/1c1WjFpOva",
        "url": "https://x.com/elonmusk/status/1917693698281787564",
        "source": "Twitter-Elon Musk",
        "content": "https://t.co/1c1WjFpOva",
        "hot": "",
        "time": "2025-04-30 21:33:01",
        "timestamp": 1746048781000,
        "published": "2025-04-30 21:33:01",
        "desc": "https://t.co/1c1WjFpOva",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Ticket prices are rising soon—don’t miss your c...",
        "url": "https://x.com/AIconference/status/1917689883906244903",
        "source": "Twitter-The AI Conference",
        "content": "Ticket prices are rising soon—don’t miss your chance to save.\nJoin thousands of developers, engineers, and tech leaders at Mission Rock this September—starting at just $750 (before prices jump to $2,600).",
        "hot": "",
        "time": "2025-04-30 21:17:51",
        "timestamp": 1746047871000,
        "published": "2025-04-30 21:17:51",
        "desc": "Ticket prices are rising soon—don’t miss your chance to save.\nJoin thousands of developers, engineers, and tech leaders at Mission Rock this September—starting at just $750 (before prices jump to $2,600).",
        "summary": "新闻内容提到门票价格即将上涨，提醒读者抓住机会以较低价格参加Mission Rock活动，该活动将于9月举行，面向开发者、工程师和技术领袖，门票价格从750美元起，之后将上涨至2600美元。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Google’s Austin Mejia is redefining AI for wear...",
        "url": "https://x.com/AIconference/status/1917689882933121455",
        "source": "Twitter-The AI Conference",
        "content": "Google’s Austin Mejia is redefining AI for wearables - health, productivity & global impact on the Pixel Watch and beyond.",
        "hot": "",
        "time": "2025-04-30 21:17:51",
        "timestamp": 1746047871000,
        "published": "2025-04-30 21:17:51",
        "desc": "Google’s Austin Mejia is redefining AI for wearables - health, productivity & global impact on the Pixel Watch and beyond.",
        "summary": "Google的Austin Mejia正在重新定义可穿戴设备上的AI技术，涉及健康、生产力及Pixel Watch等产品的全球影响。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Gemma 3 explained: Longer context, image suppor...",
        "url": "https://x.com/googleaidevs/status/1917687406481846591",
        "source": "Twitter-Google AI Developers",
        "content": "Gemma 3 explained: Longer context, image support, and a new 1B model. Read the blog for a deep dive into key enhancements → https://t.co/s1rDYsE7te https://t.co/nwEnqUJgSf",
        "hot": "",
        "time": "2025-04-30 21:08:01",
        "timestamp": 1746047281000,
        "published": "2025-04-30 21:08:01",
        "desc": "Gemma 3 explained: Longer context, image support, and a new 1B model. Read the blog for a deep dive into key enhancements → https://t.co/s1rDYsE7te https://t.co/nwEnqUJgSf",
        "summary": "Gemma 3 introduces longer context support, image capabilities, and a new 1B model. More details are available in the blog post.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Sleep smarter with the Dimensions Sleep System!...",
        "url": "https://x.com/sleepdimensions/status/1917681889697034548",
        "source": "Twitter-Dimensions* Sleep System",
        "content": "Sleep smarter with the Dimensions Sleep System! Advanced sensors and AI-driven algorithms create your perfect sleep environment. Test the prototype now and elevate your nights!",
        "hot": "",
        "time": "2025-04-30 20:46:05",
        "timestamp": 1746045965000,
        "published": "2025-04-30 20:46:05",
        "desc": "Sleep smarter with the Dimensions Sleep System! Advanced sensors and AI-driven algorithms create your perfect sleep environment. Test the prototype now and elevate your nights!",
        "summary": "Dimensions Sleep System利用先进的传感器和AI算法，为用户打造理想的睡眠环境。目前可测试原型机，提升睡眠质量。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Plot twist https://t.co/2zyCsbDVyv",
        "url": "https://x.com/tunguz/status/1917681630992556069",
        "source": "Twitter-Bojan Tunguz",
        "content": "Plot twist https://t.co/2zyCsbDVyv",
        "hot": "",
        "time": "2025-04-30 20:45:04",
        "timestamp": 1746045904000,
        "published": "2025-04-30 20:45:04",
        "desc": "Plot twist https://t.co/2zyCsbDVyv",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "\"Where we stand today is not defined by the cap...",
        "url": "https://x.com/natolambert/status/1917675819188502582",
        "source": "Twitter-Nathan Lambert",
        "content": "\"Where we stand today is not defined by the capabilities we aspire to see in our AI models, but by the capabilities they achieve with near 100% success. Until we understand why and how these are achieved, we do not know where we stand, and we cannot reliably decide where to go!\"",
        "hot": "",
        "time": "2025-04-30 20:21:58",
        "timestamp": 1746044518000,
        "published": "2025-04-30 20:21:58",
        "desc": "\"Where we stand today is not defined by the capabilities we aspire to see in our AI models, but by the capabilities they achieve with near 100% success. Until we understand why and how these are achieved, we do not know where we stand, and we cannot reliably decide where to go!\"",
        "summary": "新闻内容强调当前AI模型的实际能力应基于其接近100%成功率的表现，而非仅凭期望的未来能力。理解这些成功的原因和方式，是确定当前地位和未来方向的关键。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "China doesn't have to \"steal\". There's plenty ...",
        "url": "https://x.com/AForceForGood/status/1917671403286921421",
        "source": "Twitter-AForceForGood",
        "content": "China doesn't have to \"steal\". There's plenty of technology lying around that is being modified by brilliant and motivated Chinese scientists who are currently making a nuclear power breakthrough using abandoned US research https://t.co/E6PezePUpl",
        "hot": "",
        "time": "2025-04-30 20:04:25",
        "timestamp": 1746043465000,
        "published": "2025-04-30 20:04:25",
        "desc": "China doesn't have to \"steal\". There's plenty of technology lying around that is being modified by brilliant and motivated Chinese scientists who are currently making a nuclear power breakthrough using abandoned US research https://t.co/E6PezePUpl",
        "summary": "新闻提到中国科学家利用美国废弃的研究进行核能技术突破，无需通过盗窃获取技术。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "On May 21, @NexlaInc presents the Data + AI Int...",
        "url": "https://x.com/KirkDBorne/status/1917663748048802131",
        "source": "Twitter-Kirk Borne",
        "content": "On May 21, @NexlaInc presents the Data + AI Integration Summit—with a remarkable lineup of speakers: https://t.co/QZeBn1g2r8 #Ad\nLearn essential Data Engineering & Data Integration Modernization Best Practices to make your data AI-ready and to succeed with enterprise AI.",
        "hot": "",
        "time": "2025-04-30 19:34:00",
        "timestamp": 1746041640000,
        "published": "2025-04-30 19:34:00",
        "desc": "On May 21, @NexlaInc presents the Data + AI Integration Summit—with a remarkable lineup of speakers: https://t.co/QZeBn1g2r8 #Ad\nLearn essential Data Engineering & Data Integration Modernization Best Practices to make your data AI-ready and to succeed with enterprise AI.",
        "summary": "NexlaInc将于5月21日举办Data + AI集成峰会，分享数据工程与数据集成现代化最佳实践，帮助企业实现数据AI就绪并成功应用企业级AI。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "FRIDAY: Join Zach Pandl @LowBeta_, Head of Rese...",
        "url": "https://x.com/Grayscale/status/1917648431767572899",
        "source": "Twitter-Grayscale",
        "content": "FRIDAY: Join Zach Pandl @LowBeta_, Head of Research, for a timely discussion on crypto markets, macro, and the outlook for the digital assets industry.\n📆 May 2 - 11:00 AM ET\nFor financial professionals\nRegister: https://t.co/IqoitjNRNb https://t.co/m0VkEuJkiI",
        "hot": "",
        "time": "2025-04-30 18:33:08",
        "timestamp": 1746037988000,
        "published": "2025-04-30 18:33:08",
        "desc": "FRIDAY: Join Zach Pandl @LowBeta_, Head of Research, for a timely discussion on crypto markets, macro, and the outlook for the digital assets industry.\n📆 May 2 - 11:00 AM ET\nFor financial professionals\nRegister: https://t.co/IqoitjNRNb https://t.co/m0VkEuJkiI",
        "summary": "Zach Pandl, Head of Research at LowBeta_, will discuss crypto markets, macro trends, and the future of the digital assets industry on May 2 at 11:00 AM ET. The event is aimed at financial professionals.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Will AI transform humanity or follow the roadma...",
        "url": "https://x.com/americans4ri/status/1917613988205965747",
        "source": "Twitter-Americans for Responsible Innovation",
        "content": "Will AI transform humanity or follow the roadmap of previous technological advances?\nJoin us for a virtual panel featuring AI thought leaders Eli Lifland and Sayash Kapoor for a debate tackling those questions May 6. Register here ⬇️",
        "hot": "",
        "time": "2025-04-30 16:16:16",
        "timestamp": 1746029776000,
        "published": "2025-04-30 16:16:16",
        "desc": "Will AI transform humanity or follow the roadmap of previous technological advances?\nJoin us for a virtual panel featuring AI thought leaders Eli Lifland and Sayash Kapoor for a debate tackling those questions May 6. Register here ⬇️",
        "summary": "新闻讨论AI是否会改变人类，或遵循以往技术发展的道路，并邀请专家于5月6日进行线上辩论。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Crypto & Stablecoin Legislation Will Be Pas...",
        "url": "https://x.com/ThinkingCrypto1/status/1917572130461605926",
        "source": "Twitter-Tony Edward (Thinking Crypto Podcast)",
        "content": "Crypto & Stablecoin Legislation Will Be Passed!\nWATCH ▶️ https://t.co/Sc42IZhS1A\nCongressman Tom Emmer joined me to discuss the latest with US crypto regulations.\nTopics:\n- President Trump’s first crypto bill signed into law - repeal of the IRS DeFi Rule\n- Crypto Market https://t.co/47l91bb8tI",
        "hot": "",
        "time": "2025-04-30 13:29:57",
        "timestamp": 1746019797000,
        "published": "2025-04-30 13:29:57",
        "desc": "Crypto & Stablecoin Legislation Will Be Passed!\nWATCH ▶️ https://t.co/Sc42IZhS1A\nCongressman Tom Emmer joined me to discuss the latest with US crypto regulations.\nTopics:\n- President Trump’s first crypto bill signed into law - repeal of the IRS DeFi Rule\n- Crypto Market https://t.co/47l91bb8tI",
        "summary": "新闻讨论了美国加密货币和稳定币立法的进展，包括特朗普签署的首个加密货币法案以及对IRS DeFi规则的废除。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Prompt-to-Earn is now live on web & mobile!...",
        "url": "https://x.com/ChainOpera_AI/status/1917550471784587676",
        "source": "Twitter-ChainOpera AI",
        "content": "Prompt-to-Earn is now live on web & mobile!\nhttps://t.co/tt0vieOgUa\nCreate high-quality prompts to boost our community-owned LLM and improve decentralized model inference across the globe—smarter, faster, cheaper, and more scalable.\nLet’s BUIDL Open AI together! https://t.co/cIWullq2nn",
        "hot": "",
        "time": "2025-04-30 12:03:53",
        "timestamp": 1746014633000,
        "published": "2025-04-30 12:03:53",
        "desc": "Prompt-to-Earn is now live on web & mobile!\nhttps://t.co/tt0vieOgUa\nCreate high-quality prompts to boost our community-owned LLM and improve decentralized model inference across the globe—smarter, faster, cheaper, and more scalable.\nLet’s BUIDL Open AI together! https://t.co/cIWullq2nn",
        "summary": "Prompt-to-Earn功能现已在网页和移动设备上上线，用户可通过创建高质量提示词来增强社区拥有的大型语言模型，推动去中心化模型推理的发展。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Founders, avoid the risks of hidden costs and m...",
        "url": "https://x.com/predotdev/status/1917688611211747794",
        "source": "Twitter-pre.dev",
        "content": "Founders, avoid the risks of hidden costs and missed deadlines that come with hiring your first developers.",
        "hot": "",
        "time": "2025-04-30 21:12:48",
        "timestamp": 1746047568000,
        "published": "2025-04-30 21:12:48",
        "desc": "Founders, avoid the risks of hidden costs and missed deadlines that come with hiring your first developers.",
        "summary": "新闻提醒初创公司创始人在雇佣首批开发者时要注意隐藏成本和可能错过截止日期的风险。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Amazon updates Q Business to let companies buil...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917673951938986331",
        "source": "Twitter-Kyle Wiggers",
        "content": "Amazon updates Q Business to let companies build public-facing chatbots https://t.co/wii1zoAEqN",
        "hot": "",
        "time": "2025-04-30 20:14:33",
        "timestamp": 1746044073000,
        "published": "2025-04-30 20:14:33",
        "desc": "Amazon updates Q Business to let companies build public-facing chatbots https://t.co/wii1zoAEqN",
        "summary": "Amazon更新了Q Business，使公司能够构建面向公众的聊天机器人。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🍕🚗 @yumbrands is embracing AI to transform the ...",
        "url": "https://x.com/NVIDIAAI/status/1917670296091344922",
        "source": "Twitter-NVIDIA AI",
        "content": "🍕🚗 @yumbrands is embracing AI to transform the restaurant experience.\nAt #GTC25, we announced a strategic partnership, with a goal of deploying AI solutions in 500 restaurants.\nJoe Park joins the NVIDIA AI Podcast to share more.\n🎧 https://t.co/Oyej7F6OcZ\n📖 https://t.co/6gkQwxI9Y4",
        "hot": "",
        "time": "2025-04-30 20:00:01",
        "timestamp": 1746043201000,
        "published": "2025-04-30 20:00:01",
        "desc": "🍕🚗 @yumbrands is embracing AI to transform the restaurant experience.\nAt #GTC25, we announced a strategic partnership, with a goal of deploying AI solutions in 500 restaurants.\nJoe Park joins the NVIDIA AI Podcast to share more.\n🎧 https://t.co/Oyej7F6OcZ\n📖 https://t.co/6gkQwxI9Y4",
        "summary": "Yum! Brands正在通过AI技术革新餐厅体验，并在GTC25上宣布与合作伙伴达成战略协议，计划在500家餐厅部署AI解决方案。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "One of the top use cases for autonomous code ag...",
        "url": "https://x.com/mathemagic1an/status/1917669780951290268",
        "source": "Twitter-Jay Hack",
        "content": "One of the top use cases for autonomous code agents that has been \"solved\" by the latest wave of capabilities (Claude 3.7):\nComment @codegen on any PR with a modification request ✅\nIn ~1 year will feel crazy that we never had this before. Similar to better autocomplete. https://t.co/1FC7RSRAda",
        "hot": "",
        "time": "2025-04-30 19:57:59",
        "timestamp": 1746043079000,
        "published": "2025-04-30 19:57:59",
        "desc": "One of the top use cases for autonomous code agents that has been \"solved\" by the latest wave of capabilities (Claude 3.7):\nComment @codegen on any PR with a modification request ✅\nIn ~1 year will feel crazy that we never had this before. Similar to better autocomplete. https://t.co/1FC7RSRAda",
        "summary": "新闻讨论了Claude 3.7最新功能中，自主代码代理的一个主要应用场景：在PR中通过@codegen进行修改请求。该功能类似于更智能的自动补全，预计未来一年将变得非常普遍。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "#1 New Release!\nAI Value Creators - Beyond the...",
        "url": "https://x.com/KirkDBorne/status/1917664492877467875",
        "source": "Twitter-Kirk Borne",
        "content": "#1 New Release!\nAI Value Creators - Beyond the Generative AI User Mindset: https://t.co/QmmAdnMGFR from @OReillyMedia https://t.co/gpUxt5TVfh",
        "hot": "",
        "time": "2025-04-30 19:36:58",
        "timestamp": 1746041818000,
        "published": "2025-04-30 19:36:58",
        "desc": "#1 New Release!\nAI Value Creators - Beyond the Generative AI User Mindset: https://t.co/QmmAdnMGFR from @OReillyMedia https://t.co/gpUxt5TVfh",
        "summary": "新闻标题为“New Release! AI Value Creators - Beyond the Generative AI User Mindset”，内容提及一本由OReillyMedia发布的关于AI价值创造的新书，并附有链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Here's my conversation with Tim Sweeney (@timsw...",
        "url": "https://x.com/lexfridman/status/1917661573142765988",
        "source": "Twitter-Lex Fridman",
        "content": "Here's my conversation with Tim Sweeney (@timsweeneyepic), a legendary video game programmer, founder and CEO of Epic Games that created the Unreal Engine, Fortnite, Gears of War, Unreal Tournament, and many other groundbreaking and influential video games.\nIt's here on X in https://t.co/JuSChF64CH",
        "hot": "",
        "time": "2025-04-30 19:25:22",
        "timestamp": 1746041122000,
        "published": "2025-04-30 19:25:22",
        "desc": "Here's my conversation with Tim Sweeney (@timsweeneyepic), a legendary video game programmer, founder and CEO of Epic Games that created the Unreal Engine, Fortnite, Gears of War, Unreal Tournament, and many other groundbreaking and influential video games.\nIt's here on X in https://t.co/JuSChF64CH",
        "summary": "本文记录了与Epic Games创始人Tim Sweeney的对话，Epic Games开发了Unreal Engine、Fortnite、Gears of War等知名游戏。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/4QMKJ5wc3m",
        "url": "https://x.com/midjourney/status/1917658404308541701",
        "source": "Twitter-Midjourney",
        "content": "https://t.co/4QMKJ5wc3m",
        "hot": "",
        "time": "2025-04-30 19:12:46",
        "timestamp": 1746040366000,
        "published": "2025-04-30 19:12:46",
        "desc": "https://t.co/4QMKJ5wc3m",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Tampa is awesome. https://t.co/3emUc2wCnV",
        "url": "https://x.com/tunguz/status/1917657284496482684",
        "source": "Twitter-Bojan Tunguz",
        "content": "Tampa is awesome. https://t.co/3emUc2wCnV",
        "hot": "",
        "time": "2025-04-30 19:08:19",
        "timestamp": 1746040099000,
        "published": "2025-04-30 19:08:19",
        "desc": "Tampa is awesome. https://t.co/3emUc2wCnV",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "it is funny to me that a typewriter company (Re...",
        "url": "https://x.com/wintonARK/status/1917652357346627655",
        "source": "Twitter-Brett Winton",
        "content": "it is funny to me that a typewriter company (Remington Rand) acquired the patents for and sold the first commercial computer (the UNIVAC I)\nBy 1952 they had sold in 5 units--they had the market to themselves!\n1954: 8 more UNIVACs sold. Still healthy growth.\nAnd yet they were",
        "hot": "",
        "time": "2025-04-30 18:48:44",
        "timestamp": 1746038924000,
        "published": "2025-04-30 18:48:44",
        "desc": "it is funny to me that a typewriter company (Remington Rand) acquired the patents for and sold the first commercial computer (the UNIVAC I)\nBy 1952 they had sold in 5 units--they had the market to themselves!\n1954: 8 more UNIVACs sold. Still healthy growth.\nAnd yet they were",
        "summary": "新闻讲述了Remington Rand公司收购并销售了第一台商用计算机UNIVAC I的专利，1952年售出5台，1954年又售出8台，显示其在早期计算机市场的主导地位。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "[ α‑AGI Agents👁️✨ ]\nGitHub: https://t.co/WNdCB...",
        "url": "https://x.com/ceobillionaire/status/1917652076122804564",
        "source": "Twitter-AGI.Eth",
        "content": "[ α‑AGI Agents👁️✨ ]\nGitHub: https://t.co/WNdCB0N7eZ\nMade with ❤️ by the Alpha‑Factory Agentic Core Team\n#AGI #AIAgent #AGIALPHA https://t.co/MPCkJELGqk",
        "hot": "",
        "time": "2025-04-30 18:47:37",
        "timestamp": 1746038857000,
        "published": "2025-04-30 18:47:37",
        "desc": "[ α‑AGI Agents👁️✨ ]\nGitHub: https://t.co/WNdCB0N7eZ\nMade with ❤️ by the Alpha‑Factory Agentic Core Team\n#AGI #AIAgent #AGIALPHA https://t.co/MPCkJELGqk",
        "summary": "新闻标题为[ α‑AGI Agents👁️✨ ]，并提供了GitHub链接。内容包含#AGI、#AIAgent等标签，由Alpha‑Factory Agentic Core Team制作。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "\"OS/2 2.0 is a better DOS than DOS and a better...",
        "url": "https://x.com/wintonARK/status/1917648035716227283",
        "source": "Twitter-Brett Winton",
        "content": "\"OS/2 2.0 is a better DOS than DOS and a better Windows than Windows.\"\n-IBM, while in the process of losing a platform war\nhttps://t.co/lvR1Lq0qrh",
        "hot": "",
        "time": "2025-04-30 18:31:34",
        "timestamp": 1746037894000,
        "published": "2025-04-30 18:31:34",
        "desc": "\"OS/2 2.0 is a better DOS than DOS and a better Windows than Windows.\"\n-IBM, while in the process of losing a platform war\nhttps://t.co/lvR1Lq0qrh",
        "summary": "新闻标题和内容提到OS/2 2.0比DOS和Windows更好，同时提到IBM在失去平台战争的过程中。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🚀 AI agents are reshaping enterprise automation...",
        "url": "https://x.com/LangChainAI/status/1917646746798416121",
        "source": "Twitter-LangChain",
        "content": "🚀 AI agents are reshaping enterprise automation—and we're thrilled to partner with @UiPath to make building, deploying, and observing them easier than ever.\nRead about their:\n🔍 Native LangSmith support in UiPath LLM Gateway\n🤖 LangGraph agent support via Agent Protocol &",
        "hot": "",
        "time": "2025-04-30 18:26:27",
        "timestamp": 1746037587000,
        "published": "2025-04-30 18:26:27",
        "desc": "🚀 AI agents are reshaping enterprise automation—and we're thrilled to partner with @UiPath to make building, deploying, and observing them easier than ever.\nRead about their:\n🔍 Native LangSmith support in UiPath LLM Gateway\n🤖 LangGraph agent support via Agent Protocol &",
        "summary": "新闻介绍了AI代理如何改变企业自动化，并提到与UiPath合作，简化AI代理的构建、部署和监控过程，包括LangSmith和LangGraph的支持。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "基于你和 AI 聊天会话，让 AI 帮你成长的提示词，使用推理模型效果最佳：\n***",
        "url": "https://x.com/dotey/status/1917644594201714972",
        "source": "Twitter-宝玉",
        "content": "基于你和 AI 聊天会话，让 AI 帮你成长的提示词，使用推理模型效果最佳：\n***",
        "hot": "",
        "time": "2025-04-30 18:17:54",
        "timestamp": 1746037074000,
        "published": "2025-04-30 18:17:54",
        "desc": "基于你和 AI 聊天会话，让 AI 帮你成长的提示词，使用推理模型效果最佳：\n***",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "New video: How to run & finetune OSS on Tog...",
        "url": "https://x.com/togethercompute/status/1917641895699718580",
        "source": "Twitter-Together AI",
        "content": "New video: How to run & finetune OSS on Together AI\nhttps://t.co/R7B0htYvnl",
        "hot": "",
        "time": "2025-04-30 18:07:10",
        "timestamp": 1746036430000,
        "published": "2025-04-30 18:07:10",
        "desc": "New video: How to run & finetune OSS on Together AI\nhttps://t.co/R7B0htYvnl",
        "summary": "新闻内容为一个新视频，介绍如何在Together AI上运行和微调OSS模型。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Universal RAG\nRAG is dead, they said.\nThen yo...",
        "url": "https://x.com/omarsar0/status/1917637837295608180",
        "source": "Twitter-elvis",
        "content": "Universal RAG\nRAG is dead, they said.\nThen you see papers like this and it gives you a better understanding of the opportunities and challenges ahead.\nLots of great ideas in this paper. I've summarized a few below: https://t.co/13VRUFUQbA",
        "hot": "",
        "time": "2025-04-30 17:51:03",
        "timestamp": 1746035463000,
        "published": "2025-04-30 17:51:03",
        "desc": "Universal RAG\nRAG is dead, they said.\nThen you see papers like this and it gives you a better understanding of the opportunities and challenges ahead.\nLots of great ideas in this paper. I've summarized a few below: https://t.co/13VRUFUQbA",
        "summary": "新闻标题为'Universal RAG'，内容提到RAG已死，但随后出现的新论文展示了其未来的机会和挑战，并列举了一些优秀的想法。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/bIGHsxAM5W",
        "url": "https://x.com/tunguz/status/1917636882474692987",
        "source": "Twitter-Bojan Tunguz",
        "content": "https://t.co/bIGHsxAM5W",
        "hot": "",
        "time": "2025-04-30 17:47:15",
        "timestamp": 1746035235000,
        "published": "2025-04-30 17:47:15",
        "desc": "https://t.co/bIGHsxAM5W",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Glazing-as-a-Service",
        "url": "https://x.com/tunguz/status/1917633984873353695",
        "source": "Twitter-Bojan Tunguz",
        "content": "Glazing-as-a-Service",
        "hot": "",
        "time": "2025-04-30 17:35:44",
        "timestamp": 1746034544000,
        "published": "2025-04-30 17:35:44",
        "desc": "Glazing-as-a-Service",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "✨What Is LangSmith? Explained in 5 Minutes\nHav...",
        "url": "https://x.com/LangChainAI/status/1917632543009972632",
        "source": "Twitter-LangChain",
        "content": "✨What Is LangSmith? Explained in 5 Minutes\nHave you checked out LangSmith yet?\nIn our quick 5-min video, see how LangChain’s commercial platform helps developers improve LLM applications & agent performance at every step of the development lifecycle — from observability, https://t.co/owjebC9MlS",
        "hot": "",
        "time": "2025-04-30 17:30:00",
        "timestamp": 1746034200000,
        "published": "2025-04-30 17:30:00",
        "desc": "✨What Is LangSmith? Explained in 5 Minutes\nHave you checked out LangSmith yet?\nIn our quick 5-min video, see how LangChain’s commercial platform helps developers improve LLM applications & agent performance at every step of the development lifecycle — from observability, https://t.co/owjebC9MlS",
        "summary": "新闻介绍了LangSmith，这是LangChain的商业平台，帮助开发者在开发生命周期的每个阶段提升大型语言模型（LLM）应用和代理的性能，包括可观测性等功能。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "JetBrains releases Mellum, an ‘open’ AI coding ...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917629925516861890",
        "source": "Twitter-Kyle Wiggers",
        "content": "JetBrains releases Mellum, an ‘open’ AI coding model https://t.co/7slY4yDdin",
        "hot": "",
        "time": "2025-04-30 17:19:36",
        "timestamp": 1746033576000,
        "published": "2025-04-30 17:19:36",
        "desc": "JetBrains releases Mellum, an ‘open’ AI coding model https://t.co/7slY4yDdin",
        "summary": "JetBrains发布了名为Mellum的‘开放’AI编码模型。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "We believe AI development is entering a critica...",
        "url": "https://x.com/jackclarkSF/status/1917629786861756676",
        "source": "Twitter-Jack Clark",
        "content": "We believe AI development is entering a critical period - the moves countries make during the next few years could lead to stable, careful development of powerful technology, or an uncoordinated proliferation of extremely powerful things.",
        "hot": "",
        "time": "2025-04-30 17:19:03",
        "timestamp": 1746033543000,
        "published": "2025-04-30 17:19:03",
        "desc": "We believe AI development is entering a critical period - the moves countries make during the next few years could lead to stable, careful development of powerful technology, or an uncoordinated proliferation of extremely powerful things.",
        "summary": "新闻认为AI发展正进入关键时期，各国未来几年的举措可能引导技术稳定发展，或导致强大技术的无序扩散。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Today Anthropic submitted key recommendations o...",
        "url": "https://x.com/jackclarkSF/status/1917629783090831582",
        "source": "Twitter-Jack Clark",
        "content": "Today Anthropic submitted key recommendations on the \"Diffusion Rule\" - export controls on advanced AI chips. We believe maintaining America's compute advantage is essential for national security as powerful AI systems develop. https://t.co/lnzuK1DmAo",
        "hot": "",
        "time": "2025-04-30 17:19:02",
        "timestamp": 1746033542000,
        "published": "2025-04-30 17:19:02",
        "desc": "Today Anthropic submitted key recommendations on the \"Diffusion Rule\" - export controls on advanced AI chips. We believe maintaining America's compute advantage is essential for national security as powerful AI systems develop. https://t.co/lnzuK1DmAo",
        "summary": "Anthropic提交了关于'扩散规则'的关键建议，涉及对先进AI芯片的出口管制。他们认为保持美国在计算能力上的优势对国家安全至关重要。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Today we are releasing Gen-4 References to all ...",
        "url": "https://x.com/runwayml/status/1917628723903463526",
        "source": "Twitter-Runway",
        "content": "Today we are releasing Gen-4 References to all paid plans. Now anyone can generate consistent characters, locations and more. With References, you can use photos, generated images, 3D models or selfies to place yourself or others into any scene you can imagine.\nMore examples https://t.co/Je59RsRnyW",
        "hot": "",
        "time": "2025-04-30 17:14:50",
        "timestamp": 1746033290000,
        "published": "2025-04-30 17:14:50",
        "desc": "Today we are releasing Gen-4 References to all paid plans. Now anyone can generate consistent characters, locations and more. With References, you can use photos, generated images, 3D models or selfies to place yourself or others into any scene you can imagine.\nMore examples https://t.co/Je59RsRnyW",
        "summary": "该新闻宣布向所有付费计划开放Gen-4 References功能，用户可利用照片、生成图像、3D模型或自拍将人物或场景融入任何想象中的场景。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "smolagents is very small https://t.co/15gUMK1UeS",
        "url": "https://x.com/Thom_Wolf/status/1917617829282496519",
        "source": "Twitter-Thomas Wolf",
        "content": "smolagents is very small https://t.co/15gUMK1UeS",
        "hot": "",
        "time": "2025-04-30 16:31:32",
        "timestamp": 1746030692000,
        "published": "2025-04-30 16:31:32",
        "desc": "smolagents is very small https://t.co/15gUMK1UeS",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Why Slice is way easier than CapCut for cutting...",
        "url": "https://x.com/aonefischer/status/1917617060827283587",
        "source": "Twitter-Aaron Fischer",
        "content": "Why Slice is way easier than CapCut for cutting clips.\nCapCut is great if you want to spend 30 minutes editing.\nBut what if you just want to cut the best parts from a video fast — and get back to life?\nThat’s why I made Slice 👇 https://t.co/DP3UhXgxqp",
        "hot": "",
        "time": "2025-04-30 16:28:29",
        "timestamp": 1746030509000,
        "published": "2025-04-30 16:28:29",
        "desc": "Why Slice is way easier than CapCut for cutting clips.\nCapCut is great if you want to spend 30 minutes editing.\nBut what if you just want to cut the best parts from a video fast — and get back to life?\nThat’s why I made Slice 👇 https://t.co/DP3UhXgxqp",
        "summary": "文章比较了Slice和CapCut两款视频编辑工具，指出Slice在快速剪辑视频方面更加便捷，适合需要快速完成剪辑任务的用户。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "You can now run inference directly on the Qwen ...",
        "url": "https://x.com/togethercompute/status/1917616701249565120",
        "source": "Twitter-Together AI",
        "content": "You can now run inference directly on the Qwen 3 235B Hugging Face model page – powered by Together AI! https://t.co/0uPZHFXYe6",
        "hot": "",
        "time": "2025-04-30 16:27:03",
        "timestamp": 1746030423000,
        "published": "2025-04-30 16:27:03",
        "desc": "You can now run inference directly on the Qwen 3 235B Hugging Face model page – powered by Together AI! https://t.co/0uPZHFXYe6",
        "summary": "用户现在可以直接在Hugging Face平台上对Qwen 3 235B模型进行推理，该功能由Together AI提供支持。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Improve your LLM-based applications by 200%:\nB...",
        "url": "https://x.com/svpino/status/1917612924639797563",
        "source": "Twitter-Santiago",
        "content": "Improve your LLM-based applications by 200%:\nBuild an LLM-as-a-Judge evaluator and integrate it with your system.\nThis sounds harder than it is.\nHere is how to do it and the things you need to keep in mind:\n1/11 https://t.co/FDgOKSBAw4",
        "hot": "",
        "time": "2025-04-30 16:12:03",
        "timestamp": 1746029523000,
        "published": "2025-04-30 16:12:03",
        "desc": "Improve your LLM-based applications by 200%:\nBuild an LLM-as-a-Judge evaluator and integrate it with your system.\nThis sounds harder than it is.\nHere is how to do it and the things you need to keep in mind:\n1/11 https://t.co/FDgOKSBAw4",
        "summary": "新闻介绍了如何通过构建LLM-as-a-Judge评估器来提升基于大语言模型的应用性能，声称可提高200%。文章提供实现方法和注意事项，并附有链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "又是一波节前集中发货，最先进的数学定理证明DeepSeek-Prover V2刚刚放出来了，能...",
        "url": "https://x.com/aigclink/status/1917612344030683564",
        "source": "Twitter-AIGCLINK",
        "content": "又是一波节前集中发货，最先进的数学定理证明DeepSeek-Prover V2刚刚放出来了，能够自动推到和验证复杂的数学定理，像我们这种数学系的学渣有种被拯救的赶脚😄！\nProver-V2是一个用于自动定理证明的模型，它可以理解数学问题，并用Lean 4生成证明，也是首个用RL实现数学证明垂直场景的模型。 https://t.co/h1P60ga8ag",
        "hot": "",
        "time": "2025-04-30 16:09:44",
        "timestamp": 1746029384000,
        "published": "2025-04-30 16:09:44",
        "desc": "又是一波节前集中发货，最先进的数学定理证明DeepSeek-Prover V2刚刚放出来了，能够自动推到和验证复杂的数学定理，像我们这种数学系的学渣有种被拯救的赶脚😄！\nProver-V2是一个用于自动定理证明的模型，它可以理解数学问题，并用Lean 4生成证明，也是首个用RL实现数学证明垂直场景的模型。 https://t.co/h1P60ga8ag",
        "summary": "DeepSeek-Prover V2是一款先进的数学定理证明模型，能够自动推导和验证复杂数学定理，使用Lean 4生成证明，并首次在数学证明领域应用强化学习技术。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "DEI is poor man’s IDE",
        "url": "https://x.com/tunguz/status/1917610676547146208",
        "source": "Twitter-Bojan Tunguz",
        "content": "DEI is poor man’s IDE",
        "hot": "",
        "time": "2025-04-30 16:03:07",
        "timestamp": 1746028987000,
        "published": "2025-04-30 16:03:07",
        "desc": "DEI is poor man’s IDE",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Don’t miss our CEO Jensen Huang and @Dell Chair...",
        "url": "https://x.com/NVIDIAAI/status/1917609898067570733",
        "source": "Twitter-NVIDIA AI",
        "content": "Don’t miss our CEO Jensen Huang and @Dell Chairman & CEO Michael Dell at the Inventing the Future Keynote at #DellTechWorld.\nGet the latest insights into how we are collaborating with Dell to harness the power of AI and accelerate enterprise solutions.\nRegister now ➡️ https://t.co/TftvzvqCAH",
        "hot": "",
        "time": "2025-04-30 16:00:01",
        "timestamp": 1746028801000,
        "published": "2025-04-30 16:00:01",
        "desc": "Don’t miss our CEO Jensen Huang and @Dell Chairman & CEO Michael Dell at the Inventing the Future Keynote at #DellTechWorld.\nGet the latest insights into how we are collaborating with Dell to harness the power of AI and accelerate enterprise solutions.\nRegister now ➡️ https://t.co/TftvzvqCAH",
        "summary": "NVIDIA CEO Jensen Huang与Dell董事长兼CEO Michael Dell在DellTechWorld的Inventing the Future Keynote上讨论双方合作，利用AI加速企业解决方案。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Join us at #NYTechWeek, featuring events with:\n...",
        "url": "https://x.com/a16z/status/1917609652159930384",
        "source": "Twitter-a16z",
        "content": "Join us at #NYTechWeek, featuring events with:\n@dhaber\n@andrewchen\nThe a16z podcast\n@a16ztxo\n@speedrun\nAnd more, from June 2 to 8.\nRegister now: https://t.co/wON3TgxYe8\nAnd follow @Techweek_ for more updates. https://t.co/aL3zIz1HO3",
        "hot": "",
        "time": "2025-04-30 15:59:03",
        "timestamp": 1746028743000,
        "published": "2025-04-30 15:59:03",
        "desc": "Join us at #NYTechWeek, featuring events with:\n@dhaber\n@andrewchen\nThe a16z podcast\n@a16ztxo\n@speedrun\nAnd more, from June 2 to 8.\nRegister now: https://t.co/wON3TgxYe8\nAnd follow @Techweek_ for more updates. https://t.co/aL3zIz1HO3",
        "summary": "邀请参加#NYTechWeek活动，包括多位科技领域嘉宾和相关事件，活动时间为6月2日至8日，注册链接已提供。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "What's your favorite AI chatbot?",
        "url": "https://x.com/MIT_CSAIL/status/1917608421689549008",
        "source": "Twitter-MIT CSAIL",
        "content": "What's your favorite AI chatbot?",
        "hot": "",
        "time": "2025-04-30 15:54:09",
        "timestamp": 1746028449000,
        "published": "2025-04-30 15:54:09",
        "desc": "What's your favorite AI chatbot?",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "We need to legalize math in California\nToday t...",
        "url": "https://x.com/garrytan/status/1917606751798714627",
        "source": "Twitter-Garry Tan",
        "content": "We need to legalize math in California\nToday the anti-math education bureaucrats are trying to force the UC system to water down math standards to accept fake data science courses that don’t teach algebra\nWe interviewed @minilek, CS division chair @ Berkeley to get the low down https://t.co/cBwYbulQTw",
        "hot": "",
        "time": "2025-04-30 15:47:31",
        "timestamp": 1746028051000,
        "published": "2025-04-30 15:47:31",
        "desc": "We need to legalize math in California\nToday the anti-math education bureaucrats are trying to force the UC system to water down math standards to accept fake data science courses that don’t teach algebra\nWe interviewed @minilek, CS division chair @ Berkeley to get the low down https://t.co/cBwYbulQTw",
        "summary": "新闻讨论加州数学教育政策，批评反数学教育的官僚试图降低加州大学系统的数学标准，接受不教授代数的虚假数据科学课程。采访了伯克利计算机科学系主任以获取更多信息。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "A better title for my most recent piece may hav...",
        "url": "https://x.com/natolambert/status/1917605710344642817",
        "source": "Twitter-Nathan Lambert",
        "content": "A better title for my most recent piece may have been \"The state of play on AI progress,\" but with the share image y'all may think I'm team Gary.\nMore like team Cowen - slow steady march.\nhttps://t.co/01N3av9KaU",
        "hot": "",
        "time": "2025-04-30 15:43:23",
        "timestamp": 1746027803000,
        "published": "2025-04-30 15:43:23",
        "desc": "A better title for my most recent piece may have been \"The state of play on AI progress,\" but with the share image y'all may think I'm team Gary.\nMore like team Cowen - slow steady march.\nhttps://t.co/01N3av9KaU",
        "summary": "作者提到其最近一篇文章的标题可能应为‘AI进展的现状’，并提到由于配图可能让人误以为他支持Gary，但实际上他更倾向于Cowen的‘缓慢稳步前进’的观点。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "The popular course \"LLMs as Operating Systems: ...",
        "url": "https://x.com/DeepLearningAI/status/1917602387381924173",
        "source": "Twitter-DeepLearning.AI",
        "content": "The popular course \"LLMs as Operating Systems: Agent Memory\" just got a memorable update!\nThis free course, created with Letta and taught by its founders Charles Packer and Sarah Wooders, walks you through the MemGPT approach: using an LLM agent to manage long-term memory beyond https://t.co/KQys6c9J6i",
        "hot": "",
        "time": "2025-04-30 15:30:11",
        "timestamp": 1746027011000,
        "published": "2025-04-30 15:30:11",
        "desc": "The popular course \"LLMs as Operating Systems: Agent Memory\" just got a memorable update!\nThis free course, created with Letta and taught by its founders Charles Packer and Sarah Wooders, walks you through the MemGPT approach: using an LLM agent to manage long-term memory beyond https://t.co/KQys6c9J6i",
        "summary": "The popular course 'LLMs as Operating Systems: Agent Memory' has been updated. It teaches the MemGPT approach, using LLM agents to manage long-term memory.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "We just announced what could become the largest...",
        "url": "https://x.com/ClementDelangue/status/1917598288938782968",
        "source": "Twitter-clem 🤗",
        "content": "We just announced what could become the largest robotics hackathon ever! June 14th (it's my birthday too haha!). https://t.co/QsIPEqKehA",
        "hot": "",
        "time": "2025-04-30 15:13:53",
        "timestamp": 1746026033000,
        "published": "2025-04-30 15:13:53",
        "desc": "We just announced what could become the largest robotics hackathon ever! June 14th (it's my birthday too haha!). https://t.co/QsIPEqKehA",
        "summary": "该新闻宣布将举办可能是有史以来最大的机器人黑客马拉松，活动定于6月14日举行。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "🎟️ Tickets are sold out for Interrupt — stay tu...",
        "url": "https://x.com/LangChainAI/status/1917594807985197213",
        "source": "Twitter-LangChain",
        "content": "🎟️ Tickets are sold out for Interrupt — stay tuned for session highlights at https://t.co/2zVGY758u6. In the meantime, spend some time with event sponsor Cisco and help ensure AI works for you. #LangChain #Interrupt2025\n🔗 https://t.co/tcEXSX9BVQ https://t.co/CKSQRFROQi",
        "hot": "",
        "time": "2025-04-30 15:00:04",
        "timestamp": 1746025204000,
        "published": "2025-04-30 15:00:04",
        "desc": "🎟️ Tickets are sold out for Interrupt — stay tuned for session highlights at https://t.co/2zVGY758u6. In the meantime, spend some time with event sponsor Cisco and help ensure AI works for you. #LangChain #Interrupt2025\n🔗 https://t.co/tcEXSX9BVQ https://t.co/CKSQRFROQi",
        "summary": "Tickets for the Interrupt event have sold out, and attendees are directed to a link for session highlights. The event sponsor Cisco is mentioned, along with a reference to AI and LangChain.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Join Jensen Huang, Founder and CEO, NVIDIA, and...",
        "url": "https://x.com/NVIDIAAI/status/1917594798447300984",
        "source": "Twitter-NVIDIA AI",
        "content": "Join Jensen Huang, Founder and CEO, NVIDIA, and Anirudh Devgan, President and CEO, @Cadence for an exclusive fireside chat at CadenceLIVE.\nLearn about the future of AI, accelerated computing, and electronic design. ➡️ https://t.co/y1HvWg7tfv https://t.co/keeDdjLKFh",
        "hot": "",
        "time": "2025-04-30 15:00:01",
        "timestamp": 1746025201000,
        "published": "2025-04-30 15:00:01",
        "desc": "Join Jensen Huang, Founder and CEO, NVIDIA, and Anirudh Devgan, President and CEO, @Cadence for an exclusive fireside chat at CadenceLIVE.\nLearn about the future of AI, accelerated computing, and electronic design. ➡️ https://t.co/y1HvWg7tfv https://t.co/keeDdjLKFh",
        "summary": "NVIDIA创始人兼CEO Jensen Huang与Cadence总裁兼CEO Anirudh Devgan将在CadenceLIVE上进行独家对话，探讨AI、加速计算和电子设计的未来。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "We’re helping robots self-improve with the powe...",
        "url": "https://x.com/GoogleDeepMind/status/1917593514566901800",
        "source": "Twitter-Google DeepMind",
        "content": "We’re helping robots self-improve with the power of LLMs. 🤖\nIntroducing the Summarize, Analyze, Synthesize (SAS) prompt, which analyzes how they perform tasks based on previous actions and then suggests ways for them to get better using the medium of table tennis. 🏓 https://t.co/2LupVBkJ7Z",
        "hot": "",
        "time": "2025-04-30 14:54:55",
        "timestamp": 1746024895000,
        "published": "2025-04-30 14:54:55",
        "desc": "We’re helping robots self-improve with the power of LLMs. 🤖\nIntroducing the Summarize, Analyze, Synthesize (SAS) prompt, which analyzes how they perform tasks based on previous actions and then suggests ways for them to get better using the medium of table tennis. 🏓 https://t.co/2LupVBkJ7Z",
        "summary": "新闻介绍了利用大型语言模型（LLMs）帮助机器人通过分析任务表现并提出改进建议的方式，以乒乓球为媒介进行自我提升。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Thrilled to announce that our partnership with ...",
        "url": "https://x.com/PersonalAI_/status/1917592678038134960",
        "source": "Twitter-Personal AI",
        "content": "Thrilled to announce that our partnership with @nvidia has culminated in Personal AI Receptionist, a cutting edge solution for SMBs to adopt AI directly through their telecommunications provider, leveraging Personal AI's latest core technology.\nTo learn more about our work with https://t.co/F4yzAPe6NH",
        "hot": "",
        "time": "2025-04-30 14:51:36",
        "timestamp": 1746024696000,
        "published": "2025-04-30 14:51:36",
        "desc": "Thrilled to announce that our partnership with @nvidia has culminated in Personal AI Receptionist, a cutting edge solution for SMBs to adopt AI directly through their telecommunications provider, leveraging Personal AI's latest core technology.\nTo learn more about our work with https://t.co/F4yzAPe6NH",
        "summary": "公司宣布与NVIDIA合作推出Personal AI Receptionist，为中小企业提供通过电信运营商直接采用AI的解决方案，利用Personal AI的最新核心技术。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "How DocentPro powers AI trip planning with Lang...",
        "url": "https://x.com/LangChainAI/status/1917591537715929190",
        "source": "Twitter-LangChain",
        "content": "How DocentPro powers AI trip planning with LangGraph\n@docentpro_sf is building an AI travel assistant that helps users go from idea → itinerary → booking. Using LangGraph + LangSmith, they’ve created a modular multi-agent system that handles discovery, planning, and real-time https://t.co/lniEAZdEjZ",
        "hot": "",
        "time": "2025-04-30 14:47:04",
        "timestamp": 1746024424000,
        "published": "2025-04-30 14:47:04",
        "desc": "How DocentPro powers AI trip planning with LangGraph\n@docentpro_sf is building an AI travel assistant that helps users go from idea → itinerary → booking. Using LangGraph + LangSmith, they’ve created a modular multi-agent system that handles discovery, planning, and real-time https://t.co/lniEAZdEjZ",
        "summary": "DocentPro利用LangGraph和LangSmith构建了一个模块化的多智能体系统，用于AI旅行规划，帮助用户从想法到行程再到预订。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "AI Replies that Sound Like You\nAmazing Results ...",
        "url": "https://x.com/CranQnow/status/1917591520930324798",
        "source": "Twitter-CRANQ",
        "content": "AI Replies that Sound Like You\nAmazing Results - Free Beta ⚡",
        "hot": "",
        "time": "2025-04-30 14:47:00",
        "timestamp": 1746024420000,
        "published": "2025-04-30 14:47:00",
        "desc": "AI Replies that Sound Like You\nAmazing Results - Free Beta ⚡",
        "summary": "新闻介绍了一项AI技术，能够生成听起来像用户的回复，目前提供免费测试版。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Aero-1-Audio is out on Hugging Face\nTrained in...",
        "url": "https://x.com/_akhaliq/status/1917588659760501001",
        "source": "Twitter-AK",
        "content": "Aero-1-Audio is out on Hugging Face\nTrained in <24h on just 16×H100\nHandles 15+ min audio seamlessly\nOutperforms bigger models like Whisper, Qwen-2-Audio & commercial services from ElevenLabs/Scribe https://t.co/8lyqB4Ypdt",
        "hot": "",
        "time": "2025-04-30 14:35:38",
        "timestamp": 1746023738000,
        "published": "2025-04-30 14:35:38",
        "desc": "Aero-1-Audio is out on Hugging Face\nTrained in <24h on just 16×H100\nHandles 15+ min audio seamlessly\nOutperforms bigger models like Whisper, Qwen-2-Audio & commercial services from ElevenLabs/Scribe https://t.co/8lyqB4Ypdt",
        "summary": "Aero-1-Audio模型已在Hugging Face发布，该模型在不到24小时内使用16个H100 GPU训练完成，能够无缝处理15分钟以上的音频，并在性能上超越了Whisper、Qwen-2-Audio等大型模型及商业服务。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "ChatGPT just helped me recover a couple of Word...",
        "url": "https://x.com/tunguz/status/1917588299985674505",
        "source": "Twitter-Bojan Tunguz",
        "content": "ChatGPT just helped me recover a couple of Word documents that I didn't save before Word was force shut down. So definitely a very useful technology.",
        "hot": "",
        "time": "2025-04-30 14:34:12",
        "timestamp": 1746023652000,
        "published": "2025-04-30 14:34:12",
        "desc": "ChatGPT just helped me recover a couple of Word documents that I didn't save before Word was force shut down. So definitely a very useful technology.",
        "summary": "ChatGPT帮助用户恢复了未保存的Word文档，展示了其在数据恢复方面的实用性。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Building an MCP Server with Gradio is out\nimpo...",
        "url": "https://x.com/_akhaliq/status/1917587214164242728",
        "source": "Twitter-AK",
        "content": "Building an MCP Server with Gradio is out\nimport gradio as gr demo = gr.Interface(fn=your_function, ...) demo.launch(mcp_server=True) # ← that's it 🤯 https://t.co/x62qkRW5MD",
        "hot": "",
        "time": "2025-04-30 14:29:53",
        "timestamp": 1746023393000,
        "published": "2025-04-30 14:29:53",
        "desc": "Building an MCP Server with Gradio is out\nimport gradio as gr demo = gr.Interface(fn=your_function, ...) demo.launch(mcp_server=True) # ← that's it 🤯 https://t.co/x62qkRW5MD",
        "summary": "新闻介绍了如何使用Gradio构建MCP服务器，提供了一个简单的代码示例，并附有相关链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Last chance to apply to the @StanfordAILab Post...",
        "url": "https://x.com/StanfordHAI/status/1917587049185698188",
        "source": "Twitter-Stanford HAI",
        "content": "Last chance to apply to the @StanfordAILab Postdoctoral Fellows Program! Join @Stanford’s legacy of excellence in AI and machine learning, and collaborate with world-class experts in advancing cutting-edge research. Application ends today, April 30: https://t.co/zkub9ub4mP https://t.co/6NMonkntP3",
        "hot": "",
        "time": "2025-04-30 14:29:14",
        "timestamp": 1746023354000,
        "published": "2025-04-30 14:29:14",
        "desc": "Last chance to apply to the @StanfordAILab Postdoctoral Fellows Program! Join @Stanford’s legacy of excellence in AI and machine learning, and collaborate with world-class experts in advancing cutting-edge research. Application ends today, April 30: https://t.co/zkub9ub4mP https://t.co/6NMonkntP3",
        "summary": "斯坦福AI实验室（StanfordAILab）博士后研究员项目正在接受申请，截止日期为4月30日。该项目旨在吸引优秀人才参与人工智能和机器学习领域的前沿研究。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "We’re excited to announce the release of Qwen2....",
        "url": "https://x.com/Alibaba_Qwen/status/1917585963775320086",
        "source": "Twitter-Qwen",
        "content": "We’re excited to announce the release of Qwen2.5-Omni-3B, enabling developers with lightweight GPU accessibility!\n🔹 Compared to Qwen2.5-Omni-7B model, the 3B version achieves a remarkable 50%+ reduction 🚀 in VRAM consumption during long-context sequence processing (~25k https://t.co/jU7SyD91ph",
        "hot": "",
        "time": "2025-04-30 14:24:55",
        "timestamp": 1746023095000,
        "published": "2025-04-30 14:24:55",
        "desc": "We’re excited to announce the release of Qwen2.5-Omni-3B, enabling developers with lightweight GPU accessibility!\n🔹 Compared to Qwen2.5-Omni-7B model, the 3B version achieves a remarkable 50%+ reduction 🚀 in VRAM consumption during long-context sequence processing (~25k https://t.co/jU7SyD91ph",
        "summary": "Qwen2.5-Omni-3B模型发布，相比7B版本在长上下文序列处理时VRAM消耗减少50%以上，适合轻量级GPU使用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "In-Context Edit\nEnabling Instructional Image E...",
        "url": "https://x.com/_akhaliq/status/1917585421325717571",
        "source": "Twitter-AK",
        "content": "In-Context Edit\nEnabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer https://t.co/s9jrW94ynn",
        "hot": "",
        "time": "2025-04-30 14:22:46",
        "timestamp": 1746022966000,
        "published": "2025-04-30 14:22:46",
        "desc": "In-Context Edit\nEnabling Instructional Image Editing with In-Context Generation in Large Scale Diffusion Transformer https://t.co/s9jrW94ynn",
        "summary": "该新闻介绍了一种通过上下文生成实现指令图像编辑的技术，利用大规模扩散变换器模型进行图像编辑。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "love gmail design language consistency across t...",
        "url": "https://x.com/nathanbenaich/status/1917585301452775705",
        "source": "Twitter-Nathan Benaich",
        "content": "love gmail design language consistency across the product\nand the 2024 footer https://t.co/RJSYzD2ZoE",
        "hot": "",
        "time": "2025-04-30 14:22:17",
        "timestamp": 1746022937000,
        "published": "2025-04-30 14:22:17",
        "desc": "love gmail design language consistency across the product\nand the 2024 footer https://t.co/RJSYzD2ZoE",
        "summary": "新闻内容表达了对Gmail设计语言在整个产品中保持一致性的喜爱，并提到了2024年页脚的链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "NEW: Xiaomi releases MiMo-7B, a new language mo...",
        "url": "https://x.com/omarsar0/status/1917582720341008814",
        "source": "Twitter-elvis",
        "content": "NEW: Xiaomi releases MiMo-7B, a new language model for reasoning tasks.\nMiMo-7B is explicitly designed for advanced reasoning across math and code.\nDon't think I've seen too many good, SMALL reasoning models.\nHere is my quick recap: https://t.co/1Zl5vhbVqz",
        "hot": "",
        "time": "2025-04-30 14:12:02",
        "timestamp": 1746022322000,
        "published": "2025-04-30 14:12:02",
        "desc": "NEW: Xiaomi releases MiMo-7B, a new language model for reasoning tasks.\nMiMo-7B is explicitly designed for advanced reasoning across math and code.\nDon't think I've seen too many good, SMALL reasoning models.\nHere is my quick recap: https://t.co/1Zl5vhbVqz",
        "summary": "Xiaomi has released MiMo-7B, a new language model designed for advanced reasoning tasks in math and code.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "https://t.co/IttJyF9Cou",
        "url": "https://x.com/tunguz/status/1917579736404066732",
        "source": "Twitter-Bojan Tunguz",
        "content": "https://t.co/IttJyF9Cou",
        "hot": "",
        "time": "2025-04-30 14:00:10",
        "timestamp": 1746021610000,
        "published": "2025-04-30 14:00:10",
        "desc": "https://t.co/IttJyF9Cou",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "The Leaderboard Illusion\nSingh et al.: https:/...",
        "url": "https://x.com/ceobillionaire/status/1917578172587033071",
        "source": "Twitter-AGI.Eth",
        "content": "The Leaderboard Illusion\nSingh et al.: https://t.co/MyRfZCjNjy\n#ArtificialIntelligence #DeepLearning #MachineLearning https://t.co/KdlCgulHHK",
        "hot": "",
        "time": "2025-04-30 13:53:57",
        "timestamp": 1746021237000,
        "published": "2025-04-30 13:53:57",
        "desc": "The Leaderboard Illusion\nSingh et al.: https://t.co/MyRfZCjNjy\n#ArtificialIntelligence #DeepLearning #MachineLearning https://t.co/KdlCgulHHK",
        "summary": "新闻标题为'The Leaderboard Illusion'，内容提及Singh等人的一项研究，并关联到人工智能、深度学习和机器学习领域。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Wish I could use full self driving to text and ...",
        "url": "https://x.com/Austen/status/1917575290584199508",
        "source": "Twitter-Austen Allred",
        "content": "Wish I could use full self driving to text and drive",
        "hot": "",
        "time": "2025-04-30 13:42:30",
        "timestamp": 1746020550000,
        "published": "2025-04-30 13:42:30",
        "desc": "Wish I could use full self driving to text and drive",
        "summary": "用户表达了希望在完全自动驾驶状态下能够进行文字输入和驾驶的愿望。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Intel’s chief commercial officer and sales lead...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917572030662074770",
        "source": "Twitter-Kyle Wiggers",
        "content": "Intel’s chief commercial officer and sales lead, Christoph Schell, resigns https://t.co/vrXGTpGeuD",
        "hot": "",
        "time": "2025-04-30 13:29:33",
        "timestamp": 1746019773000,
        "published": "2025-04-30 13:29:33",
        "desc": "Intel’s chief commercial officer and sales lead, Christoph Schell, resigns https://t.co/vrXGTpGeuD",
        "summary": "Intel的首席商业官兼销售负责人Christoph Schell辞职。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Supio, an AI-powered legal analysis platform, l...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917572029508624704",
        "source": "Twitter-Kyle Wiggers",
        "content": "Supio, an AI-powered legal analysis platform, lands $60M https://t.co/UcwuSbDdwz",
        "hot": "",
        "time": "2025-04-30 13:29:33",
        "timestamp": 1746019773000,
        "published": "2025-04-30 13:29:33",
        "desc": "Supio, an AI-powered legal analysis platform, lands $60M https://t.co/UcwuSbDdwz",
        "summary": "Supio，一个基于AI的法律分析平台，成功获得了6000万美元的资金。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Time Series Analysis with Spark — A practical g...",
        "url": "https://x.com/KirkDBorne/status/1917570382313447755",
        "source": "Twitter-Kirk Borne",
        "content": "Time Series Analysis with Spark — A practical guide to master the fundamentals of processing, modeling, and forecasting time series with Apache Spark: https://t.co/1dqgH7wrS6 by Databricks Senior Solutions Architect Yoni Ramaswami, from @PacktDataML #ad\n𝓚𝓮𝔂 𝓕𝓮𝓪𝓽𝓾𝓻𝓮𝓼: https://t.co/raS1rGzu70",
        "hot": "",
        "time": "2025-04-30 13:23:00",
        "timestamp": 1746019380000,
        "published": "2025-04-30 13:23:00",
        "desc": "Time Series Analysis with Spark — A practical guide to master the fundamentals of processing, modeling, and forecasting time series with Apache Spark: https://t.co/1dqgH7wrS6 by Databricks Senior Solutions Architect Yoni Ramaswami, from @PacktDataML #ad\n𝓚𝓮𝔂 𝓕𝓮𝓪𝓽𝓾𝓻𝓮𝓼: https://t.co/raS1rGzu70",
        "summary": "本文由Databricks高级解决方案架构师Yoni Ramaswami撰写，提供使用Apache Spark进行时间序列分析的实用指南，涵盖处理、建模和预测时间序列数据的方法。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "我们用3天时间给无忧渡制作了新的多重结结局，其实这是我一直感兴趣的事，AI让每个故事都能有平行...",
        "url": "https://x.com/hq4ai/status/1917568144295747907",
        "source": "Twitter-汗青 HQ",
        "content": "我们用3天时间给无忧渡制作了新的多重结结局，其实这是我一直感兴趣的事，AI让每个故事都能有平行宇宙的不同剧情走向。\n这次使用了即梦3.0视频和即梦AI的全站创作工具，确实非常方便 https://t.co/ABTE0uaYd1",
        "hot": "",
        "time": "2025-04-30 13:14:06",
        "timestamp": 1746018846000,
        "published": "2025-04-30 13:14:06",
        "desc": "我们用3天时间给无忧渡制作了新的多重结结局，其实这是我一直感兴趣的事，AI让每个故事都能有平行宇宙的不同剧情走向。\n这次使用了即梦3.0视频和即梦AI的全站创作工具，确实非常方便 https://t.co/ABTE0uaYd1",
        "summary": "新闻介绍了使用AI技术在3天内为游戏《无忧渡》制作了多重结局，利用即梦3.0视频和即梦AI的全站创作工具实现平行宇宙的不同剧情走向。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "We’re thrilled to announce the launch of Qwen 3...",
        "url": "https://x.com/togethercompute/status/1917566302455226622",
        "source": "Twitter-Together AI",
        "content": "We’re thrilled to announce the launch of Qwen 3 on Together AI.\nQwen3 235B A22B, a state of the art hybrid reasoning model, is now available on the Together API. It excels in tool calling, coding, multi-lingual tasks, math, and general tasks.\nLink & details below! https://t.co/xaeLc3g83y",
        "hot": "",
        "time": "2025-04-30 13:06:47",
        "timestamp": 1746018407000,
        "published": "2025-04-30 13:06:47",
        "desc": "We’re thrilled to announce the launch of Qwen 3 on Together AI.\nQwen3 235B A22B, a state of the art hybrid reasoning model, is now available on the Together API. It excels in tool calling, coding, multi-lingual tasks, math, and general tasks.\nLink & details below! https://t.co/xaeLc3g83y",
        "summary": "Together AI宣布推出Qwen3 235B A22B，这是一种先进的混合推理模型，擅长工具调用、编程、多语言任务、数学和通用任务，现已通过Together API提供。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "It’s official: @SAP Databricks is now GA on AWS...",
        "url": "https://x.com/databricks/status/1917566068194677137",
        "source": "Twitter-Databricks",
        "content": "It’s official: @SAP Databricks is now GA on AWS. SAP customers can now unlock data intelligence across their SAP data and external sources—enabling improved governance, advanced analytics, and AI use cases https://t.co/3PBn5ExZyu https://t.co/O9nUOLUt3b",
        "hot": "",
        "time": "2025-04-30 13:05:51",
        "timestamp": 1746018351000,
        "published": "2025-04-30 13:05:51",
        "desc": "It’s official: @SAP Databricks is now GA on AWS. SAP customers can now unlock data intelligence across their SAP data and external sources—enabling improved governance, advanced analytics, and AI use cases https://t.co/3PBn5ExZyu https://t.co/O9nUOLUt3b",
        "summary": "SAP Databricks现已在AWS上正式发布，使SAP客户能够整合SAP数据和外部数据源，实现更高级的数据分析和AI应用。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "If you’re picking your AI models based on publi...",
        "url": "https://x.com/ClementDelangue/status/1917565202633023505",
        "source": "Twitter-clem 🤗",
        "content": "If you’re picking your AI models based on public generalist leaderboards, you’re doing it wrong.\nIn my opinion, evaluation & model picking is at least 30% of the work of any great AI builder and it’s a mix of public generalist and specialized leaderboards, social signals (likes https://t.co/3vOHcLd657",
        "hot": "",
        "time": "2025-04-30 13:02:25",
        "timestamp": 1746018145000,
        "published": "2025-04-30 13:02:25",
        "desc": "If you’re picking your AI models based on public generalist leaderboards, you’re doing it wrong.\nIn my opinion, evaluation & model picking is at least 30% of the work of any great AI builder and it’s a mix of public generalist and specialized leaderboards, social signals (likes https://t.co/3vOHcLd657",
        "summary": "新闻指出，仅依据公共通用排行榜选择AI模型是错误的做法，强调评估和模型选择是AI开发中的重要部分，应结合公共和专业排行榜以及社交信号等多方面因素。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Length-Controlled AlpacaEval: A Simple Way to D...",
        "url": "https://x.com/ceobillionaire/status/1917563574836420950",
        "source": "Twitter-AGI.Eth",
        "content": "Length-Controlled AlpacaEval: A Simple Way to Debias Automatic Evaluators\nDubois et al.: https://t.co/UcKX6P0lYS\n#ArtificialIntelligence #DeepLearning #MachineLearning https://t.co/gP3n6vucjl",
        "hot": "",
        "time": "2025-04-30 12:55:57",
        "timestamp": 1746017757000,
        "published": "2025-04-30 12:55:57",
        "desc": "Length-Controlled AlpacaEval: A Simple Way to Debias Automatic Evaluators\nDubois et al.: https://t.co/UcKX6P0lYS\n#ArtificialIntelligence #DeepLearning #MachineLearning https://t.co/gP3n6vucjl",
        "summary": "新闻介绍了一种名为Length-Controlled AlpacaEval的方法，用于减少自动评估器的偏见。该研究由Dubois等人发表，涉及人工智能和机器学习领域。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "DeepSeek upgrades its math-focused AI model Pro...",
        "url": "https://x.com/Kyle_L_Wiggers/status/1917561970871406945",
        "source": "Twitter-Kyle Wiggers",
        "content": "DeepSeek upgrades its math-focused AI model Prover https://t.co/AX2dWe1EOq",
        "hot": "",
        "time": "2025-04-30 12:49:35",
        "timestamp": 1746017375000,
        "published": "2025-04-30 12:49:35",
        "desc": "DeepSeek upgrades its math-focused AI model Prover https://t.co/AX2dWe1EOq",
        "summary": "DeepSeek has upgraded its math-focused AI model called Prover.",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Overall, our work suggests that engagement from...",
        "url": "https://x.com/sarahookr/status/1917556470528500060",
        "source": "Twitter-Sara Hooker",
        "content": "Overall, our work suggests that engagement from a handful of providers and preferential policies from @lmarena_ai towards the same small group have created conditions to overfit to Arena-specific dynamics rather than general model quality.\nI remain optimistic this can be fixed. https://t.co/edVmzBALvU",
        "hot": "",
        "time": "2025-04-30 12:27:43",
        "timestamp": 1746016063000,
        "published": "2025-04-30 12:27:43",
        "desc": "Overall, our work suggests that engagement from a handful of providers and preferential policies from @lmarena_ai towards the same small group have created conditions to overfit to Arena-specific dynamics rather than general model quality.\nI remain optimistic this can be fixed. https://t.co/edVmzBALvU",
        "summary": "该新闻指出，由于少数提供者和@lmarena_ai的偏好政策，导致模型过度适应Arena特定动态，而非普遍模型质量。作者对此仍持乐观态度，并提供了相关链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Run this command to get the first clue of a sca...",
        "url": "https://x.com/svpino/status/1917553670667002088",
        "source": "Twitter-Santiago",
        "content": "Run this command to get the first clue of a scavenger hunt and have some fun:\n$ curl -L squ .re/the-great-code-chase\n(Remove the space between \"squ\" and \".re\"):\nThis is for software developers, but feel free to join if you want to have some fun, explore the API, win some https://t.co/V5S0sTnqu5",
        "hot": "",
        "time": "2025-04-30 12:16:36",
        "timestamp": 1746015396000,
        "published": "2025-04-30 12:16:36",
        "desc": "Run this command to get the first clue of a scavenger hunt and have some fun:\n$ curl -L squ .re/the-great-code-chase\n(Remove the space between \"squ\" and \".re\"):\nThis is for software developers, but feel free to join if you want to have some fun, explore the API, win some https://t.co/V5S0sTnqu5",
        "summary": "新闻内容提供了一个命令，用于参与一个寻宝游戏，参与者可以通过执行该命令获取线索并探索API，活动主要面向软件开发者。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "Catfishing with AI is absolutely nuts. https://...",
        "url": "https://x.com/tunguz/status/1917553285885747314",
        "source": "Twitter-Bojan Tunguz",
        "content": "Catfishing with AI is absolutely nuts. https://t.co/bMIyyHiso4",
        "hot": "",
        "time": "2025-04-30 12:15:04",
        "timestamp": 1746015304000,
        "published": "2025-04-30 12:15:04",
        "desc": "Catfishing with AI is absolutely nuts. https://t.co/bMIyyHiso4",
        "summary": "新闻标题指出使用AI进行猫钓鱼（网络欺骗）令人震惊，并附有相关链接。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "It is critical for scientific integrity that we...",
        "url": "https://x.com/sarahookr/status/1917547727715721632",
        "source": "Twitter-Sara Hooker",
        "content": "It is critical for scientific integrity that we trust our measure of progress.\nThe @lmarena_ai has become the go-to evaluation for AI progress.\nOur release today demonstrates the difficulty in maintaining fair evaluations on @lmarena_ai, despite best intentions. https://t.co/dHjLF5hI1u",
        "hot": "",
        "time": "2025-04-30 11:52:59",
        "timestamp": 1746013979000,
        "published": "2025-04-30 11:52:59",
        "desc": "It is critical for scientific integrity that we trust our measure of progress.\nThe @lmarena_ai has become the go-to evaluation for AI progress.\nOur release today demonstrates the difficulty in maintaining fair evaluations on @lmarena_ai, despite best intentions. https://t.co/dHjLF5hI1u",
        "summary": "新闻强调了科学诚信的重要性，并指出@lmarena_ai已成为评估AI进展的主要工具。今日发布的消息展示了在@lmarena_ai上保持公平评估的难度。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "✨ Introducing Instant Film Effect🎉\n🏞️Travel sho...",
        "url": "https://x.com/Kling_ai/status/1917535126592053377",
        "source": "Twitter-Kling AI",
        "content": "✨ Introducing Instant Film Effect🎉\n🏞️Travel shots, 👫 group photos, 🐶 pet smiles—Bring Your Moments to Life in 3D Polaroid Style!\n#KlingAI #InstantFilmEffect https://t.co/1MGVD2JLew",
        "hot": "",
        "time": "2025-04-30 11:02:54",
        "timestamp": 1746010974000,
        "published": "2025-04-30 11:02:54",
        "desc": "✨ Introducing Instant Film Effect🎉\n🏞️Travel shots, 👫 group photos, 🐶 pet smiles—Bring Your Moments to Life in 3D Polaroid Style!\n#KlingAI #InstantFilmEffect https://t.co/1MGVD2JLew",
        "summary": "新闻介绍了KlingAI推出的Instant Film Effect功能，可以将旅行照、宠物照等照片转换为3D宝丽来风格，增强照片的视觉效果。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    },
    {
        "title": "GM 👁️✨",
        "url": "https://x.com/ceobillionaire/status/1917533050302337497",
        "source": "Twitter-AGI.Eth",
        "content": "GM 👁️✨",
        "hot": "",
        "time": "2025-04-30 10:54:39",
        "timestamp": 1746010479000,
        "published": "2025-04-30 10:54:39",
        "desc": "GM 👁️✨",
        "summary": "[摘要无法生成：无内容或来源信息不足]",
        "is_tech": true,
        "summary_source": "无内容",
        "is_processed": true
    },
    {
        "title": "Morgan Stanley projects humanoid revenues will ...",
        "url": "https://x.com/azeem/status/1917519307850014854",
        "source": "Twitter-Azeem Azhar",
        "content": "Morgan Stanley projects humanoid revenues will explode from effectively zero today to $4.7 trillion by 2050—roughly equivalent to Japan’s current GDP.\nLow-income countries barely register on this chart, suggesting a new dimension of global inequality forming around physical https://t.co/WZ5H9uJ5bC",
        "hot": "",
        "time": "2025-04-30 10:00:03",
        "timestamp": 1746007203000,
        "published": "2025-04-30 10:00:03",
        "desc": "Morgan Stanley projects humanoid revenues will explode from effectively zero today to $4.7 trillion by 2050—roughly equivalent to Japan’s current GDP.\nLow-income countries barely register on this chart, suggesting a new dimension of global inequality forming around physical https://t.co/WZ5H9uJ5bC",
        "summary": "摩根士丹利预测人形机器人收入将从目前的几乎为零增长到2050年的4.7万亿美元，相当于日本当前的GDP。低收入国家在这一增长中几乎不占份额，可能加剧全球不平等。",
        "is_tech": true,
        "summary_source": "AI生成",
        "is_processed": true
    }
]